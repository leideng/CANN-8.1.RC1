#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search import util
from schedule_search.global_manager import MultiprocessManager
from schedule_search.ts_env.te_auto_schedule_env import clear_shared_dict


def search_schedule(output_tensor, option):
    """
    :param option:
    :param output_tensor:
    :return 1) True or False 2) Best schedule obj
    """
    # 用户指定的option覆盖更新配置的option
    option = util.init_option(option)

    # 初始化输出目录
    util.init_output_dir(option)

    error_res = (False, None)
    search_algo = option.get("search_algo", "rl")
    if search_algo == 'random':
        from schedule_search.controller \
            import random_search as searcher  # pylint: disable=C0415
    else:
        log.err("Only support random!")
        return error_res

    global_multiprocess_mgr = MultiprocessManager()
    global_multiprocess_mgr.init_shared_dict()

    ret, best_action_dict = searcher.search(output_tensor, option)
    if not ret or best_action_dict is None:
        log.err("Run search fail!")
        return error_res
    log.info("search for best_action succ!")
    # 生成该语义空间中的Schedule对象
    ret, best_sch_path = searcher.gen_schedule(best_action_dict, output_tensor,
                                               option)

    if not ret or best_sch_path is None:
        log.err("Generate best schedule code fail!")
        return error_res
    log.info("gen_sch by best_action succ, path is %s!", best_sch_path)

    clear_shared_dict()
    global_multiprocess_mgr.shutdown()
    return ret, best_sch_path
