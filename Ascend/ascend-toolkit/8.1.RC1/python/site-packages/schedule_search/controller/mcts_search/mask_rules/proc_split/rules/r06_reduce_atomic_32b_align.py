#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from functools import reduce as functools_reduce

from schedule_search.controller.mcts_search.features import SEARCH_N
from schedule_search.ts_env import env_util
from schedule_search.ts_env.tensor_cfg import AXIS_CNT
from schedule_search.ts_env.tensor_cfg import ActionTensorCfg


def proc(progress, action_mask):  # pylint: disable=R0912,R0914
    """
    规则内容：reduce atomic的reduce nist，如果切普通轴尾块要32对齐
    """
    # 非reduce nist不处理
    if progress.op_schedule_info.tiling_case != 2:
        return action_mask

    # split_axis_type非axis不处理
    stage_index = progress.todo.stage_index
    stage_info = progress.op_schedule_info.stages_info[stage_index]
    split_axis_type = stage_info.get('split_axis_type', 'reduce_axis')
    if split_axis_type == 'reduce_axis':
        return action_mask

    # block_size
    stage = progress.op_schedule_info.schedule_obj.stages[stage_index]
    stage_dtype = stage.op.output(0).dtype
    block_size = env_util.get_block_num(stage_dtype)

    total_size = 1
    curr_stage_nonzero_axes = progress.get_nonzero_axes(stage_index)
    if progress.todo.axis_index != len(curr_stage_nonzero_axes) - 1:
        items = curr_stage_nonzero_axes[progress.todo.axis_index + 1:]
        total_size = functools_reduce(lambda x, y: x * y, items)

    # 导致不对齐32byte的mask掉
    factor_index = \
        ActionTensorCfg.split_factor_s + \
        progress.todo.cache_layer * AXIS_CNT + \
        progress.todo.axis_index
    factor = progress.action_tensor[stage_index][factor_index]
    axis_len = curr_stage_nonzero_axes[progress.todo.axis_index]
    for i in range(SEARCH_N):
        # 考虑sub_action
        # factor没有采样完成，看其下的所有可能factor是否有满足条件的
        sub_action_index = progress.todo.sub_action_index
        sub_factor = pow(SEARCH_N, sub_action_index)
        if sub_action_index > 0:
            min_split_factor = factor + sub_factor * i
            max_split_factor = min_split_factor + sub_factor
            split_factor_list = list(range(min_split_factor, max_split_factor))
        # factor全部采样完成，看自己是否满足条件
        else:
            split_factor_list = [factor + sub_factor * i]
        mask_flag = True
        for split_factor in split_factor_list:
            tail_size = axis_len % split_factor
            # 整除场景取factor
            if tail_size == 0:
                tail_size = split_factor
            # 每一块数据32byte对齐
            if (total_size * split_factor) % block_size == 0 \
                    and (total_size * tail_size) % block_size == 0:
                mask_flag = False
                break
        if mask_flag:
            action_mask[i] = 0

    # 不能全部都mask掉
    if sum(action_mask) == 0:
        action_mask[0] = 1

    return action_mask
