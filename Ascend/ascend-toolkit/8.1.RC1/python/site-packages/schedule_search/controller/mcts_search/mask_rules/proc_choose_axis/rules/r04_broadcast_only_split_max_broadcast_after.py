#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.controller.mcts_search.features import SEARCH_N


def mask_proc(action_mask, max_axis, nonzero_axes): # pylint: disable=R0912
    """

    :param action_mask:
    :param max_axis:
    :param nonzero_axes:
    :return:
    """
    log.dbg("need broadcast clean.")

    # max_axis之前的，包括max_axis，全部mask
    for idx in range(SEARCH_N):
        if idx <= max_axis:
            action_mask[idx] = 0

    # 不能全部被mask
    if sum(action_mask) == 0:
        for idx in range(SEARCH_N):
            if max_axis < idx <= len(nonzero_axes) - 1:
                action_mask[idx] = 1

    return action_mask


def proc(progress, action_mask):  # pylint: disable=R0911,R0912
    """
    规则内容：
    1）算子只包含broadcast_last，且不仅broadcast最后一根轴，还broadcast非最后一根轴，
    则只能切最后一根非broadcast轴之后的broadcast轴
    2）算子只包含broadcast_nist，且最后一根broadcast轴之后的所有普通轴不是32b对齐的，
    则只能切最后一根broadcast轴之后的非broadcast轴
    """
    # 不是最后一个stage不处理
    if progress.todo.stage_index != progress.stage_num - 1:
        return action_mask

    # 多输出不处理
    if len(progress.op_schedule_info.output_info_list) > 1:
        return action_mask

    nonzero_axes = progress.get_nonzero_axes(progress.todo.stage_index)
    broadcast_type = progress.op_schedule_info.broadcast_dict.get('type', None)

    # 1、只有broadcast_last tensor, 且所有的都只broadcast了最后一根轴，不处理
    if broadcast_type == 'last_without_nist':
        return action_mask

    # 2、只有broadcast_last tensor, 但有的不仅broadcast最后一根轴，
    # 还broadcast了非最后一根轴，
    # 只能切最后一根非broadcast轴之后的broadcast轴
    if broadcast_type == 'last_with_nist':
        # 进行mask
        max_last_norm_axis = progress.op_schedule_info. \
            broadcast_dict['max_axis']
        action_mask = mask_proc(action_mask, max_last_norm_axis, nonzero_axes)
        return action_mask

    # 3、只有broadcast_nist tensor，只能切最后一根broadcast轴之后的非broadcast轴
    if broadcast_type == 'nist':
        # 最后一根broadcast轴之后的所有普通轴是32b对齐的，不处理
        broadcast_dict = progress.op_schedule_info.broadcast_dict
        is_align = broadcast_dict['is_align']
        if is_align:
            return action_mask

        # 有一些特殊的broadcast不需要处理
        special_broadcast = broadcast_dict['special_broadcast']
        if special_broadcast:
            return action_mask

        # 进行mask
        max_last_cb_axis = broadcast_dict['max_axis']
        action_mask = mask_proc(action_mask, max_last_cb_axis, nonzero_axes)
        return action_mask

    # 4、没有broadcast，不处理
    return action_mask
