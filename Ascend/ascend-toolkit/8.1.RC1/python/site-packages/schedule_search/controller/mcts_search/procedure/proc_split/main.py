#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
import copy

from schedule_search import comm as global_comm
from schedule_search.controller.mcts_search.procedure import comm
from schedule_search.controller.mcts_search.procedure.action import ActionType
from schedule_search.controller.mcts_search.procedure.action import \
    SearcherAction
from schedule_search.controller.search_comm import get_split_sub_tree_depth
import schedule_search.ts_env.tensor_to_code.t2c_util as t2c_util


def is_axis_need_split(progress):
    '''
    判断当前轴是否需要切分当前cache layer
    '''
    if progress.c_op not in global_comm.MAD_OP_ID_LIST:
        return False

    if progress.todo.axis_index <= 0:
        return False

    has_batch, _ = t2c_util.gemm_identify(progress.op_schedule_info)
    if has_batch and progress.todo.axis_index == 1:
        return False

    return True


def is_need_split_in_cache_layer0(progress):
    '''
    判断当前轴是否需要切分cache layer 0即L1或UB
    '''
    if progress.todo.cache_layer <= 0:
        return False

    stage_tag = progress.op_schedule_info.stages_info[
        progress.todo.stage_index].get('tag')

    if stage_tag in global_comm.MAD_TAG_LIST:
        at_dict = progress.op_schedule_info.at_dict
        at_index = at_dict[progress.todo.stage_index]
        need_split_l0 = progress.op_schedule_info.stages_info[at_index].get(
            'need_split_l0')

        if need_split_l0:
            return False

    return True


def proc(progress):  # pylint: disable=R0912
    """

    :param progress:
    """

    # 切分尚未完成，则继续切
    if progress.todo.sub_action_index > 0:
        next_todo = copy.deepcopy(progress.todo)
        next_todo.action_value = None
        next_todo.sub_action_index -= 1

    elif progress.todo.choose_axis_and_split_map.get("times") > 1:
        choose_axis_and_split_map = {"times":progress.todo.choose_axis_and_split_map.get("times") - 1,
                                     "chosen_axes":progress.todo.choose_axis_and_split_map.get("chosen_axes")}
        next_todo = SearcherAction(stage_index=progress.todo.stage_index,
                                   action_type=ActionType.choose_axis,
                                   choose_axis_and_split_map=choose_axis_and_split_map)

    # 当前轴切完了，如果是gemm，除了batch轴，每个轴都需要切，切下一个轴
    elif is_axis_need_split(progress):
        next_todo = copy.deepcopy(progress.todo)
        next_todo.action_value = None
        next_todo.axis_index -= 1
        nonzero_axes = progress.get_nonzero_axes(progress.todo.stage_index)
        next_todo.sub_action_index = get_split_sub_tree_depth(
            nonzero_axes[next_todo.axis_index]) - 1

    # 当前cache_layer切分完了，切前一个cache_layer(L1层)。gemm不切mn才会切大K。
    elif is_need_split_in_cache_layer0(progress):
        cache_layer = progress.todo.cache_layer - 1
        next_todo = comm.get_split_todo(progress,
                                        progress.todo.stage_index,
                                        cache_layer=cache_layer)

    # 当前stage切完了,看是否需要采样当前stage的at axis
    elif comm.need_search_at_axis(progress.todo.stage_index,
                                  progress.op_schedule_info):
        next_todo = SearcherAction(
            stage_index=progress.todo.stage_index,
            action_type=ActionType.at_axis)

    # 向前找Stage
    else:
        # emit_insn todo
        next_todo = SearcherAction(stage_index=progress.todo.stage_index,
                                   action_type=ActionType.emit_insn)

    progress.todo = next_todo
