#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search.controller.search_comm import get_trs_ub_size
from schedule_search.controller.mcts_search.features import SEARCH_N
from schedule_search.controller.mcts_search.features import UB_BUFFER_SIZE
from schedule_search.ts_env.tensor_cfg import ActionTensorCfg
from schedule_search.op_cfg import TIK_TO_DSL_OP_LIST


def proc(progress, action_mask):  # pylint: disable=R0912
    """
    规则内容：选择切分的axis轴后面的axis的乘积必须小于buffer大小
    """
    nonzero_axes = progress.get_nonzero_axes(progress.todo.stage_index)
    total_size = 1

    # for choose axis multi times
    if progress.op_schedule_info.option.get('op_type') in TIK_TO_DSL_OP_LIST.keys():
        stage_index = progress.todo.stage_index
        chosen_axes_index = sorted(set(progress.todo.choose_axis_and_split_map.get("chosen_axes", [])))
        split_factor_list = progress.action_tensor[stage_index][
                            ActionTensorCfg.split_factor_s:ActionTensorCfg.split_factor_e + 1]

        # 获取trs的ub_size，适当合理缩小，以减少解空间
        trs_ub_size = get_trs_ub_size(progress.op_schedule_info, stage_index)

        for axis_index in chosen_axes_index:
            total_size *= split_factor_list[axis_index]

        for idx in range(SEARCH_N - 1, -1, -1):
            # 将不存在的axis轴mask掉
            if idx >= len(nonzero_axes):
                action_mask[idx] = 0
                continue
            # 自身轴长等于1的场景，不需要选取该轴长
            if nonzero_axes[idx] == 1:
                action_mask[idx] = 0
                continue
            # 已选择轴的切分factor已经大于UB_Buffer时，只能选择本身
            if total_size >= trs_ub_size and \
                    idx not in chosen_axes_index:
                action_mask[idx] = 0

        if sum(action_mask) == 0:
            action_mask[0] = 1
        return action_mask

    for idx in range(SEARCH_N - 1, -1, -1):
        # 后面有reduce的时候要考虑一下其他的stage
        # 将不存在的axis轴mask掉
        if idx >= len(nonzero_axes):
            action_mask[idx] = 0
            continue

        # 自身轴长等于1的场景，不需要选取该轴长
        if nonzero_axes[idx] == 1:
            action_mask[idx] = 0

        if total_size > UB_BUFFER_SIZE:
            action_mask[idx] = 0
        total_size *= nonzero_axes[idx]

    if sum(action_mask) == 0:
        action_mask[0] = 1

    return action_mask
