#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.controller.mcts_search.procedure.action import ActionType
from schedule_search.controller.mcts_search.procedure.action import \
    SearcherAction
from schedule_search.controller.mcts_search.procedure.proc_at_axis import \
    main as at_axis_next
from schedule_search.controller.mcts_search.procedure.proc_at_stage import \
    main as at_stage_next
from schedule_search.controller.mcts_search.procedure.proc_choose_axis import \
    main as choose_axis_next
from schedule_search.controller.mcts_search.procedure.proc_choose_axis_type \
    import main as choose_axis_type_next
from schedule_search.controller.mcts_search.procedure.proc_split import main \
    as split_next
from schedule_search.controller.mcts_search.procedure.proc_reorder import \
    main as reorder_next
from schedule_search.controller.mcts_search.procedure.proc_need_split_l0 \
    import main as need_split_l0_next
from schedule_search.ts_env.code_to_tensor.at_analysis import get_at_info
from schedule_search.controller.mcts_search.procedure.comm import \
    get_first_todo
from schedule_search.controller.mcts_search.procedure.proc_emit_insn import main \
    as emit_insn_next


def get_ready(progress):
    """
    判断算子的第一个采样动作，如果要采at_stage，就先把at_stage采完，否则就开始采轴操作
    """
    # 从下到上，先确定第一个需要采样at_stage的对象
    log.dbg('get_ready. get at info.')
    get_at_info(progress.op_schedule_info)
    stages_info = progress.op_schedule_info.stages_info
    log.dbg('stages info: %s', stages_info)
    for stage_index in range(len(stages_info) - 1, -1, -1):
        workspace_info = stages_info[stage_index].get('at_info', None)
        log.dbg('stage_index: %d, workspace_info: %s', stage_index,
                workspace_info)
        for consumer_id, consumer in enumerate(workspace_info.consumers):
            log.dbg('consumer_id: %d, consumer: %s, at_tagests: %s',
                    consumer_id, consumer, consumer.at_candidates)
            if len(consumer.at_candidates) > 1 \
                    and consumer.sampled_target is None:
                progress.todo = SearcherAction(
                    stage_index=stage_index,
                    action_type=ActionType.at_stage,
                    sub_action_index=consumer_id,
                )
                return

    # 走出采样第一步
    get_first_todo(progress)


def direct(progress):  # pylint: disable=R0912
    """
    控制蒙特卡洛树的生长
    """
    # 当前Stage的轴信息
    if progress.todo.action_type == ActionType.choose_axis_type:
        choose_axis_type_next.proc(progress)
    elif progress.todo.action_type == ActionType.choose_axis:
        choose_axis_next.proc(progress)
    elif progress.todo.action_type == ActionType.split:
        split_next.proc(progress)
    elif progress.todo.action_type == ActionType.at_stage:
        at_stage_next.proc(progress)
    elif progress.todo.action_type == ActionType.at_axis:
        at_axis_next.proc(progress)
    elif progress.todo.action_type == ActionType.reorder:
        reorder_next.proc(progress)
    elif progress.todo.action_type == ActionType.need_split_l0:
        need_split_l0_next.proc(progress)
    elif progress.todo.action_type == ActionType.emit_insn:
        emit_insn_next.proc(progress)
    else:
        log.err('Unknown action_type: [%s].', progress.todo.action_type)

    log.dbg('[%s] todo: %s', progress.step_n, progress.todo)
