#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.util import get_at_axis_list
from schedule_search.controller.mcts_search.features import SEARCH_N
from schedule_search.controller.mcts_search.procedure.comm import \
    need_search_at_axis


def proc(progress, action_mask):  # pylint: disable=R0912
    """
    规则内容：
    at stage有broadcast groups的stage，按at stage的reorder顺序
    1、只能at到切分轴之前的轴，如reorder顺序为[0, 3, 2, 1], 切分轴为2，则只能at 2之前
    0表示at到0轴外，即0切nparts=1切出的o轴
    1表示at到0轴
    2表示at到3轴
    3表示at到2轴
    """
    stage_index = progress.todo.stage_index
    op_schedule_info = progress.op_schedule_info
    if not need_search_at_axis(stage_index, op_schedule_info):
        return action_mask

    at_stage_index = progress.op_schedule_info.at_dict[stage_index]
    at_stage_info = op_schedule_info.stages_info[at_stage_index]
    at_stage_broadcast_groups = at_stage_info.get('broadcast_groups')
    if not at_stage_broadcast_groups:
        return action_mask

    #  1、只能at到切分轴之前的轴
    at_stage_axis_num = len(progress.get_nonzero_axes(at_stage_index))
    at_axis_list = get_at_axis_list(at_stage_info, at_stage_axis_num)
    log.dbg('at_axis_list: %s', at_axis_list)
    # 存一下，用于分析定位
    stage_info = progress.op_schedule_info.stages_info[stage_index]
    stage_info['at_axis_list'] = at_axis_list
    for idx in range(SEARCH_N):
        if idx > len(at_axis_list):
            action_mask[idx] = 0

    # 不能全部都mask掉
    if sum(action_mask) == 0:
        action_mask[0] = 1

    return action_mask
