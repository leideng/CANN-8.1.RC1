#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search import comm
from schedule_search.ts_env.tensor_cfg import AXIS_CNT
from schedule_search.ts_env.tensor_cfg import ActionTensorCfg
from schedule_search.controller.mcts_search.features import SEARCH_N
from schedule_search.ts_env.tensor_to_code.t2c_util import L1_CACHE_LAYER


def condition_check(progress):
    '''
    :param progress:
    :return:
    '''
    # 加option控制一下
    if progress.op_schedule_info.option.get('gemm_strict_mask') is not True:
        return False

    # 非gemm不处理
    if progress.c_op not in comm.MAD_OP_ID_LIST:
        return False

    # 非L1的tiling不做mask
    if progress.todo.cache_layer != L1_CACHE_LAYER:
        return False

    # 非matmul stage不处理
    stage_index = progress.todo.stage_index
    stage_info = progress.op_schedule_info.stages_info[stage_index]
    if stage_info.get('tag') not in comm.MAD_TAG_LIST:
        return False

    return True


def need_mask(progress, bk_factor, sk_factor, idx):
    '''
    :return:
    '''
    # 考虑sub_action
    # factor没有采样完成，看其下的所有可能factor是否有满足条件的
    sub_factor = pow(SEARCH_N, progress.todo.sub_action_index)
    if progress.todo.sub_action_index > 0:
        min_new_bk_factor = bk_factor + sub_factor * idx
        max_new_bk_factor = min_new_bk_factor + sub_factor
        new_bk_factor_list = list(range(min_new_bk_factor,
                                        max_new_bk_factor))
    # factor全部采样完成，看自己是否满足条件
    else:
        new_bk_factor_list = [bk_factor + sub_factor * idx]

    mask_flag = True
    for new_bk_factor in new_bk_factor_list:
        if new_bk_factor % sk_factor == 0:
            mask_flag = False
            break

    return mask_flag


def proc(progress, action_mask):
    '''
    规则内容：当大K也切的时候，小k必须整吃，由于先采样的小k，因此对大K做mask
    '''
    if not condition_check(progress):
        return action_mask

    factor_index = ActionTensorCfg.split_factor_s + \
                   progress.todo.cache_layer * AXIS_CNT + \
                   progress.todo.axis_index
    bk_factor = progress.action_tensor[progress.todo.stage_index][factor_index]
    sk_factor = progress.action_tensor[progress.todo.stage_index][
        factor_index + AXIS_CNT]

    for idx in range(SEARCH_N):
        if need_mask(progress, bk_factor, sk_factor, idx):
            action_mask[idx] = 0

    # 不能全部都mask掉
    if sum(action_mask) == 0:
        action_mask[0] = 1

    log.dbg('r11_gemm_k_32b_align: %s', action_mask)
    return action_mask
