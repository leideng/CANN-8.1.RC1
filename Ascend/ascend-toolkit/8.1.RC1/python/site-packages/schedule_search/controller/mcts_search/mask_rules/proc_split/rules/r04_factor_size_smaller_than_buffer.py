#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
import numpy as np

from schedule_search import log
from schedule_search import comm
from schedule_search.controller.mcts_search.features import SEARCH_N
from schedule_search.controller.mcts_search.features import UB_BUFFER_SIZE
from schedule_search.ts_env.tensor_cfg import AXIS_CNT
from schedule_search.ts_env.tensor_cfg import ActionTensorCfg


def proc(progress, action_mask): # pylint: disable=R0912
    """
    规则内容：若factor取值与其后面的轴长相乘大于UB大小，则该factor需要mask掉
    """
    if progress.c_op in comm.MAD_OP_ID_LIST:
        return action_mask

    total_factor_size = 1
    # 算上reduce的stage
    for stage_index in range(progress.stage_num - 1, -1, -1):
        feature_vec = progress.op_schedule_info.feature_tensor[stage_index]
        if np.sum(feature_vec[AXIS_CNT:2 * AXIS_CNT]) > 0 \
                or stage_index == progress.stage_num - 1:
            curr_stage_nonzero_axes = progress.get_nonzero_axes(stage_index)
            # 如果是当前stage的采样，则只统计到当前axis_Index，否则统计到0
            if stage_index == progress.todo.stage_index:
                start_index = progress.todo.axis_index
            else:
                start_index = -1
            for idx in range(
                    len(curr_stage_nonzero_axes) - 1, start_index, -1):
                total_factor_size *= progress.action_tensor[stage_index][idx]

    # 获取已有factor
    factor_index = \
        ActionTensorCfg.split_factor_s + \
        progress.todo.cache_layer * AXIS_CNT + \
        progress.todo.axis_index
    factor = progress.action_tensor[progress.todo.stage_index][factor_index]
    # 获取axis轴长
    log.dbg("total_factor_size:%s factor:%s factor_index:%s UB_BUFFER_SIZE:%s",
            total_factor_size, factor, factor_index, UB_BUFFER_SIZE)
    for i in range(SEARCH_N):
        next_factor \
            = factor + pow(SEARCH_N, progress.todo.sub_action_index) * i
        if total_factor_size * next_factor > UB_BUFFER_SIZE:
            action_mask[i] = 0

    # 全0的场景，保留第一位
    if sum(action_mask) == 0:
        action_mask[0] = 1
    log.dbg("r04 action_mask:%s", action_mask)

    return action_mask
