#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
import copy
from math import factorial

from schedule_search import comm
from schedule_search import log
from schedule_search.op_cfg import TIK_TO_DSL_OP_LIST
from schedule_search.controller.mcts_search.procedure.action import ActionType
from schedule_search.controller.mcts_search.procedure.action import \
    SearcherAction
from schedule_search.controller.mcts_search.procedure.comm import \
    get_split_todo
from schedule_search.controller.mcts_search.procedure.comm import \
    is_mad_leaf
from schedule_search.ts_env.te_auto_schedule_env import trs_update_progress
from schedule_search.controller.search_comm import get_split_sub_tree_depth


def proc(progress):
    """

    :param progress:
    """
    # 尚未完成，则继续
    if progress.todo.sub_action_index > 0:
        next_todo = copy.deepcopy(progress.todo)
        next_todo.action_value = None
        next_todo.sub_action_index -= 1

    # for trs input reorder
    elif progress.todo.reorder_times > 1:
        nonzero_axes = progress.get_nonzero_axes(progress.todo.stage_index)
        permutation_num = factorial(len(nonzero_axes))
        sub_tree_depth = get_split_sub_tree_depth(permutation_num)
        next_todo = SearcherAction(
            stage_index=progress.todo.stage_index,
            action_type=ActionType.reorder,
            sub_action_index=sub_tree_depth - 1,
            reorder_times=progress.todo.reorder_times - 1)

    # 当前cache_layer reorder采样完了，采样下一个cache_layer的reorder
    elif progress.todo.cache_layer > 0:
        next_todo = SearcherAction(
            stage_index=progress.todo.stage_index,
            action_type=ActionType.reorder,
            cache_layer=progress.todo.cache_layer - 1)

    # 卷积深度融合算子不需要采样是否切L0，直接去切分mn
    elif progress.c_op == "conv_deep_fuse" and is_mad_leaf(progress):
        next_todo = get_split_todo(progress,
                                   progress.todo.stage_index,
                                   cache_layer=progress.op_layers - 1)
        progress.op_schedule_info.stages_info[
            progress.todo.stage_index]['need_split_l0'] = True

    # 当前stage reorder完了，如果是gemm先采样是否切分L0，即是否切mn
    elif progress.c_op in comm.MAD_OP_ID_LIST and is_mad_leaf(progress):
        next_todo = SearcherAction(
            stage_index=progress.todo.stage_index,
            action_type=ActionType.need_split_l0)

    # 采样切分
    else:
        last_stage_index = progress.todo.stage_index
        op_type = progress.op_schedule_info.option.get('op_type')
        if op_type in TIK_TO_DSL_OP_LIST.keys() and \
                "trs_reorder_times" in TIK_TO_DSL_OP_LIST.get(op_type).keys():
            # trs-class op: first trs_reorder mcts,
            # next t2c: do t2c's cache_rw/double_buffer/inline to update_progress
            start_index = 10
            end_index = 30
            trs_update_progress(progress, start_index, end_index)
            last_stage_index = progress.stage_num - 1

        next_todo = get_split_todo(progress, last_stage_index)

    progress.todo = next_todo
