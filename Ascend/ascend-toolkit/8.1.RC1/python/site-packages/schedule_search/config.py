#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
import datetime
import os
import resource

WORKSPACE = os.path.join(os.path.expanduser('~'), "ss_workspace")
FILE_PATH = os.path.dirname(os.path.realpath(__file__))
if "aoetools" in FILE_PATH:
    CODE_ROOT = os.path.join(FILE_PATH, "../../../../../../")
else:
    CODE_ROOT = os.path.join(FILE_PATH, "../../../")

if os.path.exists(os.path.join(CODE_ROOT, ".repo")):
    WORKSPACE = CODE_ROOT
resource.setrlimit(resource.RLIMIT_CORE, (0, 0))

BASE_RUN_TIMEOUT = 600
RUN_TIMEOUT = 60


def get_default_config():
    """

    :return:
    """
    return {
        "debug": False,
        "timeout": 60 * 60 * 24,
        "op_name": "default",
        "TASK_ID": "single_search",
        "STORE_TMP_ID": datetime.datetime.now().strftime('%Y%m%d_%H%M%S_%f'),
        "lock_timeout": 600,
        "base_run_timeout": BASE_RUN_TIMEOUT,
        "run_timeout": RUN_TIMEOUT,
        "repeat_count": 20,
        "cache_mode": "0",
        "cache_type": "None",
        "LOG_LEVEL": "I",
        "WORKSPACE": WORKSPACE,
        "error_tolerance": 0.0,
        "accuracy_tolerance": 0.001,
        "lower_timeout": 30,
        "cce_build_timeout": 30,
        "golden_input": [],
        "golden_output": [],
        "auto_schedule_golden": False,
        "auto_schedule_py": "",
        "customized_label": "",
        "enable_oom": False,
        "redis_info": {},
        "timer": False,
        "init_evb": True,
        'bank_update_interval': 60,
        'gemm_strict_mask': True,
        "stop_better_than_base": False,
        'at_axis_search': False,
        'tbe_compile_para': False,
    }


OPTION_CONFIG = get_default_config()
