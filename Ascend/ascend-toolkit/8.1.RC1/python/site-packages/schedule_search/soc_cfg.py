#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
import os
import tbe
from tbe.common.platform.platform_info import get_soc_spec
from tbe.common.buildcfg import GlobalInfoContainer
from tbe.common.platform.platform_info import set_current_compile_soc_info


class SocVersion:
    """
    SocVersion
    """
    ASCEND910 = "Ascend910"
    ASCEND910A = "Ascend910A"
    ASCEND910B = "Ascend910B"
    ASCEND610 = "Ascend610"
    ASCEND310 = "Ascend310"
    ASCEND310P = "Ascend310P"
    Hi3796CV300ES = "Hi3796CV300ES"

    def useless_func1(self):
        """
        useless_func1
        :return:
        """
        return self.ASCEND610

    def useless_func2(self):
        """
        useless_func2
        :return:
        """
        return self.ASCEND910


def get_soc_version():
    """

    :return:
    """
    return get_soc_spec("SHORT_SOC_VERSION")


def get_full_soc_version():
    """

    :return:
    """
    return get_soc_spec("FULL_SOC_VERSION")


def get_ub_size():
    """

    :return:
    """
    return get_soc_spec("UB_SIZE")


def get_l0a_size():
    """

    :return:
    """
    return get_soc_spec("L0A_SIZE")


def get_l0b_size():
    """

    :return:
    """
    return get_soc_spec("L0B_SIZE")


def get_l0c_size():
    """

    :return:
    """
    return get_soc_spec("L0C_SIZE")


def get_l1_size():
    """

    :return:
    """
    return get_soc_spec("L1_SIZE")


def get_core_num():
    """

    :return:
    """
    return get_soc_spec("CORE_NUM")


def get_core_type():
    """

    :return:
    """
    return get_soc_spec("AICORE_TYPE")


def set_soc_info(soc_version: str, core_type: str = "AiCore", core_num: int = None, l1_fusion: bool = None) -> None:
    """
    set version info

    Parameters
    ----------
    soc_version : str
    -    "Ascend310"/"Ascend910"/"Ascend310P"/"Ascend610" ...
    core_type : str
    -    "AiCore" or "VectorCore"
    aicore_num: int
    -    example: 32
    l1_fusion: bool
    -    example: True/False
    :return:
    """
    return set_current_compile_soc_info(soc_version, core_type, core_num, l1_fusion)


def set_product_code():
    """
    获取当前的SocInfo，然后再写成Set代码
    :return:
    """
    full_soc_version = get_soc_spec("FULL_SOC_VERSION")
    core_type = get_soc_spec("AICORE_TYPE")
    aicore_num = get_soc_spec("CORE_NUM")
    kmp_dir = kernel_meta_parent_dir()
    ret_code = "set_current_compile_soc_info('%s', core_type='%s', " \
               "aicore_num=%s)\n" \
               % (full_soc_version, core_type, aicore_num)
    ret_code = "%skmp_dir = '%s'" % (ret_code, kmp_dir)

    return ret_code


def get_soc_info():
    """
    当前只有一个作用，就是给data_cmp填参数
    :return:
    """
    soc_info_dict = {
        "soc_version": get_full_soc_version(),
        "core_type": get_core_type(),
        "core_num": get_core_num(),
    }
    build_cfg = {
        'kernel_meta_parent_dir': kernel_meta_parent_dir()
    }
    return {'soc_info': soc_info_dict,
            'build_cfg': build_cfg}


def is_lhisi():
    """
    check curent soc is lhisi
    :return:
    """
    return get_soc_version() == SocVersion.Hi3796CV300ES


def kernel_meta_parent_dir():
    """
    获取KernelMeta父目录
    :return:
    """
    base_dir = os.path.realpath(GlobalInfoContainer.global_info["kernel_meta_parent_dir"])
    return base_dir


def kernel_meta_dir():
    """
    获取KernelMeta目录
    :return:
    """
    parent_dir = kernel_meta_parent_dir()
    kernel_meta = os.path.realpath(os.path.join(parent_dir, "kernel_meta/"))
    return kernel_meta


def get_cfg_val(src, dtype, default, drange=None):
    """
    获取配置中的值
    """
    if dtype == 'bool':
        if str(src).strip().lower() == 'true':
            return True
        if str(src).strip().lower() == 'false':
            return False
        return default
    elif dtype == 'int':
        val = default
        if str(src).strip().isdigit():
            val = int(str(src).strip())
            if drange and val not in drange:
                val = default
        return val

    return default


def proc_env_info(soc_info):
    """
    替换原来的te_set_version功能
    soc_info: [soc_version, core_type, aicore_num, l1_fusion, l2_mode, l2_fusion]
    """
    default_info = [None, 'AiCore', '', '', 0, None, {}]
    for i, tmp in enumerate(soc_info):
        default_info[i] = tmp

    # 先设置SocInfo
    set_current_compile_soc_info(default_info[0],
                                 default_info[1],
                                 get_cfg_val(default_info[2], 'int', None),
                                 get_cfg_val(default_info[3], 'bool', None))

    # 设置2个Context参数
    mdl_bank_path = default_info[-1].get('mdl_bank_path', '')
    op_bank_path = default_info[-1].get('op_bank_path', '')
    if mdl_bank_path and tbe.common.context.get_context():
        tbe.common.context.get_context().add_addition(
            'mdl_bank_path', mdl_bank_path)
    if op_bank_path and tbe.common.context.get_context():
        tbe.common.context.get_context().add_addition(
            'op_bank_path', op_bank_path)

    # 获取build_config
    # l2_mode为int
    l2_mode = get_cfg_val(default_info[4], 'int', 0)
    # l2_fusion为bool
    l2_fusion = get_cfg_val(default_info[4], 'bool', False)
    # tbe_debug_level为[0， 1， 2]中一个
    tbe_debug_level = get_cfg_val(default_info[-1].get('op_debug_level'),
                                  'int', 0, [0, 1, 2])
    kmp_dir = default_info[-1].get('op_debug_dir', '')
    # vector_fp_ceiling为[0， 1， 2]中一个
    vector_fp_ceiling = get_cfg_val(default_info[-1].get('vector_fp_ceiling'),
                                    'int', 0, [0, 1, 2])
    build_cfg = {'l2_mode': l2_mode,
                 'enable_L2_fusion': l2_fusion,
                 'tbe_debug_level': tbe_debug_level,
                 'vector_fp_ceiling': vector_fp_ceiling,
                 }
    # 去掉无值项
    build_cfg = {k: v for k, v in build_cfg.items() if v}
    return build_cfg
