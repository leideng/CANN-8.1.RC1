#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.ts_env.tensor_to_code import t2c_util as util
from schedule_search.ts_env.tensor_to_code.proc_cache_rw.main import \
    gen_cache_rw_info
from tbe.common.platform import platform_info


def condition_check(input_dict):
    """

    :param input_dict:
    :return:
    """
    cache_level = input_dict["cache_level"]
    tensor = input_dict["tensor"]
    tensor_name = tensor.op.name
    stage_info = input_dict["stage_info"]
    stage_tag = stage_info.get("tag")
    consumer_stages_info = input_dict["consumer_stages_info"]

    if cache_level != 0:
        log.dbg("Op name:%s, Cache Level:%s not 0, no need write L0!",
                tensor_name, cache_level)
        return False

    if stage_tag in util.NEED_WRITE_L0_TAGS:
        if stage_tag == "mad_add_bias":
            log.dbg("Op name:%s is mad_add_bias, need write L0!", tensor_name)
            return True
        # 只有该tensor下一级的tensor是dma才行
        for consumer_stage_info in consumer_stages_info:
            if consumer_stage_info.get("tag") in ["mem_copy", "mad_add_bias", "requant_vector"]:
                log.dbg("Op name:%s, need write L0!", tensor_name)
                return True

    return False


def proc(input_dict):
    """

    :param input_dict:
    :return:
    """
    if not condition_check(input_dict):
        return []

    # Lv0_write_l0、Lv0_write_l1、Lv0_write_l12l0处理过的tensor，
    # Lv0_write_ub2out不用再处理，用这个标记记录一下
    input_dict['write_proc_flag'] = True

    return gen_cache_rw_info(input_dict["tensor"], input_dict["all_tensors"],
                             "CacheWrite", platform_info.scope_cc,
                             input_dict['stage_info'])
