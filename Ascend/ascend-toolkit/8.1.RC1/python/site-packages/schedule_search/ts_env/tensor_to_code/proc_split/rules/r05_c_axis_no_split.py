#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search.ts_env.tensor_cfg import ActionTensorCfg
from schedule_search.ts_env.tensor_to_code import t2c_util
from schedule_search.timer import timer
from schedule_search import comm


@timer('r05')
def proc(t2c_params):  # pylint: disable=R0912
    """
    规则内容：规格轴不做切分，这个规则只适于一些特殊的算子
    """
    # 输入
    sch = t2c_params.schedule
    c_op = t2c_params.op_schedule_info.c_op
    has_batch, _ = t2c_util.gemm_identify(t2c_params.op_schedule_info)

    if c_op == 'no':
        return

    for stage_index, stage in enumerate(sch.stages):
        if str(stage.op).startswith("placeholder"):
            continue
        # 获取规格轴的起始点
        if c_op == 'argmax_last-like':
            c_axis_start = len(stage.op.axis) - 1
        elif c_op in comm.MAD_OP_ID_LIST:
            stage_axis_num = len(stage.op.reduce_axis) if stage.op.reduce_axis else len(stage.op.axis)
            c_axis_start = stage_axis_num // 2
            if not stage.op.reduce_axis and has_batch:
                c_axis_start += 1
        else:
            continue

        factor_num = ActionTensorCfg.split_factor_e + 1
        factor_num -= ActionTensorCfg.split_factor_s
        axis_num = t2c_util.max_axis()
        for buffer_depth in range(factor_num // axis_num):
            for axis_index in range(c_axis_start, axis_num):
                factor_index = buffer_depth * axis_num + axis_index
                t2c_params.cleaned_actions[stage_index][factor_index] = 0
