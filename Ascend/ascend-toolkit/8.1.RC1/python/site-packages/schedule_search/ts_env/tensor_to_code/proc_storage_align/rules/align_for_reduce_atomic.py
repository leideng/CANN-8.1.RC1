#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search.ts_env import env_util
from schedule_search.ts_env.tensor_to_code import t2c_util
from schedule_search.ts_env.tensor_to_code.proc_storage_align.rules import comm


def proc(t2c_params):  # pylint: disable=R0914,R0912
    """
    规则内容：reduce atomic的storage_align规则
    1、reduce_nist时才需要进行storage_align
    2、只对cache read和cache write的stage做storage_align
    """
    sch = t2c_params.schedule
    stages = list(sch.stages)
    stages_info = t2c_params.stages_info

    t2c_params.code_lines.extend(['\n', '# storage_align code'])

    reduce_atomic_dict = t2c_params.op_schedule_info.reduce_atomic_dict
    reduce_op_tag = reduce_atomic_dict.get("reduce_op_tag", "")
    if t2c_util.REDUCE_NIST_KEYWORD not in reduce_op_tag:
        return

    storage_align_info = {}
    shape_before_reduce = reduce_atomic_dict.get("shape_before_reduce", [])
    reduce_axis_indexs = reduce_atomic_dict.get("reduce_axis_indexs", [])
    axis_index, _ = env_util.find_last_none_reduce_axis(
        shape_before_reduce, reduce_axis_indexs)
    align_axis_index = axis_index - 1
    for stage_index, stage in enumerate(stages):
        stages_name = stages_info[stage_index]['name']
        stage_type = stages_info[stage_index].get('type', [])
        if 'CacheRead' in stage_type or ('CacheWrite' in stage_type
                                         and 'reduce_atomic_write'
                                         not in stage_type):
            storage_align_info[stages_name] = align_axis_index

    code_lines = []
    for stage_index, stage in enumerate(sch.stages):
        if str(stage.op).startswith('placeholder'):
            continue
        stage_name = stages_info[stage_index]['name']
        align_axis_index = storage_align_info.get(stage_name, -1)
        sub_code = comm.align_a_stage(stage, stage_name,
                                      align_axis_index, t2c_params,
                                      stage_index)
        code_lines.extend(sub_code)

    t2c_params.code_lines.extend(code_lines)
    return
