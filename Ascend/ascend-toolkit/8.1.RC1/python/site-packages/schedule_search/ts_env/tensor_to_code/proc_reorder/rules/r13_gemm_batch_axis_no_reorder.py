#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search import comm
import schedule_search.ts_env.tensor_to_code.t2c_util as t2c_util


def proc(t2c_params):  # pylint: disable=R0912
    '''
    规则内容：gemm的batch轴不参与reorder，放在最外面
    '''
    # 不是gemm不处理、不带batch不处理
    c_op = t2c_params.op_schedule_info.c_op
    has_batch, _ = t2c_util.gemm_identify(t2c_params.op_schedule_info)
    if c_op not in comm.GEMM_OP_ID_LIST or not has_batch:
        return

    stages_info = t2c_params.op_schedule_info.stages_info
    for stage_index, stage_axis_list in enumerate(t2c_params.axis_info_list):
        if 'placeholder' in stages_info[stage_index].get('type', []) or \
                stage_axis_list is None:
            continue

        # index为0的axis即为batch，有规则cover是不会切分的
        batch_axis_info = None
        for axis_info in stage_axis_list:
            if axis_info.index == 0 and axis_info.type == "axis":
                batch_axis_info = axis_info
        log.dbg('batch_axis_info: %s', batch_axis_info)

        # 将其放在最前面，如果已经在leveled_axis中，先将其删除
        stage_leveled_axis = t2c_params.leveled_axis_for_reorder[stage_index]
        for leveled_axis in stage_leveled_axis:
            if batch_axis_info in leveled_axis:
                leveled_axis.remove(batch_axis_info)
                break
        t2c_params.leveled_axis_for_reorder[stage_index][
            t2c_util.AXIS_LEVEL_OO_INDEX].insert(0, batch_axis_info)
