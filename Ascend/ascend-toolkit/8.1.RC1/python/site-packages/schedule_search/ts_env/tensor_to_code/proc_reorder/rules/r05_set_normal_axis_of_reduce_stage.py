#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.ts_env.tensor_to_code import t2c_util


def cosine_embedding_loss_reoder(t2c_params):  # pylint: disable=R0912
    """

    :param t2c_params:
    :return:
    """
    for stage_index, stage_axis_list in enumerate(t2c_params.axis_info_list):
        if stage_axis_list is None:
            continue
        axes = t2c_params.leveled_axis_for_reorder[stage_index]
        # 没有做切分的sub_axis 不单独体现在normal中
        axis_info_list = axes[t2c_util.AXIS_LEVEL_OO_INDEX] + \
                            axes[t2c_util.AXIS_LEVEL_O_INDEX] + \
                            axes[t2c_util.AXIS_LEVEL_IO_INDEX] + \
                            axes[t2c_util.AXIS_LEVEL_I_II_NORMAL_INDEX] + \
                            axes[t2c_util.AXIS_LEVEL_C_INDEX] + \
                            axes[t2c_util.AXIS_LEVEL_SUB_AXIS_INDEX] + \
                            axes[t2c_util.AXIS_LEVEL_IIO_INDEX]

        reduce_split_axis = -1
        if stage_index not in t2c_params.op_schedule_info.reduce_axis_dict:
            continue
        reduce_axis_list = sorted(
            t2c_params.op_schedule_info.reduce_axis_dict[stage_index]["axis"])
        for axis_info in stage_axis_list:
            if axis_info.name.endswith(
                    "_o") and axis_info.type == "reduce_axis":
                reduce_split_axis = reduce_axis_list[axis_info.index]
                break
        for axis_info in stage_axis_list:
            if axis_info in axis_info_list:
                continue
            if axis_info.index < reduce_split_axis:
                t2c_params.leveled_axis_for_reorder[stage_index][
                    t2c_util.AXIS_LEVEL_OO_INDEX].append(axis_info)
            else:
                t2c_params.leveled_axis_for_reorder[stage_index][
                    t2c_util.AXIS_LEVEL_I_II_NORMAL_INDEX].append(axis_info)


def proc(t2c_params):  # pylint: disable=R0912
    """
    规则内容：没切的普通轴默认放在i的最前面
    """
    if t2c_params.op_schedule_info.op_name in ["cosine_embedding_loss"]:
        cosine_embedding_loss_reoder(t2c_params)
        return

    for stage_index, stage_axis_list in enumerate(t2c_params.axis_info_list):
        if stage_axis_list is None:
            continue
        insert_pos = 0
        for axis_info in stage_axis_list:
            axes = t2c_params.leveled_axis_for_reorder[stage_index]
            # 没有做切分的sub_axis 不单独体现在normal中
            axis_info_list = axes[t2c_util.AXIS_LEVEL_OO_INDEX] + \
                             axes[t2c_util.AXIS_LEVEL_O_INDEX] + \
                             axes[t2c_util.AXIS_LEVEL_IO_INDEX] + \
                             axes[t2c_util.AXIS_LEVEL_I_II_NORMAL_INDEX] + \
                             axes[t2c_util.AXIS_LEVEL_C_INDEX] + \
                             axes[t2c_util.AXIS_LEVEL_SUB_AXIS_INDEX] + \
                             axes[t2c_util.AXIS_LEVEL_IIO_INDEX]
            if axis_info in axis_info_list:
                continue
            # 普通轴默认放在reduce_i的前面
            t2c_params.leveled_axis_for_reorder[stage_index][
                t2c_util.AXIS_LEVEL_I_II_NORMAL_INDEX].insert(
                    insert_pos, axis_info)
            insert_pos += 1

    log.dbg('leveled_axis_for_reorder: %s.',
            t2c_params.leveled_axis_for_reorder)
