#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.timer import timer


@timer('emit_insn')
def proc(t2c_params, rules):
    """

    :param t2c_params:
    :param rules:
    :return:
    """
    schedule_obj = t2c_params.schedule
    inlined_stages = t2c_params.inlined_stages
    stages_info = t2c_params.stages_info
    l1_fusion_dict = t2c_params.op_schedule_info.l1_fusion_dict

    t2c_params.code_lines.extend(['\n', '# emit_insn code'])
    t2c_params.proc_flag_dict = {}
    proc_ret = True
    for stage_index, stage in enumerate(schedule_obj.stages):
        # 该stage已经Inline掉了
        if stage_index in inlined_stages:
            continue

        # placeholder不做emit insn
        if (l1_fusion_dict['in_addr_type'] == 1 and str(stage.op).startswith(
                "placeholder")) or \
                'placeholder' in stages_info[stage_index].get('type', []):
            continue

        t2c_params.stage_index = stage_index
        t2c_params.stage = stage
        t2c_params.stage_name = stages_info[stage_index]['name']
        for rule in rules:
            rule_module = __import__(rule, fromlist=['1'])
            rule_module.proc(t2c_params)

    log.dbg('code_lines: %s' % ("\n".join(t2c_params.code_lines)))
    return proc_ret
