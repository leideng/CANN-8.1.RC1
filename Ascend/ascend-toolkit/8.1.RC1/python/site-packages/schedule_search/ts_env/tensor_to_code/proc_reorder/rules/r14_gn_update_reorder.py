#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import soc_cfg
from schedule_search.ts_env import env_util
from schedule_search.ts_env.tensor_to_code import t2c_util
from schedule_search.ts_env.tensor_to_code.proc_reorder.rules.\
    r12_broadcast_axis_order import update_leveled_axis


def proc(t2c_params):  # pylint: disable=R0914, R0915, R0912
    """
    规则内容：
    1、非broadcast轴放在broadcast轴前面
    2、如果有broadcast groups，需要按采样的结果排序broadcast axis
    """
    if not t2c_util.gn_training_update_nchw(t2c_params.op_schedule_info):
        return

    stage_num = len(t2c_params.features)

    # 第一次循环，确定at
    last_stage = stage_num - 1
    cut_axis = t2c_params.cut_axis_index.get(last_stage)
    # 切分轴axis 0和1时，不进行reorder
    if cut_axis < 2:
        return

    # 切分轴>=2时，根据可使能的multi core个数，决定是否reorder
    axis_infos = t2c_params.axis_info_list[last_stage]
    stage_dtype = t2c_params.schedule.stages[last_stage].op.output(0).dtype
    block_size = env_util.get_block_num(stage_dtype)
    core_num_1 = axis_infos[0].len * axis_infos[1].len // block_size

    new_reorder_list = []
    core_num_2 = 1
    for index in range(2, cut_axis + 1):
        core_num_2 *= axis_infos[index].len
        new_reorder_list.append(index)
        if core_num_2 > soc_cfg.get_core_num():
            break

    if core_num_1 >= core_num_2:
        return

    max_axis_num = t2c_util.max_axis()
    for i in range(max_axis_num):
        if i not in new_reorder_list:
            new_reorder_list.append(i)

    # 按指定的顺序重排leveled_axis
    update_leveled_axis(last_stage, new_reorder_list, t2c_params)
    t2c_params.reorder_axis_map.setdefault(last_stage, {})
    for index, axis in enumerate(new_reorder_list):
        t2c_params.reorder_axis_map[last_stage][index] = axis
