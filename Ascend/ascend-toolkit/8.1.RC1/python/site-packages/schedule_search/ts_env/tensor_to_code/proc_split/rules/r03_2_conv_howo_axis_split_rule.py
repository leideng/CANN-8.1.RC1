#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search.ts_env.tensor_cfg import ActionTensorCfg
from schedule_search.ts_env.tensor_cfg import AXIS_CNT
from schedule_search.timer import timer
from schedule_search import comm
from schedule_search.ts_env.tensor_to_code.proc_split.rules.\
    r09_axis_physical_constraint import ajust_factor
import schedule_search.ts_env.tensor_to_code.t2c_util as t2c_util


def conv_howo_axis_clean(t2c_params, stage_index, axis_index):
    '''
    卷积howo轴的clean规则
    '''
    sch = t2c_params.schedule
    # 先clean l1层factor
    howo_factor = t2c_params.cleaned_actions[stage_index][
        ActionTensorCfg.split_factor_s + axis_index]
    conv_param_dict = t2c_params.op_schedule_info.conv_param_dict
    last_set_fmatrix = max(conv_param_dict.keys())
    w_o = conv_param_dict[last_set_fmatrix]["wo"].value
    howo_factor = max(howo_factor, w_o)
    axis_len = sch.stages[stage_index].op.axis[axis_index].dom.extent.value
    max_len = (axis_len + 15) // 16 * 16
    cleaned_factor = ajust_factor(howo_factor, max_len, [16], direct=["up"])
    t2c_params.cleaned_actions[stage_index][ActionTensorCfg.split_factor_s +
                                            axis_index] = cleaned_factor
    # 继续clean l0层factor
    l0_howo_factor = t2c_params.cleaned_actions[stage_index][
        ActionTensorCfg.split_factor_s + axis_index + AXIS_CNT]
    cleaned_factor = ajust_factor(l0_howo_factor,
                                  cleaned_factor, [16],
                                  direct=["up"])
    t2c_params.cleaned_actions[stage_index][ActionTensorCfg.split_factor_s +
                                            axis_index +
                                            AXIS_CNT] = cleaned_factor


@timer('r3_2')
def proc(t2c_params):
    '''
    规则内容：Conv L1层不切W，且factor需要是16的倍数
    '''
    # 输入
    sch = t2c_params.schedule
    op_schedule_info = t2c_params.op_schedule_info
    if op_schedule_info.c_op not in comm.CONV_OP_ID_LIST:
        return

    _, howo_axis_index = t2c_util.get_nm_axis_index(op_schedule_info)
    conv_howo_axis_clean(t2c_params, len(sch.stages) - 1, howo_axis_index)

    # 如果涉及多个卷积深度融合，则还需要clean l1fuse_leaf stage
    if op_schedule_info.c_op not in comm.MAD_OP_ID_MAP.values():
        return

    stages_info = op_schedule_info.stages_info
    for stage_index, _ in enumerate(sch.stages):
        stage_info = stages_info[stage_index]
        stages_type = stage_info.get("type", [])
        if "l1fuse_leaf" in stages_type:
            conv_howo_axis_clean(t2c_params, stage_index, howo_axis_index)
