#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.ts_env.tensor_to_code.proc_storage_align.rules import comm
from tbe import tvm


def proc(t2c_params):  # pylint: disable=R0912,R0914
    """
    规则内容：strided slice d算子，align到数据连续的起始轴的前一根轴上
    """
    sch = t2c_params.schedule
    stages = list(sch.stages)
    stages_info = t2c_params.stages_info

    if t2c_params.op_schedule_info.option.get("op_name") != "strided_slice_d":
        return False

    input_shape = []
    ignore_axis_list = []
    input_axis_list = []
    align_stage_list = []
    for stage_index, stage in enumerate(stages):
        if isinstance(stage.op, tvm.PlaceholderOp):
            input_shape = stage.op.shape
            continue
        if stage_index in t2c_params.inlined_stages:
            continue
        if not input_axis_list:
            input_axis_list = stage.op.body[0].indices
        else:
            for i, input_axis in enumerate(input_axis_list):
                if isinstance(input_axis, tvm.tir.IntImm):
                    ignore_axis_list.append(i)
        align_stage_list.append((stage_index, stage))
    log.dbg("ignore_axis_list: %s", ignore_axis_list)
    code_lines = []
    for stage_index, stage in align_stage_list:
        curr_shape = [shape.value for shape in stage.op.output(0).shape]
        curr_index = len(curr_shape) - 1
        for i in range(len(input_shape) - 1, -1, -1):
            if i in ignore_axis_list:
                if input_shape[i] == 1:
                    continue
            else:
                if curr_shape[-1] == input_shape[i].value:
                    curr_shape.pop()
                    curr_index -= 1
                    continue
                curr_index -= 1
            stage_name = stages_info[stage_index]['name']
            align_axis_index = curr_index
            sub_code = comm.align_a_stage(stage, stage_name,
                                          align_axis_index, t2c_params,
                                          stage_index)
            code_lines.extend(sub_code)
            break

    t2c_params.code_lines.extend(['\n', '# storage_align code'])
    t2c_params.code_lines.extend(code_lines)
    log.dbg("strided_slice_d align proc finish!")
    return True
