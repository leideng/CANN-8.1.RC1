#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search.ts_env.env_consts import MODE_RUNTIME
from schedule_search.ts_env.tensor_to_code.proc_inline.rules.\
    comm import get_real_fanin_fanout
from schedule_search import log
from schedule_search.ts_env.cheque_generator import get_reuseby_cheque


def proc_reuse_proc(t2c_params, stage_index):
    '''
    处理reused_by原语逻辑
    '''
    sch = t2c_params.schedule
    fanin_list, _ = get_real_fanin_fanout(sch, stage_index)
    stages_info = t2c_params.op_schedule_info.stages_info
    reuse_src_index = fanin_list[0]
    reuse_src_stage = t2c_params.schedule.stages[reuse_src_index]
    reuse_src_name = stages_info[reuse_src_index]["name"]
    # 只有src是L1 scope的才能复用
    if stages_info[reuse_src_index].get("scope") != "local.L1":
        return
    reuse_dst_index = stage_index
    reuse_dst_stage = t2c_params.schedule.stages[reuse_dst_index]
    reuse_dst_name = stages_info[reuse_dst_index]["name"]
    if t2c_params.mode == MODE_RUNTIME:
        reuse_src_stage.reused_by(reuse_dst_stage.op.output(0))
    t2c_params.code_lines.append("sch[%s].reused_by(%s)" %
                                 (reuse_src_name, reuse_dst_name))
    log.dbg("reuse src: %s, dst: %s", reuse_src_name, reuse_dst_name)
    # 生成reused_by对应的cheque
    get_reuseby_cheque(t2c_params,
                       reuse_src_index,
                       dst_stage_index=reuse_dst_index)


def proc(t2c_params, _):
    """
    卷积L1融合reshape stage需要做空指令映射
    """
    stages_info = t2c_params.op_schedule_info.stages_info

    for i, _ in enumerate(t2c_params.schedule.stages):
        if "CacheWrite" not in stages_info[i].get("type", []):
            continue
        if stages_info[i]["tag"] == "conv_l1fuse_reshape":
            proc_reuse_proc(t2c_params, i)

    return True
