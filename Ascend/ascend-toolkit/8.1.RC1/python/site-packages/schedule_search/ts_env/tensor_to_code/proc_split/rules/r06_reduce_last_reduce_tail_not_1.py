#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search.ts_env.tensor_cfg import FeatureTensorCfg
from schedule_search.ts_env.tensor_to_code import t2c_util
from schedule_search.timer import timer


def clean_factor_and_tail_not_1(t2c_params,  # pylint: disable=R0912
                                stage, stage_index,
                                last_axis_index):
    """

    :param t2c_params:
    :param stage:
    :param stage_index:
    :param last_axis_index:
    """
    # clean factor，使其满足factor和尾块满足不为1
    axis_num = t2c_util.max_axis()
    axis_len = stage.op.reduce_axis[last_axis_index].dom.extent.value
    for buffer_depth in range(0, t2c_params.op_layers):
        factor_index = buffer_depth * axis_num + last_axis_index
        factor_in_actions = t2c_params.cleaned_actions[stage_index][
            factor_index]
        if factor_in_actions == 0:
            continue
        #  如果切分因子是1 或者尾块是1，则进行clean
        if factor_in_actions == 1 or axis_len % factor_in_actions == 1:
            # 向上向下调整切分因子，使得最后一块数据的大小不是1
            add_factor = factor_in_actions
            sub_factor = factor_in_actions
            for _ in range(
                    max(factor_in_actions + 1,
                        axis_len - factor_in_actions + 1)):
                # 向上找一次，如果factor小于轴长且尾块不是1则停，等于轴长时肯定尾块不是1
                add_factor += 1
                if add_factor <= axis_len and axis_len % add_factor != 1:
                    t2c_params.cleaned_actions[stage_index][factor_index] \
                        = add_factor
                    break
                # 向下找一次，如果factor大于1且尾块不是1则停
                sub_factor -= 1
                if sub_factor > 1 and axis_len % sub_factor != 1:
                    t2c_params.cleaned_actions[stage_index][factor_index] \
                        = sub_factor
                    break


@timer('r06')
def proc(t2c_params):
    """
    规则内容：reduce last的尾块不能是1
    """
    # 输入
    sch = t2c_params.schedule
    features = t2c_params.features

    for stage_index, stage in enumerate(sch.stages):
        if str(stage.op).startswith("placeholder"):
            continue
        # 先拿到Reduce的轴长
        compute = t2c_params.op_schedule_info.op_intrin_key_index[
            features[stage_index][FeatureTensorCfg.compute_s]].op_tag
        # reduce_last场景
        if not stage.op.reduce_axis \
                or not compute.endswith(t2c_util.REDUCE_LAST_KEYWORD):
            continue

        last_axis_index = len(stage.op.reduce_axis) - 1

        # clean factor，尾块和factor不为1
        clean_factor_and_tail_not_1(t2c_params, stage, stage_index,
                                    last_axis_index)
