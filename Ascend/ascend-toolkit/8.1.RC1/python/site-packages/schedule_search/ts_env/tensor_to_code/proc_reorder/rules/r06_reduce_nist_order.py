#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search.ts_env.tensor_cfg import ActionTensorCfg
from schedule_search.ts_env.tensor_cfg import FeatureTensorCfg
from schedule_search.ts_env.tensor_to_code import t2c_util


def proc(t2c_params):
    """
    规则内容：nist的stage把reduce的轴放非Reduce轴的前面
    """
    if t2c_params.op_schedule_info.op_name in ["cosine_embedding_loss"]:
        return
    features = t2c_params.features
    axis_num = t2c_util.max_axis()
    reorder_len = ActionTensorCfg.reorder_e + 1 - ActionTensorCfg.reorder_s
    layer_num = reorder_len // axis_num
    for i, _ in enumerate(t2c_params.axis_info_list):
        compute = t2c_params.op_schedule_info.op_intrin_key_index[features[i][
            FeatureTensorCfg.compute_s]].op_tag
        if 'nist' not in compute:
            continue
        for layer_index in range(layer_num,
                                 len(t2c_params.leveled_axis_for_reorder[i])):
            leveled_axis = t2c_params.leveled_axis_for_reorder[i][layer_index]
            leveled_reduce_axis = [
                x
                for x in leveled_axis
                if '_reduce_axis_' in x.name
            ]
            leveled_no_reduce_axis = [
                x
                for x in leveled_axis
                if '_reduce_axis_' not in x.name
            ]
            # 把reduce的轴放非Reduce轴的前面
            releveled_axis = leveled_reduce_axis + leveled_no_reduce_axis
            t2c_params.leveled_axis_for_reorder[i][layer_index] \
                = releveled_axis
