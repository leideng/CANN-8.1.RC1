#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.ts_env.tensor_cfg import AxisInfo
from schedule_search.ts_env.tensor_cfg import FeatureTensorCfg
from schedule_search.ts_env.tensor_to_code import t2c_util


def proc(t2c_params):  # pylint: disable=R0912
    """
    规则内容：reduce_prod_nist的reorder
    """
    # 输入
    features = t2c_params.features

    for stage_index, stage_axis_info in enumerate(t2c_params.axis_info_list):
        compute = t2c_params.op_schedule_info.op_intrin_key_index[
            features[stage_index][FeatureTensorCfg.compute_s]].op_tag
        if compute != "reduce_prod_nist":
            continue

        # 如果不是None，说明已经切分过reorder过了，不用管了
        if stage_axis_info:
            continue

        stage = t2c_params.schedule.stages[stage_index]
        stage_name = t2c_params.stages_info[stage_index]['name']

        stage_axis_info = []
        code_lines = []

        for axis_index, reduce_axis in enumerate(stage.op.reduce_axis):
            reduce_axis_name = '%s_reduce_axis_%d' % (stage_name,
                                                      axis_index)
            code_lines.append('%s = sch[%s].op.reduce_axis[%d]' %
                              (reduce_axis_name, stage_name, axis_index))
            log.dbg("%s", code_lines[-1])
            stage_axis_info.append(
                AxisInfo(reduce_axis_name,
                         stage.op.reduce_axis[axis_index].dom.extent.value,
                         'reduce_axis', axis_index, 'all', reduce_axis))

        for axis_index, axis in enumerate(stage.op.axis):
            axis_name = '%s_axis_%d' % (stage_name, axis_index)
            code_lines.append('%s = sch[%s].op.axis[%d]' %
                              (axis_name, stage_name, axis_index))
            log.dbg("%s", code_lines[-1])
            stage_axis_info.append(
                AxisInfo(axis_name,
                         stage.op.axis[axis_index].dom.extent.value,
                         'axis', axis_index, 'all', axis))

        t2c_params.code_lines.extend(code_lines)
        t2c_params.leveled_axis_for_reorder[stage_index] \
            = [[], [], [], [], [], [], []]
        t2c_params.leveled_axis_for_reorder[stage_index][
            t2c_util.AXIS_LEVEL_OO_INDEX] = stage_axis_info
