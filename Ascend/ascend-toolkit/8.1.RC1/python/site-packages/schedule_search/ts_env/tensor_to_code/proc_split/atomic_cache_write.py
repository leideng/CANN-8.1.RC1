#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search.ts_env.cheque_generator import get_cache_write_cheque
from schedule_search.ts_env.cheque_generator import get_cache_write_cheque_spec
from schedule_search.ts_env.cheque_generator import get_axis_cheque
from schedule_search.timer import timer


@timer()
def do_gm_cache_write(t2c_params,
                      code_lines,
                      reduce_stage_index,
                      reduce_tensors):
    """
    进行reduce stage的cache_write
    """
    reduce_stage_name = t2c_params.stages_info[reduce_stage_index].get('name')
    write_stage_name = "%s_l" % reduce_stage_name

    # tuple_reduce_sum
    if len(reduce_tensors) > 1:
        reduce_tensor_names = []
        write_tensor_names = []
        for index in range(len(reduce_tensors)):
            reduce_tensor_names.append('%s_v%d' % (reduce_stage_name, index))
            write_tensor_names.append('%s_v%d_l' % (reduce_stage_name, index))
        code_lines.append("%s = sch.cache_write(%s, '')" %
                          (", ".join(write_tensor_names),
                           "[" + ", ".join(reduce_tensor_names) + "]"))
        code_lines.append(
            '%s = %s' % (write_stage_name, write_tensor_names[0]))
        write_tensors = t2c_params.schedule.cache_write(reduce_tensors, "")

        # 生成cache_write操作对应的cheque
        get_cache_write_cheque_spec(t2c_params,
                                    reduce_stage_index,
                                    "",
                                    len(reduce_tensors),)

    # 单输出
    else:
        code_lines.append("%s = sch.cache_write(%s, '')" %
                          (write_stage_name, reduce_stage_name))
        # 传入的reduce_tensors是list，输出也是list
        write_tensors = t2c_params.schedule.cache_write(reduce_tensors, "")
        write_tensor_names = [write_stage_name]

        # 生成cache_write操作对应的cheque
        get_cache_write_cheque(t2c_params, reduce_stage_index, "")

    # cache_write后新增cache_write stage，stage_index变化
    write_stage_index = reduce_stage_index

    # reduce_write stage所有普通轴和reduce轴的cheque
    get_axis_cheque(t2c_params, write_stage_index)

    # 添加reduce_write的stage_info到stages_info
    t2c_params.stages_info.insert(
        write_stage_index,
        {
            'name': write_stage_name,
            'type': ['CacheWrite', 'reduce_atomic_write'],
            'scope': ""
            }
    )

    return write_tensor_names, write_tensors
