#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.timer import timer
from schedule_search.ts_env.env_consts import MODE_RUNTIME
from schedule_search.ts_env.cheque_generator import get_inline_cheque
from schedule_search.ts_env.tensor_to_code.proc_inline.rules.comm import \
    is_special_stage


@timer('inline')
def proc(t2c_params, rules):  # pylint: disable=R0914
    """
    inline
    """
    sch = t2c_params.schedule
    mode = t2c_params.mode
    stages_info = t2c_params.stages_info
    code_lines = ['\n', '# compute_inline code']
    inlined_stages = []

    for stage_index, stage in enumerate(sch.stages):
        # ???????inline
        if is_special_stage(t2c_params, stage_index):
            continue
        stage_name = stages_info[stage_index]['name']
        for rule in rules:
            module = __import__(rule, fromlist=['1'])
            ret = module.proc(t2c_params, stage_index)
            if ret:
                code_lines.append('sch[%s].compute_inline()' % stage_name)
                if mode == MODE_RUNTIME:
                    stage.compute_inline()
                inlined_stages.append(stage_index)
                get_inline_cheque(t2c_params, stage_index)
                break

    t2c_params.code_lines.extend(code_lines)
    t2c_params.inlined_stages = inlined_stages
    log.dbg('proc inline done')
    return True
