#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.ts_env.env_consts import MODE_RUNTIME
from schedule_search.ts_env.tensor_cfg import FeatureTensorCfg
from schedule_search.ts_env.cheque_generator import get_emit_insn_cheque


def proc(t2c_params):  # pylint: disable=R0914,R0912
    """

    :param t2c_params:
    :return:
    """
    features = t2c_params.features
    mode = t2c_params.mode
    stage_index = t2c_params.stage_index
    stage = t2c_params.stage
    stage_name = t2c_params.stage_name
    axis_info_list = t2c_params.axis_info_list
    proc_sch = bool(mode == MODE_RUNTIME)
    reverse_axis_list = t2c_params.op_schedule_info.op_attr_dict.get(
        'reverse_axis', [])
    if not reverse_axis_list or axis_info_list[stage_index] is None:
        return True
    align_axis_index = int(reverse_axis_list[len(reverse_axis_list) - 1])
    intrin = t2c_params.op_schedule_info.op_intrin_key_index[
        features[stage_index][FeatureTensorCfg.compute_s]].intrin
    if intrin != 'mov_backup':
        return True

    # 取index为align_axis_index + 1个不是_o结尾的axis
    axis_index = 0
    for i, axis_info in enumerate(axis_info_list[stage_index]):
        axis_name = axis_info.name
        if axis_name.endswith("_io") or axis_name.endswith("_o"):
            continue
        if i >= align_axis_index + 1:
            axis_index = i
            emit_insn_axis = axis_name
            emit_insn_axis_obj = axis_info.body
            axis_num = i
            break

    log.dbg("axis for %s: %s, axis_num:%s", stage.op.name, emit_insn_axis,
            axis_num)
    t2c_params.code_lines.append("sch[%s].emit_insn(%s, '%s')" %
                                 (stage_name, emit_insn_axis, intrin))
    if proc_sch:
        stage.emit_insn(emit_insn_axis_obj, intrin)

    # 生成emit_insn对应的cheque
    get_emit_insn_cheque(t2c_params, stage_index, intrin,
                         (emit_insn_axis, axis_index))

    t2c_params.proc_flag_dict[stage_index] = True
    return True
