#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from schedule_search import log
from schedule_search.ts_env.tensor_to_code.proc_cache_rw.main import \
    gen_cache_rw_info
from tbe.common.platform import platform_info
from tbe import tvm


def condition_check(input_dict):
    """

    :param input_dict:
    :return:
    """
    cache_level = input_dict["cache_level"]
    tensor = input_dict["tensor"]
    tensor_name = tensor.op.name
    stage_info = input_dict["stage_info"]
    consumer_stages_info = input_dict["consumer_stages_info"]

    if cache_level != 1:
        log.dbg("Only Cache L1 Do Cache Write for L0C To UB, tensor Name:%s",
                tensor_name)
        return False

    op_type = type(tensor.op)
    if tvm.ComputeOp != op_type:
        log.dbg("Only ComputeOp Tensor Can do Cache Read, Tensor Op type:%s",
                op_type)
        return False

    if not tensor.op.name.endswith(platform_info.scope_ubuf):
        log.dbg("Only Tensor In UB do Cache Read from UB To L1:%s",
                tensor_name)
        return False

    if "CacheRead" not in stage_info.get("type", []):
        return False

    if consumer_stages_info[0].get('tag') == "conv_l1fuse_reshape":
        return True

    return False


def proc(input_dict):
    """

    :param input_dict:
    :return:
    """
    if not condition_check(input_dict):
        return []

    return gen_cache_rw_info(input_dict["tensor"], input_dict["ori_all_tensors"],
                             "CacheRead", platform_info.scope_cbuf,
                             input_dict['stage_info'], ub2l1=True)
