#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""

from schedule_search import log


class AtInfo:
    """
    AtInfo
    """
    def __init__(self, index):
        # 初始化之后就不能变的成员
        # 初始索引
        self.ori_index = index

        # 最终的索引
        self.index = index
        self.consumers = []
        self.at_target = None

    def __repr__(self):
        repr_str = []
        repr_str.append("[%d]:\n" % self.ori_index)
        for consumer in self.consumers:
            repr_str.append("    [%d] --> %s (%s)\n" % (consumer.ori_index,
                                                        consumer.at_candidates,
                                                        consumer.sampled_target))

        return ''.join(repr_str)

    def is_fork(self):
        """

        :return:
        """
        # 遍历所有的consumer, 如果所有的consumer at target都一样
        at_targets = set()
        for consumer in self.consumers:
            if consumer.sampled_target:
                at_targets.add(consumer.sampled_target)

        # 1:叶子节点没有at target,2:只有一个at target
        if len(at_targets) <= 1:
            return False

        # 如果consumer的at target不同，则返回True
        return True

    def get_all_at_targets(self):
        """

        :return:
        """
        at_targets = []
        for consumer in self.consumers:
            at_targets.append(consumer.sampled_target)

        return list(set(at_targets))

    def consumers_in_group(self):
        """

        :return:
        """
        groups = []
        target_groups = []
        for consumer in self.consumers:
            groups_len = len(groups)
            new_group = True
            for i in range(groups_len):
                if consumer.sampled_target \
                        and consumer.sampled_target in target_groups[i]:
                    new_group = False
                    groups[i].append(consumer)
                    break

            if new_group:
                groups.append([consumer])
                target_groups.append([consumer.sampled_target])

        return groups

    def need_sample(self):
        """
        是否需要通过采样来确定at的target
        """
        for consumer in self.consumers:
            if len(consumer.at_candidates) > 1:
                return True

        return False

    def add_consumer(self, consumer):
        """

        :param consumer:
        """
        self.consumers.append(consumer)

    def get_at_target(self):
        """

        :return:
        """
        # workspace at到最后一个stage
        if self.is_fork():
            return -1

        at_target = self.consumers[0].updated_sampled_target
        if at_target:
            return at_target

        log.warn("stage index:%s updated_sampled_target is None", self.index)
        return None

    def get_sampled_target(self):
        """

        :return:
        """
        at_targets = []
        for consumer in self.consumers:
            at_targets.append(consumer.sampled_target)

        return at_targets
