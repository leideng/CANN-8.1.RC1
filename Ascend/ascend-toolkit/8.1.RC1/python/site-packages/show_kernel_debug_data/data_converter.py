EXPONENT_BIAS_BF16 = 127


def decode_bfloat16(num : int) -> float:
    if num == 0:
        return 0
    elif num == 0xFF80:
        return float("-inf")
    elif num == 0x7F80:
        return float("inf")
    if num >= 0x8000:
        signal_val = -1
    else:
        signal_val = 1
    exponent_val = (num % 0x8000 // 0x0080)
    mantissa_val = (num % 0x8000 % 0x0080) / 0x0080
    if exponent_val == 0xFF and mantissa_val > 0:
        return float("nan")
    if exponent_val == 0:
        return signal_val * 2 ** (-EXPONENT_BIAS_BF16 + 1) * mantissa_val
    else:
        return signal_val * 2 ** (exponent_val - EXPONENT_BIAS_BF16) * (1 + mantissa_val)