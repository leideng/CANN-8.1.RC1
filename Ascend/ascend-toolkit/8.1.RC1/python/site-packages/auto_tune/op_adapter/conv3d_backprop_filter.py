#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2020. Huawei Technologies Co., Ltd. All rights reserved.
Define the class for Conv3dBackpropFilter
"""

from auto_tune.op_adapter.base_op import BaseOpType

OP_TAG_CONV3D_BP_FILTER = 10


class OpConv3dBackpropFilter(BaseOpType):
    '''
    op of conv3d_backprop_filter implement base_op_type
    '''
    def __init__(self, op_type: str) -> None:
        super(OpConv3dBackpropFilter, self).__init__(op_type)
        self.op_tag_encode = OP_TAG_CONV3D_BP_FILTER

    @staticmethod
    def calc_matric_feature(task: object) -> tuple:
        '''
        clac the M,N,K of op conv3d_backprop_filter
        :param task: task
        :return: M,N,K
        '''
        h_o = task.param.get("a_shape")[3]
        w_o = task.param.get("a_shape")[4]

        m_axis = h_o * w_o
        n_axis = task.param["b_shape"][0]
        k_axis = task.param.get("a_shape")[2] * task.param.get("a_shape")[5] * \
                 task.param.get("b_shape")[3] * task.param.get("b_shape")[4]

        return m_axis, n_axis, k_axis

    @staticmethod
    def get_r(m_axis: int, k_axis: int, task: object) -> int:
        '''
        calc the R
        :param m_axis: M
        :param k_axis: K
        :param task:task
        :return: R
        '''
        a_shape = task.param.get("a_shape")
        r_axis = (m_axis * k_axis / (a_shape[2] * a_shape[5] * a_shape[3] * a_shape[4]))
        return r_axis
