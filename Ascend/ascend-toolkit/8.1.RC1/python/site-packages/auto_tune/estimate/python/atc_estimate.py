#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2019. Huawei Technologies Co., Ltd. All rights reserved.

New method, unified entrance of fusion operator, inherit from BaseEstimate.
"""
import os
import json
from te_fusion.parallel_compilation import compile_op
from tbe.common.tiling.tiling_api import get_tiling_type
from tbe.common.tiling.tiling_api import get_params
from tbe.common.tiling.tiling_api import instance_refresh
from auto_tune.offline_util import trans_to_decimal
ESTIMATE_CONFIG_PATH = os.path.dirname(os.path.realpath(__file__))
#define L!/L2 Memory Type
L1_MEMORY_TYPE = 1
L2_MEMORY_TYPE = 2


def update_config(topi_args: dict, kernel: dict) -> dict:
    """
    update config for ATC estimate
    """
    config_dict = {}
    config_dict['kernel_name'] = kernel.get("kernel_name")
    config_dict['tiling_point'] = kernel.get("tiling_point", None)
    config_dict['tiling_entity'] = kernel.get("tiling_entity", None)
    config_dict['tiling_dict'] = kernel.get("tiling_dict", None)
    config_dict['input_size_list'] = topi_args['input_size_list']
    config_dict['output_size_list'] = topi_args['output_size_list']
    config_dict['compress_op_flag'] = topi_args.get("compress_op_flag", 0)
    config_dict['compress_flag'] = topi_args.get("compress_flag", False)
    config_dict['real_input_data'] = topi_args.get("real_input_data", None)
    config_dict['input_memory'] = topi_args.get("input_memory_type", 0)
    config_dict['output_memory'] = topi_args.get("output_memory_type", 0)
    if L1_MEMORY_TYPE in topi_args.get('input_memory_type') or \
            L1_MEMORY_TYPE in topi_args.get('output_memory_type') or \
            L2_MEMORY_TYPE in topi_args.get('input_memory_type') or \
            L2_MEMORY_TYPE in topi_args.get('output_memory_type'):
        config_dict['input_memory'] =  trans_to_decimal(topi_args.get('input_memory_type'), 3)
        config_dict['output_memory'] =  trans_to_decimal(topi_args.get('output_memory_type'), 3)
    else:
        config_dict['input_memory'] = 0
        config_dict['output_memory'] = 0
    config_dict['l1_addr_input_flag'] = topi_args.get("l1_addr_input_flag", 0)
    config_dict['l1_addr_offset'] = topi_args.get("l1_addr_offset", -1)
    config_dict['input_l1_addr_list'] = topi_args.get("input_l1_addr_list", [])
    config_dict['output_l1_addr_list'] =  topi_args.get("output_l1_addr_list", [])
    return config_dict


def atc_build_kernel(topi_args: dict, kernel: dict, tiling_dict: dict) -> object:
    """
    ATC estimate for all kernel
    """
    json_fe = json.loads(topi_args.get("json_str"))
    json_fe["fusion_op_name"] = kernel.get("kernel_name")
    re_dumps_json_str = json.dumps(json_fe)
    config_dict = update_config(topi_args, kernel)
    if not tiling_dict:
        return compile_op(re_dumps_json_str), config_dict
    tiling_type = get_tiling_type()
    tiling_params = get_params()
    func_in_compile = {
        'prerun': (instance_refresh, \
                   ["tuning_tiling", \
                   tiling_params, \
                   tiling_dict]),
        'postrun':(instance_refresh, \
                   [tiling_type, \
                   tiling_params, \
                   {}])}
    return compile_op(re_dumps_json_str, func_in_compile), config_dict
