#!/usr/bin/env python
# coding: utf-8
# Copyright 2019-2020 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
"""
CCE related intrinsics
"""
from __future__ import absolute_import as _abs
from tbe.common import platform as cce_params
from tvm.error_mgr.log import warn
from tbe.dsl.instrinsic import cce_intrin


def get_bit_len(dtype):
    """
    calculate bits of dtype of TVM
    Parameters
    ----------
    dtype : string
        dtype of TVM

    Returns
    -------
    ret : int
        bit length of dtype.
    """

    # logic use vmul vadd vsub vcmp vsel, only support float16, so
    # 1. int8 -> float16 2.  mul vadd vsub vcmp vsel 3. float16 ->int8
    # bit len use float16 length
    warn("te.platform.cce_intrin is expired, "
         "please replace it with tbe.dsl.instrinsic.cce_intrin")
    return cce_intrin.get_bit_len(dtype)


def set_mask(length):
    """
    calculate MASK in cce

    Parameters
    ----------
    length : int
        calculate length

    Returns
    -------
    mask : tuple of int
        low and high bit of mask.
    """
    warn("te.platform.cce_intrin is expired, "
         "please replace it with tbe.dsl.instrinsic.cce_intrin")
    return cce_intrin.set_mask(length)


def intrin_factor(buffer_scope=cce_params.scope_ubuf):
    """
    factory function For tensorize of cce. Using closure tech of Python.
    This function is a API to generate inner explicit functions for tensorize.

    Parameters
    ----------
    buffer_scope

    Returns
    -------
    ret : factory function of of each type.

    example:
        vec_intrin = intrin_factor()
        intrin_mul = vec_intrin("elewise_binary_intrin_cce")
        intrin_sub = vec_intrin("elewise_binary_intrin_cce")
        s[A].tensorize(s[A].op.axis[0], intrin_mul(((256,)),
        "elewise_binary_mul", "foat16", "foat16"))

    """
    warn("te.platform.cce_intrin.intrin_factor is expired, "
         "please replace it with tbe.dsl.instrinsic.cce_intrin.intrin_factor")
    return cce_intrin.intrin_factor(buffer_scope)
