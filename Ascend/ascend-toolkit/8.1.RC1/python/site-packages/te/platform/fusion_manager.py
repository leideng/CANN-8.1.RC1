#!/usr/bin/env python
# coding: utf-8
# Copyright 2019-2020 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
"""
Compute Manager for fusion
"""
import warnings

from te_fusion.fusion_manager import fusion_manager as te_fusion_manager

# 'Example: pylint: disable=invalid-name
# Singleton for managing all registered compute
fusion_manager = te_fusion_manager


def set_op_res(res_val):
    """Get current op_name's build type

    Parameters
    ----------
    args_type : string
        build type need to be set
    """
    import tbe.common.rl_bank.bank_manager as bank_manager
    bank_manager.set_op_res(res_val)
    warnings.warn("fusion_manager.set_op_res is expired, please replace it with bank_manager.set_op_res",
                  DeprecationWarning, stacklevel=2)


def set_tensor_list(tensor_list):
    """save tensor_list

    Parameters
    ----------
    args_type : list
        tensor_list need to save
    """
    import tbe.common.rl_bank.bank_manager as bank_manager
    bank_manager.set_tensor_list(tensor_list)
    warnings.warn("fusion_manager.set_tensor_list is expired, please replace it with bank_manager.set_tensor_list",
                  DeprecationWarning, stacklevel=2)


def set_tik_tensor(input_tensor, output):
    """save tik_tensor

    Parameters
    ----------
    input_tensor : tik input tensor
    output : tik output tensor
    """
    import tbe.common.rl_bank.bank_manager as bank_manager
    bank_manager.set_tik_tensor(input_tensor, output)
    warnings.warn("fusion_manager.set_tik_tensor is expired, please replace it with bank_manager.set_tik_tensor",
                  DeprecationWarning, stacklevel=2)


def set_cheque_list(cheque_list):
    """Save RL cheque_list

    Parameters
    ----------
    cheque_list : RL cheque_list
    """
    import tbe.common.rl_bank.bank_manager as bank_manager
    bank_manager.set_cheque_list(cheque_list)
    warnings.warn("fusion_manager.set_cheque_list is expired, please replace it with bank_manager.set_cheque_list",
                  DeprecationWarning, stacklevel=2)


def clear_cheque_list():
    """clear RL cheque_list

    Parameters
    ----------
    """
    import tbe.common.rl_bank.bank_manager as bank_manager
    bank_manager.clear_cheque_list()
    warnings.warn("fusion_manager.clear_cheque_list is expired, please replace it with bank_manager.clear_cheque_list",
                  DeprecationWarning, stacklevel=2)


def clear_res_index():
    """clear RL res_index

    Parameters
    ----------
    """
    import tbe.common.rl_bank.bank_manager as bank_manager
    bank_manager.clear_res_index()
    warnings.warn("fusion_manager.clear_res_index is expired, please replace it with bank_manager.clear_res_index",
                  DeprecationWarning, stacklevel=2)


def get_op_res(key):
    """Get current op_name's op_args

    Parameters
    ----------
    register_name : string
        key to get build type

    Returns
    -------
    args
        return current op_name's build type.
    """
    import tbe.common.rl_bank.bank_manager as bank_manager
    warnings.warn("fusion_manager.get_op_res is expired, please replace it with bank_manager.get_op_res",
                  DeprecationWarning, stacklevel=2)
    return bank_manager.get_op_res(key)


def get_tik_tensor(key):
    """Get tik op input&output tensor

    Parameters
    ----------

    Returns
    -------
    args
        none
    """
    import tbe.common.rl_bank.bank_manager as bank_manager
    warnings.warn("fusion_manager.get_tik_tensor is expired, please replace it with bank_manager.get_tik_tensor",
                  DeprecationWarning, stacklevel=2)
    return bank_manager.get_tik_tensor(key)


def get_cheque_list(res_index=None):
    """Get RL cheque_list

    Parameters
    ----------
    res_index:
    Returns
    -------
    args
        none
    """
    import tbe.common.rl_bank.bank_manager as bank_manager
    warnings.warn("fusion_manager.get_cheque_list is expired, please replace it with bank_manager.get_cheque_list",
                  DeprecationWarning, stacklevel=2)
    return bank_manager.get_cheque_list(res_index)


def get_res_index():
    """Get RL res_index

    Parameters
    ----------
    Returns
    -------
    args
        none
    """
    import tbe.common.rl_bank.bank_manager as bank_manager
    warnings.warn("fusion_manager.get_res_index is expired, please replace it with bank_manager.get_res_index",
                  DeprecationWarning, stacklevel=2)
    return bank_manager.get_res_index()


def get_build_cfg():
    """Get current name's op_params, build .o or not

    Parameters
    ----------

    Returns
    -------
    succ_flag : boolean
        end of execution
    """
    warnings.warn("te.platform.fusion_manager.get_build_cfg is deprecated,"
                  "please replace it with te_fusion.fusion_manager.get_build_cfg",
                  DeprecationWarning, stacklevel=2)
    return fusion_manager.get_build_cfg()


def get_fusion_build_cfg():
    """get build_config used by fusion manager

    Returns
    -------
    fusion_manger build_config:
    """
    warnings.warn("te.platform.fusion_manager.get_fusion_build_cfg is deprecated,"
                  "please replace it with te_fusion.fusion_manager.get_fusion_build_cfg",
                  DeprecationWarning, stacklevel=2)
    return fusion_manager.get_fusion_build_cfg()
