#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2019. Huawei Technologies Co., Ltd. All rights reserved.
FILE:     debug_api.py
DESC:     debug vm python api
CREATED:  2022-06-16 16:53:42
MODIFIED: 2022-06-16 16:53:42
"""
from . import _ffi_debug_api


class DebugVm:
    """
    debug vm python api
    """

    @staticmethod
    def get_actual_source_num(debug_vm_ctx):
        """
        get stmt_source count in IR after simplify by pass
        """
        return _ffi_debug_api.get_actual_source_num(debug_vm_ctx)

    @staticmethod
    def run_with_source_id(debug_vm_ctx, source_id):
        """
        debug wih source id.
        """
        return _ffi_debug_api.run_with_source_id(debug_vm_ctx, source_id)

    @staticmethod
    def create(ctx_id):
        """
        debug wih source id.
        """
        return _ffi_debug_api.create(ctx_id)

    @staticmethod
    def free(ctx_id):
        """
        debug wih source id.
        """
        return _ffi_debug_api.free(ctx_id)

    @staticmethod
    def set_pv_model(*args):
        """
        debug wih source id.
        """
        return _ffi_debug_api.set_pv_model(*args)

    @staticmethod
    def update_var(*args):
        """
        debug wih source id.
        """
        return _ffi_debug_api.update_var(*args)

    @staticmethod
    def check_var_exist(*args):
        """
        check var exist in vm
        """
        return _ffi_debug_api.check_var_exist(*args)

    @staticmethod
    def get_var_value(*args):
        """
        debug wih source id.
        """
        return _ffi_debug_api.get_var_value(*args)

    @staticmethod
    def set_tensor_buffer(*args):
        """
        debug wih source id.
        """
        return _ffi_debug_api.set_tensor_buffer(*args)


def substitute_scalar(*args):
    """
    debug wih source id.
    """
    return _ffi_debug_api.substitute_scalar(*args)


def substitute_scalar_check(*args):
    """
    debug wih source id.
    """
    return _ffi_debug_api.substitute_scalar_check(*args)


def uses_vars(expr, vars):
    """
    check if any var in vars exists in expr
    """
    return _ffi_debug_api.uses_vars(expr, vars)


def is_large_uint(tvm_imm):
    """
    debug wih source id.
    """
    return _ffi_debug_api.is_large_uint(tvm_imm)


def evaluate_expr_ex(expr):
    """
    evaluate expr with large uint
    """
    return _ffi_debug_api.evaluate_expr_ex(expr)
