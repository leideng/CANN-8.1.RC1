#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2019. Huawei Technologies Co., Ltd. All rights reserved.
FILE:     instr_encoder.py
DESC:     encode instruction
CREATED:  2019-7-04 20:12:13
MODIFIED: 2020-12-7 19:17:00
"""

from ctypes import cdll
from ctypes import c_uint32
from ctypes import POINTER
from tbe.tik.debug.sim.instr_encoder_const import InstrGenParam
from tbe.tik.debug.sim.instr_encoder_const import VecInstrGenParam

ENCODE_LIBRARY_PATH_NAME = 'libtvm.so'
_ENCODE_DLL = cdll.LoadLibrary(ENCODE_LIBRARY_PATH_NAME)


class TransEncoder:
    def __init__(self):
        super().__init__()
        self.gen_vnchwconv = _ENCODE_DLL.GenVnchwconv
        self.gen_vnchwconv.restype = c_uint32
        self.gen_vnchwconv.argtypes = [POINTER(InstrGenParam)]

        self.gen_vtranspose = _ENCODE_DLL.GenVtranspose
        self.gen_vtranspose.restype = c_uint32
        self.gen_vtranspose.argtypes = [POINTER(InstrGenParam)]

        self.gen_v4dtrans = _ENCODE_DLL.GenV4dtrans
        self.gen_v4dtrans.restype = c_uint32
        self.gen_v4dtrans.argtypes = [POINTER(InstrGenParam)]


class VecSingleOpEncoder:
    def __init__(self):
        super().__init__()
        self.gen_vexpx = _ENCODE_DLL.GenVexpx
        self.gen_vexpx.restype = c_uint32
        self.gen_vexpx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vrsqrtx = _ENCODE_DLL.GenVrsqrtx
        self.gen_vrsqrtx.restype = c_uint32
        self.gen_vrsqrtx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vrelux = _ENCODE_DLL.GenVrelux
        self.gen_vrelux.restype = c_uint32
        self.gen_vrelux.argtypes = [POINTER(InstrGenParam)]

        self.gen_vrecx = _ENCODE_DLL.GenVrecx
        self.gen_vrecx.restype = c_uint32
        self.gen_vrecx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vlnx = _ENCODE_DLL.GenVlnx
        self.gen_vlnx.restype = c_uint32
        self.gen_vlnx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vnotx = _ENCODE_DLL.GenVnotx
        self.gen_vnotx.restype = c_uint32
        self.gen_vnotx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vsqrtx = _ENCODE_DLL.GenVsqrtx
        self.gen_vsqrtx.restype = c_uint32
        self.gen_vsqrtx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vabsx = _ENCODE_DLL.GenVabsx
        self.gen_vabsx.restype = c_uint32
        self.gen_vabsx.argtypes = [POINTER(InstrGenParam)]


class VecDoubleOpsEncoder:
    def __init__(self):
        super().__init__()
        self.gen_vaddx = _ENCODE_DLL.GenVaddx
        self.gen_vaddx.restype = c_uint32
        self.gen_vaddx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vsubx = _ENCODE_DLL.GenVsubx
        self.gen_vsubx.restype = c_uint32
        self.gen_vsubx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vmaxx = _ENCODE_DLL.GenVmaxx
        self.gen_vmaxx.restype = c_uint32
        self.gen_vmaxx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vminx = _ENCODE_DLL.GenVminx
        self.gen_vminx.restype = c_uint32
        self.gen_vminx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vmulx = _ENCODE_DLL.GenVmulx
        self.gen_vmulx.restype = c_uint32
        self.gen_vmulx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vorx = _ENCODE_DLL.GenVorx
        self.gen_vorx.restype = c_uint32
        self.gen_vorx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vandx = _ENCODE_DLL.GenVandx
        self.gen_vandx.restype = c_uint32
        self.gen_vandx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vdivx = _ENCODE_DLL.GenVdivx
        self.gen_vdivx.restype = c_uint32
        self.gen_vdivx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vmulconvx = _ENCODE_DLL.GenVmulconvx
        self.gen_vmulconvx.restype = c_uint32
        self.gen_vmulconvx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vadd_deq_relux = _ENCODE_DLL.GenVadddeqrelux
        self.gen_vadd_deq_relux.restype = c_uint32
        self.gen_vadd_deq_relux.argtypes = [POINTER(InstrGenParam)]

        self.gen_vbi = _ENCODE_DLL.GenVbi
        self.gen_vbi.restype = c_uint32
        self.gen_vbi.argtypes = [POINTER(InstrGenParam)]

        self.gen_vdp = _ENCODE_DLL.GenVdp
        self.gen_vdp.restype = c_uint32
        self.gen_vdp.argtypes = [POINTER(InstrGenParam)]


class TripleOpEncoder:
    def __init__(self):
        super().__init__()
        self.gen_vmlax = _ENCODE_DLL.GenVmlax
        self.gen_vmlax.restype = c_uint32
        self.gen_vmlax.argtypes = [POINTER(InstrGenParam)]

        self.gen_vmaddx = _ENCODE_DLL.GenVmaddx
        self.gen_vmaddx.restype = c_uint32
        self.gen_vmaddx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vmaddrelux = _ENCODE_DLL.GenVmaddrelux
        self.gen_vmaddrelux.restype = c_uint32
        self.gen_vmaddrelux.argtypes = [POINTER(InstrGenParam)]


class ScalarDoubleOpEncoder:
    def __init__(self):
        super().__init__()
        self.gen_vaddsx = _ENCODE_DLL.GenVaddsx
        self.gen_vaddsx.restype = c_uint32
        self.gen_vaddsx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vmulsx = _ENCODE_DLL.GenVmulsx
        self.gen_vmulsx.restype = c_uint32
        self.gen_vmulsx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vmaxsx = _ENCODE_DLL.GenVmaxsx
        self.gen_vmaxsx.restype = c_uint32
        self.gen_vmaxsx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vminsx = _ENCODE_DLL.GenVminsx
        self.gen_vminsx.restype = c_uint32
        self.gen_vminsx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vlrelux = _ENCODE_DLL.GenVlrelux
        self.gen_vlrelux.restype = c_uint32
        self.gen_vlrelux.argtypes = [POINTER(InstrGenParam)]

        self.gen_vshrx = _ENCODE_DLL.GenVshrx
        self.gen_vshrx.restype = c_uint32
        self.gen_vshrx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vshlx = _ENCODE_DLL.GenVshlx
        self.gen_vshlx.restype = c_uint32
        self.gen_vshlx.argtypes = [POINTER(InstrGenParam)]


class ScalarTripleOpEncoder:
    def __init__(self):
        super().__init__()
        self.gen_vaxpyx = _ENCODE_DLL.GenVaxpyx
        self.gen_vaxpyx.restype = c_uint32
        self.gen_vaxpyx.argtypes = [POINTER(InstrGenParam)]


class CmpSelEncoder:
    def __init__(self):
        super().__init__()
        self.gen_vcmpx = _ENCODE_DLL.GenVcmpx
        self.gen_vcmpx.restype = c_uint32
        self.gen_vcmpx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcmpvx = _ENCODE_DLL.GenVcmpvx
        self.gen_vcmpvx.restype = c_uint32
        self.gen_vcmpvx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcmpvx_s32_eq = _ENCODE_DLL.GenVcmpvxS32Eq
        self.gen_vcmpvx_s32_eq.restype = c_uint32
        self.gen_vcmpvx_s32_eq.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcmpvsx = _ENCODE_DLL.GenVcmpvsx
        self.gen_vcmpvsx.restype = c_uint32
        self.gen_vcmpvsx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcmpvsx_s32_eq = _ENCODE_DLL.GenVcmpvsxS32Eq
        self.gen_vcmpvsx_s32_eq.restype = c_uint32
        self.gen_vcmpvsx_s32_eq.argtypes = [POINTER(InstrGenParam)]

        self.gen_vselx = _ENCODE_DLL.GenVselx
        self.gen_vselx.restype = c_uint32
        self.gen_vselx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vreduce = _ENCODE_DLL.GenVreduce
        self.gen_vreduce.restype = c_uint32
        self.gen_vreduce.argtypes = [POINTER(InstrGenParam)]

        self.gen_vaddrelux = _ENCODE_DLL.GenVaddrelux
        self.gen_vaddrelux.restype = c_uint32
        self.gen_vaddrelux.argtypes = [POINTER(InstrGenParam)]


class ReduceEncoder:
    def __init__(self):
        super().__init__()
        self.gen_vcadd = _ENCODE_DLL.GenVcadd
        self.gen_vcadd.restype = c_uint32
        self.gen_vcadd.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcadd_910b = _ENCODE_DLL.GenVcadd910B
        self.gen_vcadd_910b.restype = c_uint32
        self.gen_vcadd_910b.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcmax = _ENCODE_DLL.GenVcmax
        self.gen_vcmax.restype = c_uint32
        self.gen_vcmax.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcmin = _ENCODE_DLL.GenVcmin
        self.gen_vcmin.restype = c_uint32
        self.gen_vcmin.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcmax_910b = _ENCODE_DLL.GenVcmax910B
        self.gen_vcmax_910b.restype = c_uint32
        self.gen_vcmax_910b.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcmin_910b = _ENCODE_DLL.GenVcmin910B
        self.gen_vcmin_910b.restype = c_uint32
        self.gen_vcmin_910b.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcgmax = _ENCODE_DLL.GenVcgmax
        self.gen_vcgmax.restype = c_uint32
        self.gen_vcgmax.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcgmin = _ENCODE_DLL.GenVcgmin
        self.gen_vcgmin.restype = c_uint32
        self.gen_vcgmin.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcgadd = _ENCODE_DLL.GenVcgadd
        self.gen_vcgadd.restype = c_uint32
        self.gen_vcgadd.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcpadd = _ENCODE_DLL.GenVcpadd
        self.gen_vcpadd.restype = c_uint32
        self.gen_vcpadd.argtypes = [POINTER(InstrGenParam)]


class DataVconvEncoder:
    def __init__(self):
        super().__init__()
        self.gen_vconvx = _ENCODE_DLL.GenVconvx
        self.gen_vconvx.restype = c_uint32
        self.gen_vconvx.argtypes = [POINTER(InstrGenParam)]

        self.gen_vconvx_910b = _ENCODE_DLL.GenVconvx910B
        self.gen_vconvx_910b.restype = c_uint32
        self.gen_vconvx_910b.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcbd = _ENCODE_DLL.GenVcbd
        self.gen_vcbd.restype = c_uint32
        self.gen_vcbd.argtypes = [POINTER(InstrGenParam)]

        self.gen_conv = _ENCODE_DLL.GenConv
        self.gen_conv.restype = c_uint32
        self.gen_conv.argtypes = [POINTER(InstrGenParam)]


class VecEncoder(VecSingleOpEncoder, TransEncoder,
                 VecDoubleOpsEncoder, TripleOpEncoder, ScalarDoubleOpEncoder,
                 ScalarTripleOpEncoder, CmpSelEncoder, ReduceEncoder,
                 DataVconvEncoder):
    def __init__(self):
        super().__init__()

        self.gen_vgather = _ENCODE_DLL.GenVgather
        self.gen_vgather.restype = c_uint32
        self.gen_vgather.argtypes = [POINTER(InstrGenParam)]

        self.gen_vgatherb = _ENCODE_DLL.GenVgatherb
        self.gen_vgatherb.restype = c_uint32
        self.gen_vgatherb.argtypes = [POINTER(InstrGenParam)]

        self.gen_vbrcb = _ENCODE_DLL.GenVbrcb
        self.gen_vbrcb.restype = c_uint32
        self.gen_vbrcb.argtypes = [POINTER(InstrGenParam)]

        self.gen_vscatter = _ENCODE_DLL.GenVscatter
        self.gen_vscatter.restype = c_uint32
        self.gen_vscatter.argtypes = [POINTER(InstrGenParam)]

        self.gen_vpadding = _ENCODE_DLL.GenVpadding
        self.gen_vpadding.restype = c_uint32
        self.gen_vpadding.argtypes = [POINTER(InstrGenParam)]

        self.gen_vbs16 = _ENCODE_DLL.GenVbs16
        self.gen_vbs16.restype = c_uint32
        self.gen_vbs16.argtypes = [POINTER(InstrGenParam)]

        self.gen_vms4 = _ENCODE_DLL.GenVms4
        self.gen_vms4.restype = c_uint32
        self.gen_vms4.argtypes = [POINTER(InstrGenParam)]

        self.gen_vextract = _ENCODE_DLL.GenVextract
        self.gen_vextract.restype = c_uint32
        self.gen_vextract.argtypes = [POINTER(InstrGenParam)]

        self.gen_vconcat = _ENCODE_DLL.GenVconcat
        self.gen_vconcat.restype = c_uint32
        self.gen_vconcat.argtypes = [POINTER(InstrGenParam)]

        self.gen_vmergech = _ENCODE_DLL.GenVmergech
        self.gen_vmergech.restype = c_uint32
        self.gen_vmergech.argtypes = [POINTER(InstrGenParam)]

        self.gen_vbs32 = _ENCODE_DLL.GenVbs32
        self.gen_vbs32.restype = c_uint32
        self.gen_vbs32.argtypes = [POINTER(InstrGenParam)]

        self.gen_vms4v2 = _ENCODE_DLL.GenVms4v2
        self.gen_vms4v2.restype = c_uint32
        self.gen_vms4v2.argtypes = [POINTER(InstrGenParam)]

        self.gen_vsubrelux = _ENCODE_DLL.GenVsubrelux
        self.gen_vsubrelux.restype = c_uint32
        self.gen_vsubrelux.argtypes = [POINTER(InstrGenParam)]


class ObjRecognitionEncoder:
    def __init__(self):
        super().__init__()
        self.gen_viou = _ENCODE_DLL.GenViou
        self.gen_viou.restype = c_uint32
        self.gen_viou.argtypes = [POINTER(InstrGenParam)]

        self.gen_vaadd = _ENCODE_DLL.GenVaadd
        self.gen_vaadd.restype = c_uint32
        self.gen_vaadd.argtypes = [POINTER(InstrGenParam)]


class SprEncoder:
    def __init__(self):
        super().__init__()
        self.gen_rpn_cor = _ENCODE_DLL.GenRpncor
        self.gen_rpn_cor.restype = c_uint32
        self.gen_rpn_cor.argtypes = [POINTER(InstrGenParam)]

        self.gen_rpn_cor_diag = _ENCODE_DLL.GenRpncordiag
        self.gen_rpn_cor_diag.restype = c_uint32
        self.gen_rpn_cor_diag.argtypes = [POINTER(InstrGenParam)]

        self.gen_vrpac = _ENCODE_DLL.GenVrpac
        self.gen_vrpac.restype = c_uint32
        self.gen_vrpac.argtypes = [POINTER(InstrGenParam)]


class VecRegDmaEncoder:
    def __init__(self):
        super().__init__()
        self.gen_data_move_pad = _ENCODE_DLL.GenMovPad
        self.gen_data_move_pad.restype = c_uint32
        self.gen_data_move_pad.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_data_move_multi_nd2nz = _ENCODE_DLL.GenDmaNd2Nz
        self.gen_data_move_multi_nd2nz.restype = c_uint32
        self.gen_data_move_multi_nd2nz.argtypes = [POINTER(InstrGenParam)]

        self.gen_mvf_move = _ENCODE_DLL.GenMvfMov
        self.gen_mvf_move.restype = c_uint32
        self.gen_mvf_move.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_mvf_dci = _ENCODE_DLL.GenMvfDci
        self.gen_mvf_dci.restype = c_uint32
        self.gen_mvf_dci.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_store = _ENCODE_DLL.GenVst
        self.gen_vector_store.restype = c_uint32
        self.gen_vector_store.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_store_vsts = _ENCODE_DLL.GenVsts
        self.gen_vector_store_vsts.restype = c_uint32
        self.gen_vector_store_vsts.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_store_vstu = _ENCODE_DLL.GenVstu
        self.gen_vector_store_vstu.restype = c_uint32
        self.gen_vector_store_vstu.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_store_vstus = _ENCODE_DLL.GenVstus
        self.gen_vector_store_vstus.restype = c_uint32
        self.gen_vector_store_vstus.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_store_vsta = _ENCODE_DLL.GenVsta
        self.gen_vector_store_vsta.restype = c_uint32
        self.gen_vector_store_vsta.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_store_vstas = _ENCODE_DLL.GenVstas
        self.gen_vector_store_vstas.restype = c_uint32
        self.gen_vector_store_vstas.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_store_stur = _ENCODE_DLL.GenVstur
        self.gen_vector_store_stur.restype = c_uint32
        self.gen_vector_store_stur.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_store_star = _ENCODE_DLL.GenVstar
        self.gen_vector_store_star.restype = c_uint32
        self.gen_vector_store_star.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_load = _ENCODE_DLL.GenVld
        self.gen_vector_load.restype = c_uint32
        self.gen_vector_load.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_load_vlds = _ENCODE_DLL.GenVlds
        self.gen_vector_load_vlds.restype = c_uint32
        self.gen_vector_load_vlds.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_load_vlda = _ENCODE_DLL.GenVlda
        self.gen_vector_load_vlda.restype = c_uint32
        self.gen_vector_load_vlda.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_load_vldas = _ENCODE_DLL.GenVldas
        self.gen_vector_load_vldas.restype = c_uint32
        self.gen_vector_load_vldas.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_load_vldu = _ENCODE_DLL.GenVldu
        self.gen_vector_load_vldu.restype = c_uint32
        self.gen_vector_load_vldu.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_load_vldus = _ENCODE_DLL.GenVldus
        self.gen_vector_load_vldus.restype = c_uint32
        self.gen_vector_load_vldus.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_mask_load = _ENCODE_DLL.GenPld
        self.gen_vector_mask_load.restype = c_uint32
        self.gen_vector_mask_load.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_mask_load_plds = _ENCODE_DLL.GenPlds
        self.gen_vector_mask_load_plds.restype = c_uint32
        self.gen_vector_mask_load_plds.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_mask_store = _ENCODE_DLL.GenPst
        self.gen_vector_mask_store.restype = c_uint32
        self.gen_vector_mask_store.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_mask_store_psts = _ENCODE_DLL.GenPsts
        self.gen_vector_mask_store_psts.restype = c_uint32
        self.gen_vector_mask_store_psts.argtypes = [POINTER(VecInstrGenParam)]


class VecRegEncoder:
    def __init__(self):
        super().__init__()
        self.gen_fifr1_h32 = _ENCODE_DLL.GenFifr1H32
        self.gen_fifr1_h32.restype = c_uint32
        self.gen_fifr1_h32.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_fifr1_l32 = _ENCODE_DLL.GenFifr1L32
        self.gen_fifr1_l32.restype = c_uint32
        self.gen_fifr1_l32.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_fmaxfmin_l32 = _ENCODE_DLL.GenFmaxFminL32
        self.gen_fmaxfmin_l32.restype = c_uint32
        self.gen_fmaxfmin_l32.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vag = _ENCODE_DLL.GenVag
        self.gen_vag.restype = c_uint32
        self.gen_vag.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_plt = _ENCODE_DLL.GenPlt
        self.gen_vector_plt.restype = c_uint32
        self.gen_vector_plt.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_pge = _ENCODE_DLL.GenPge
        self.gen_vector_pge.restype = c_uint32
        self.gen_vector_pge.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_pset = _ENCODE_DLL.GenPset
        self.gen_vector_pset.restype = c_uint32
        self.gen_vector_pset.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_pslide = _ENCODE_DLL.GenPslide
        self.gen_vector_pslide.restype = c_uint32
        self.gen_vector_pslide.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vscatter = _ENCODE_DLL.GenVscatter2
        self.gen_vector_vscatter.restype = c_uint32
        self.gen_vector_vscatter.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_elewise = _ENCODE_DLL.GenElewise
        self.gen_vector_elewise.restype = c_uint32
        self.gen_vector_elewise.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_elewise_wpackv300 = _ENCODE_DLL.GenElewiseWpackV300
        self.gen_vector_elewise_wpackv300.restype = c_uint32
        self.gen_vector_elewise_wpackv300.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vcbmax_vcbmin = _ENCODE_DLL.GenVcbmaxVcbmin
        self.gen_vector_vcbmax_vcbmin.restype = c_uint32
        self.gen_vector_vcbmax_vcbmin.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_elewise_scalar = _ENCODE_DLL.GenElewiseScalar
        self.gen_vector_elewise_scalar.restype = c_uint32
        self.gen_vector_elewise_scalar.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vslidev300 = _ENCODE_DLL.GenVslidev300
        self.gen_vector_vslidev300.restype = c_uint32
        self.gen_vector_vslidev300.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_dhist_chist = _ENCODE_DLL.GenDhistChist
        self.gen_vector_dhist_chist.restype = c_uint32
        self.gen_vector_dhist_chist.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_cmp = _ENCODE_DLL.GenVcmp
        self.gen_vector_cmp.restype = c_uint32
        self.gen_vector_cmp.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_cmps = _ENCODE_DLL.GenVcmps
        self.gen_vector_cmps.restype = c_uint32
        self.gen_vector_cmps.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_whole_reduce
        self.gen_vector_whole_reduce = _ENCODE_DLL.GenVwholeElewise
        self.gen_vector_whole_reduce.restype = c_uint32
        self.gen_vector_whole_reduce.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_single_elewise
        self.gen_vector_single_elewise = _ENCODE_DLL.GenVsingleElewise
        self.gen_vector_single_elewise.restype = c_uint32
        self.gen_vector_single_elewise.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_vselr
        self.gen_vector_vselr = _ENCODE_DLL.GenVselr
        self.gen_vector_vselr.restype = c_uint32
        self.gen_vector_vselr.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_vpack_vunpack
        self.gen_vector_vpack_vunpack = _ENCODE_DLL.GenVpackVunpack
        self.gen_vector_vpack_vunpack.restype = c_uint32
        self.gen_vector_vpack_vunpack.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_vbr_v300
        self.gen_vector_vbr_v300 = _ENCODE_DLL.GenVbrV300
        self.gen_vector_vbr_v300.restype = c_uint32
        self.gen_vector_vbr_v300.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_initial
        self.gen_vector_initial = _ENCODE_DLL.GenVbrVci
        self.gen_vector_initial.restype = c_uint32
        self.gen_vector_initial.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_intlv_dintlv
        self.gen_vector_intlv_dintlv = _ENCODE_DLL.GenVintlvVdintlv
        self.gen_vector_intlv_dintlv.restype = c_uint32
        self.gen_vector_intlv_dintlv.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_preg_tenary_elewise
        self.gen_vector_preg_tenary_elewise = _ENCODE_DLL.GenPregTenaryElewise
        self.gen_vector_preg_tenary_elewise.restype = c_uint32
        self.gen_vector_preg_tenary_elewise.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_preg_intlv_dintlv
        self.gen_vector_preg_intlv_dintlv = _ENCODE_DLL.GenPintlvPdintlv
        self.gen_vector_preg_intlv_dintlv.restype = c_uint32
        self.gen_vector_preg_intlv_dintlv.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_preg_pack_unpack
        self.gen_vector_preg_pack_unpack = _ENCODE_DLL.GenPpackPunpack
        self.gen_vector_preg_pack_unpack.restype = c_uint32
        self.gen_vector_preg_pack_unpack.argtypes = [POINTER(VecInstrGenParam)]

        # vgather2/vgatherb
        self.gen_vector_vgather = _ENCODE_DLL.GenVgather2
        self.gen_vector_vgather.restype = c_uint32
        self.gen_vector_vgather.argtypes = [POINTER(VecInstrGenParam)]

        # gen_vector_reg_tenary_elewise
        self.gen_vector_reg_tenary_elewise = \
            _ENCODE_DLL.GenVregTenaryElewise
        self.gen_vector_reg_tenary_elewise.restype = c_uint32
        self.gen_vector_reg_tenary_elewise.argtypes = \
            [POINTER(VecInstrGenParam)]

        self.gen_vector_vtrc = _ENCODE_DLL.GenVtrc
        self.gen_vector_vtrc.restype = c_uint32
        self.gen_vector_vtrc.argtypes = [POINTER(VecInstrGenParam)]


class DmaEncoder:
    def __init__(self):
        super().__init__()
        self.gen_move_vx = _ENCODE_DLL.GenMovevx
        self.gen_move_vx.restype = c_uint32
        self.gen_move_vx.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_ld_2d = _ENCODE_DLL.GenDmald2d
        self.gen_dma_ld_2d.restype = c_uint32
        self.gen_dma_ld_2d.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_ld_2d_v3_gm = _ENCODE_DLL.GenDmald2dV3Gm
        self.gen_dma_ld_2d_v3_gm.restype = c_uint32
        self.gen_dma_ld_2d_v3_gm.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_ld_2d_v3_cb = _ENCODE_DLL.GenDmald2dV3Cb
        self.gen_dma_ld_2d_v3_cb.restype = c_uint32
        self.gen_dma_ld_2d_v3_cb.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_ld_smask = _ENCODE_DLL.GenDmaldsmask
        self.gen_dma_ld_smask.restype = c_uint32
        self.gen_dma_ld_smask.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_set_2d = _ENCODE_DLL.GenDmaset2d
        self.gen_dma_set_2d.restype = c_uint32
        self.gen_dma_set_2d.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_brc = _ENCODE_DLL.GenDmabrc
        self.gen_dma_brc.restype = c_uint32
        self.gen_dma_brc.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_ld_img = _ENCODE_DLL.GenDmaldimg
        self.gen_dma_ld_img.restype = c_uint32
        self.gen_dma_ld_img.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_ld_3d = _ENCODE_DLL.GenDmald3d
        self.gen_dma_ld_3d.restype = c_uint32
        self.gen_dma_ld_3d.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_ld_3dv2 = _ENCODE_DLL.GenDmald3dv2
        self.gen_dma_ld_3dv2.restype = c_uint32
        self.gen_dma_ld_3dv2.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_winograd_l0b = _ENCODE_DLL.GenDmawinogradL0b
        self.gen_dma_winograd_l0b.restype = c_uint32
        self.gen_dma_winograd_l0b.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_winograd_l0a = _ENCODE_DLL.GenDmawinogradL0a
        self.gen_dma_winograd_l0a.restype = c_uint32
        self.gen_dma_winograd_l0a.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_mov = _ENCODE_DLL.GenDmamov
        self.gen_dma_mov.restype = c_uint32
        self.gen_dma_mov.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_mov_910b = _ENCODE_DLL.GenDmamov910B
        self.gen_dma_mov_910b.restype = c_uint32
        self.gen_dma_mov_910b.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_mov_610lite = _ENCODE_DLL.GenDmamov610Lite
        self.gen_dma_mov_610lite.restype = c_uint32
        self.gen_dma_mov_610lite.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_col2_img = _ENCODE_DLL.GenDmacol2img
        self.gen_dma_col2_img.restype = c_uint32
        self.gen_dma_col2_img.argtypes = [POINTER(InstrGenParam)]

        self.gen_vcopy = _ENCODE_DLL.GenVcopy
        self.gen_vcopy.restype = c_uint32
        self.gen_vcopy.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_winograd_l0bv2 = _ENCODE_DLL.GenDmawinogradL0bV2
        self.gen_dma_winograd_l0bv2.restype = c_uint32
        self.gen_dma_winograd_l0bv2.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_winograd_l0av2 = _ENCODE_DLL.GenDmawinogradL0aV2
        self.gen_dma_winograd_l0av2.restype = c_uint32
        self.gen_dma_winograd_l0av2.argtypes = [POINTER(InstrGenParam)]

        self.gen_dma_winograd_conv = _ENCODE_DLL.GenDmawinogradConv
        self.gen_dma_winograd_conv.restype = c_uint32
        self.gen_dma_winograd_conv.argtypes = [POINTER(InstrGenParam)]


class VecRegCast:
    def __init__(self):
        super().__init__()
        # vcvt/vscvt
        self.gen_vector_vcvt_vscvt = _ENCODE_DLL.GenVcvtVscvt
        self.gen_vector_vcvt_vscvt.restype = c_uint32
        self.gen_vector_vcvt_vscvt.argtypes = [POINTER(VecInstrGenParam)]

        # vfcvt/vsfcvt
        self.gen_vector_vfcvt_f322f16 = _ENCODE_DLL.GenVfcvtF322F16
        self.gen_vector_vfcvt_f322f16.restype = c_uint32
        self.gen_vector_vfcvt_f322f16.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_f322s32 = _ENCODE_DLL.GenVfcvtF322S32
        self.gen_vector_vfcvt_f322s32.restype = c_uint32
        self.gen_vector_vfcvt_f322s32.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_f322s16 = _ENCODE_DLL.GenVfcvtF322S16
        self.gen_vector_vfcvt_f322s16.restype = c_uint32
        self.gen_vector_vfcvt_f322s16.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vsfcvt_f322s16 = _ENCODE_DLL.GenVsfcvtF322S16
        self.gen_vector_vsfcvt_f322s16.restype = c_uint32
        self.gen_vector_vsfcvt_f322s16.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_f162f32 = _ENCODE_DLL.GenVfcvtF162F32
        self.gen_vector_vfcvt_f162f32.restype = c_uint32
        self.gen_vector_vfcvt_f162f32.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_f162s8 = _ENCODE_DLL.GenVfcvtF162S8
        self.gen_vector_vfcvt_f162s8.restype = c_uint32
        self.gen_vector_vfcvt_f162s8.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_f162u8 = _ENCODE_DLL.GenVfcvtF162U8
        self.gen_vector_vfcvt_f162u8.restype = c_uint32
        self.gen_vector_vfcvt_f162u8.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_f162s32 = _ENCODE_DLL.GenVfcvtF162S32
        self.gen_vector_vfcvt_f162s32.restype = c_uint32
        self.gen_vector_vfcvt_f162s32.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_f162s16 = _ENCODE_DLL.GenVfcvtF162S16
        self.gen_vector_vfcvt_f162s16.restype = c_uint32
        self.gen_vector_vfcvt_f162s16.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vsfcvt_f162s16 = _ENCODE_DLL.GenVsfcvtF162S16
        self.gen_vector_vsfcvt_f162s16.restype = c_uint32
        self.gen_vector_vsfcvt_f162s16.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_u82f16 = _ENCODE_DLL.GenVfcvtU82F16
        self.gen_vector_vfcvt_u82f16.restype = c_uint32
        self.gen_vector_vfcvt_u82f16.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_s82f16 = _ENCODE_DLL.GenVfcvtS82F16
        self.gen_vector_vfcvt_s82f16.restype = c_uint32
        self.gen_vector_vfcvt_s82f16.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_s162f16 = _ENCODE_DLL.GenVfcvtS162F16
        self.gen_vector_vfcvt_s162f16.restype = c_uint32
        self.gen_vector_vfcvt_s162f16.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_s162f32 = _ENCODE_DLL.GenVfcvtS162F32
        self.gen_vector_vfcvt_s162f32.restype = c_uint32
        self.gen_vector_vfcvt_s162f32.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vfcvt_s322f32 = _ENCODE_DLL.GenVfcvtS322F32
        self.gen_vector_vfcvt_s322f32.restype = c_uint32
        self.gen_vector_vfcvt_s322f32.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vsfcvt_f322s32 = _ENCODE_DLL.GenVsfcvtF322S32
        self.gen_vector_vsfcvt_f322s32.restype = c_uint32
        self.gen_vector_vsfcvt_f322s32.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vsfcvt_f162s8 = _ENCODE_DLL.GenVsfcvtF162S8
        self.gen_vector_vsfcvt_f162s8.restype = c_uint32
        self.gen_vector_vsfcvt_f162s8.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vsfcvt_f162u8 = _ENCODE_DLL.GenVsfcvtF162U8
        self.gen_vector_vsfcvt_f162u8.restype = c_uint32
        self.gen_vector_vsfcvt_f162u8.argtypes = [POINTER(VecInstrGenParam)]

        # vcvt_if/vcvt_fi/vcvt_ff
        self.gen_vector_vfcvt_v300 = _ENCODE_DLL.GenVfcvtV300
        self.gen_vector_vfcvt_v300.restype = c_uint32
        self.gen_vector_vfcvt_v300.argtypes = [POINTER(VecInstrGenParam)]


class VecRegFill:
    def __init__(self):
        super().__init__()
        # gen_vector_vci_v300
        self.gen_vector_vci_v300 = _ENCODE_DLL.GenVciV300
        self.gen_vector_vci_v300.restype = c_uint32
        self.gen_vector_vci_v300.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vdups = _ENCODE_DLL.GenVdups
        self.gen_vector_vdups.restype = c_uint32
        self.gen_vector_vdups.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vdup = _ENCODE_DLL.GenVdup
        self.gen_vector_vdup.restype = c_uint32
        self.gen_vector_vdup.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vector_vdupi = _ENCODE_DLL.GenVdupi
        self.gen_vector_vdupi.restype = c_uint32
        self.gen_vector_vdupi.argtypes = [POINTER(VecInstrGenParam)]


class VecRegVloop:
    def __init__(self):
        super().__init__()
        self.gen_vloopn_gen = _ENCODE_DLL.GenVloopn
        self.gen_vloopn_gen.restype = c_uint32
        self.gen_vloopn_gen.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vloop_param1 = _ENCODE_DLL.GenVloopParam1
        self.gen_vloop_param1.restype = c_uint32
        self.gen_vloop_param1.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vloop_param2 = _ENCODE_DLL.GenVloopParam2
        self.gen_vloop_param2.restype = c_uint32
        self.gen_vloop_param2.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_vloop_param3 = _ENCODE_DLL.GenVloopParam3
        self.gen_vloop_param3.restype = c_uint32
        self.gen_vloop_param3.argtypes = [POINTER(VecInstrGenParam)]


class Encoder(VecEncoder, ObjRecognitionEncoder, SprEncoder, DmaEncoder, VecRegEncoder,
              VecRegDmaEncoder, VecRegCast, VecRegFill, VecRegVloop):
    """
    instruct encode for model.
    """

    def __init__(self):
        super().__init__()
        self.gen_obj_detect_1v300 = _ENCODE_DLL.GenObjDetectV300Instr1
        self.gen_obj_detect_1v300.restype = c_uint32
        self.gen_obj_detect_1v300.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_obj_detect_2v300 = _ENCODE_DLL.GenObjDetectV300Instr2
        self.gen_obj_detect_2v300.restype = c_uint32
        self.gen_obj_detect_2v300.argtypes = [POINTER(VecInstrGenParam)]

        self.gen_mmad = _ENCODE_DLL.GenMmad
        self.gen_mmad.restype = c_uint32
        self.gen_mmad.argtypes = [POINTER(InstrGenParam)]

        self.gen_dp = _ENCODE_DLL.GenDp
        self.gen_dp.restype = c_uint32
        self.gen_dp.argtypes = [POINTER(InstrGenParam)]

        self._encoder_str = "represent instr encoder"

    def __str__(self):
        """
        use to represent instr encoder
        :return:
        """
        return self._encoder_str

    @staticmethod
    def new_param():
        """
        new  param for function call.
        """
        return InstrGenParam()

    @staticmethod
    def new_vec_param():
        """
        new  param for function call.
        """
        return VecInstrGenParam()
