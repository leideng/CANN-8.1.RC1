#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2019. Huawei Technologies Co., Ltd. All rights reserved.
FILE:     tik_vector_cube_debug.py
DESC:     this file contains many decorator
CREATED:  2021-12-07 9:53:13
MODIFIED: 2021-12-07 9:53:45
"""
from functools import wraps

from tbe.tik.debug.tik_vector_ops_debug.tik_vector_cube_debug_ import DepthwiseConv
from tbe.tik.debug.tik_vector_ops_debug.tik_vector_cube_debug_ import MMAD
from tbe.tik.debug.tikdbg.codemapping import get_caller_context


def depthwise_conv_decorator(func):
    """
    bind this decorator with depthwise_conv instruction
    """
    @wraps(func)
    def wrapper(tik_instance, depthwise_conv_api):
        if not tik_instance.debug_disabled:
            stmt = DepthwiseConv(get_caller_context(), depthwise_conv_api, tik_instance.context.tik_debugger)
            tik_instance.context.curr_scope().add_stmt(stmt)
        return func(tik_instance, depthwise_conv_api)
    return wrapper


def mmad_decorator(func):
    """
    bind this decorator with mmad

    Parameters
    ----------
    func : the decorated function

    Returns
    -------
    function
    """
    @wraps(func)
    def wrapper(tik_instance, mmad_api):
        """
        bind this decorator with mmad
        """

        if not tik_instance.debug_disabled:
            mmad_stmt = MMAD(get_caller_context(), mmad_api, tik_instance.context.tik_debugger)

            tik_instance.context.curr_scope().add_stmt(mmad_stmt)
        return func(tik_instance, mmad_api)

    return wrapper
