#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2019. Huawei Technologies Co., Ltd. All rights reserved.
FILE:     tik_backend.py
DESC:     provide backend api for tik
CREATED:  2019-11-29 11:30:21
MODIFIED: 2020-12-7 19:17:00
"""
from tbe.tvm.tir import _ffi_api
from tbe.tik.tik_lib.tik_expr_convert import type_convert


def tik_access_ptr(params_list, ptr_type="handle", content_lanes=1, offset=0, is_implicit=False):
    """
    tik_access_ptr
    Parameters
    ----------
    params_list: buffer, access_mask, buffer_dtype_bits, extent, cast_dtype_bits, cast_dtype
    -            buffer: tvm.schedule.Buffer, we will call Buffer.access_ptr to get tensor's addr
    -            access_mask: 1(01) means read, 2(10) means write, 3(11) means r/w
    -            buffer_dtype_bits: dtype ori bits
    -            extent: current access_ptr use tensor extent, uint is byte
    -            cast_dtype_bits: dtype cast bits
    -            cast_dtype: cast dtype
    ptr_type: the type of ptr
    content_lanes: the lanes of content
    offset: the offset of valid data. offset = tensor.offset + offset
    is_implicit: bool, optional, whether is implicit dependence

    Returns
    -------
    call node
    """
    # for performance optimization, move offset and extent check to backend.
    # _TikBufferAccessPtr return expr node that create in tvm
    buffer, access_mask, buffer_dtype_bits, extent, cast_dtype_bits, cast_dtype = params_list
    expr_node = _ffi_api.TikBufferAccessPtr(
        buffer, access_mask, buffer_dtype_bits, extent, cast_dtype_bits, cast_dtype,
        ptr_type, content_lanes, type_convert(offset), is_implicit)
    return expr_node


def has_dynamic_tensor(stmt):
    """
    check whether input stmt has dynamic tensor
    """

    return _ffi_api.DynamicTensorCheck(stmt)