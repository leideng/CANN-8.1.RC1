#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2019. Huawei Technologies Co., Ltd. All rights reserved.
FILE:     tik_vector_special_api.py
DESC:     special vector instructions
CREATED:  2020-03-10 18:53:42
MODIFIED: 2020-12-7 19:17:00
"""
from collections import namedtuple
from tbe.tik.tik_lib.tik_source_info import source_info_decorator
from tbe.tik.tik_lib.tik_vector_new_api.tik_vector_special_api_ import TikSpecApiInner
from tbe.tik.tik_lib.tik_vector_new_api.tik_vector_common_ import check_vector_one_src_two_dst_params
from tbe.tik.tik_lib.tik_vector_new_api.tik_vector_check_params_v210 import VectorOpsCheck


class TikSpecApi(TikSpecApiInner):
    """
    Vector, Serialization, Spr Operation Api
    """
    histgram_args = namedtuple('Histgram', ["name", "mask", "dst0", "dst1", "src"])
    vec_dhist = namedtuple("Dhist", "name mask dst0 dst1 dst2 dst3 src")

    def __init__(self):
        super(TikSpecApi, self).__init__()
        self.core_arch = None
        self.core_version = None
        self.check_params_obj = VectorOpsCheck()

    @source_info_decorator()
    def vector_vdhist(self, mask, dst0, dst1, dst2, dst3, src):
        """
        Distribution histogram
        Parameters
        ----------
        mask: predicate register
        dst0: distribution histogram statistics result: 0~63
        dst1: distribution histogram statistics result: 64~127
        dst2: distribution histogram statistics result: 128~191
        dst3: distribution histogram statistics result: 192~255
        src: input data src

        Returns
        -------
        None
        """
        instr_name = "vectorized_dhist"
        vec_dhist_ins = TikSpecApi.vec_dhist(instr_name, mask, dst0, dst1, dst2, dst3, src)
        self.check_params_obj.check_vector_one_src_four_dst_params(vec_dhist_ins)
        # instr emit
        self.vector_vdhist_vchist_gen_code(vec_dhist_ins)

    @source_info_decorator()
    def vector_vdhistv2(self, mask, dst0, dst1, src):
        """
        Distribution histogram
        Parameters
        ----------
        mask: predicate register
        dst0: distribution histogram statistics result: 0~127
        dst1: distribution histogram statistics result: 128~256
        src: input data src

        Returns
        -------
        None
        """
        instr_name = "vectorized_dhistv2"
        check_vector_one_src_two_dst_params(instr_name, dst0, dst1, src)
        # instr emit
        vdhist_api = TikSpecApi.histgram_args(instr_name, mask, dst0, dst1, src)
        self.vector_vdhistv2_vchistv2_gen_code(vdhist_api)

    @source_info_decorator()
    def vector_vchist(self, mask, dst0, dst1, dst2, dst3, src):
        """
        Cumulative histogram
        Parameters
        ----------
        mask: predicate register
        dst0: Cumulative histogram statistics result: 0~63
        dst1: Cumulative histogram statistics result: 64~127
        dst2: Cumulative histogram statistics result: 128~191
        dst3: Cumulative histogram statistics result: 192~255
        src: input data src

        Returns
        -------
        None
        """
        instr_name = "vectorized_chist"
        vec_dhist_ins = TikSpecApi.vec_dhist(instr_name, mask, dst0, dst1, dst2, dst3, src)
        self.check_params_obj.check_vector_one_src_four_dst_params(vec_dhist_ins)
        # instr emit
        self.vector_vdhist_vchist_gen_code(vec_dhist_ins)

    @source_info_decorator()
    def vector_vchistv2(self, mask, dst0, dst1, src):
        """
        Cumulative histogram
        Parameters
        ----------
        mask: predicate register
        dst0: Cumulative histogram statistics result: 0~127
        dst1: Cumulative histogram statistics result: 128~255
        src: input data src

        Returns
        -------
        None
        """
        instr_name = "vectorized_chistv2"
        check_vector_one_src_two_dst_params(instr_name, dst0, dst1, src)
        # instr emit
        vchist_api = TikSpecApi.histgram_args(instr_name, mask, dst0, dst1, src)
        self.vector_vdhistv2_vchistv2_gen_code(vchist_api)
