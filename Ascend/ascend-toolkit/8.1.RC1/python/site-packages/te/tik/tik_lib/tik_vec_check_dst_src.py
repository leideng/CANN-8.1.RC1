#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2019. Huawei Technologies Co., Ltd. All rights reserved.
FILE:     tik_vec_check_dst_src.py
DESC:     provide vector instructions for check dst and src tensor
CREATED:  2021-04-25 18:53:42
MODIFIED: 2021-04-25 19:17:00
"""
from tbe.common.platform import intrinsic_check_support
from tbe.common.platform import scope_ubuf
from tbe.tik.api.tik_tensor import Tensor
from tbe.tik.tik_lib.tik_params import gen_api_check_statement
from tbe.tik.tik_lib.tik_check_util import TikCheckUtil
from tbe.tik.common.common_util import check_address_align
from tbe.tik.common.common_util import vec_template_align
from tbe.tik.tik_lib.tik_params import PRINT_SCOPE_MAP


def check_one_dst_one_src_params(params_list, dst_scope=scope_ubuf,
                                 src_scope=scope_ubuf, src_name="src", print_name=None):
    """
    used to check vector api's params of one dst one src
    Parameters
    ----------
    params_list:name, dst, src
    -           name: inner instr name
    -           dst: dst tensor, should be ubuf
    -           src: src tensor, should be ubuf
    dst_scope: dst tensor scope
    src_scope: src tensor scope
    src_name: tensor src's param name of api
    print_name: api name

    Returns
    -------
    no return
    """
    name, dst, src = params_list
    if print_name is None:
        print_name = name
    TikCheckUtil.check_type_match(dst, Tensor, "dst should be tensor, but input type: %s" % type(dst))
    TikCheckUtil.check_equality(
        dst.scope, dst_scope,
        "dst scope should be %s, but input scope: %s" % (PRINT_SCOPE_MAP[dst_scope], PRINT_SCOPE_MAP[dst.scope]))
    TikCheckUtil.check_type_match(src, Tensor, "%s should be tensor, but input type: %s" % (src_name, type(src)))
    TikCheckUtil.check_equality(
        src.scope, dst_scope,
        "%s scope should be %s, but input scope: %s" % (src_name, PRINT_SCOPE_MAP[src_scope],
                                                        PRINT_SCOPE_MAP[src.scope]))

    # check UB addr 32B align
    align = vec_template_align(src.dtype)
    check_address_align((dst, src), ("dst", src_name), align)

    # check dtype
    TikCheckUtil.check_equality(dst.dtype, src.dtype,
                                "Intrinsic %s's %s's dtype should be equal to dst's dtype" % (print_name, src_name))
    TikCheckUtil.check_equality(intrinsic_check_support("Intrinsic_%s" % name, dst.dtype), True,
                                gen_api_check_statement(dst.dtype, print_name))
