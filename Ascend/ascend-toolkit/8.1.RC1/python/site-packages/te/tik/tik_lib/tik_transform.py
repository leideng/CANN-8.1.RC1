#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2019. Huawei Technologies Co., Ltd. All rights reserved.
FILE:     tik_util.py
DESC:     util file for tik
CREATED:  2022-06-16 21:21:42
"""
from tbe import tvm
from tbe.tvm.tir import transform
from tbe.tvm.tir.transform import _ffi_api


def tik_transform_adapter(input_body, transform_remove):
    """
    for input stmt,  call tik transforms, and return
    """
    if isinstance(input_body, tvm.tir.Stmt):
        new_body = tvm.IRModule.from_expr(tvm.tir.PrimFunc([], input_body))
    elif not isinstance(new_body, tvm.ir.IRModule):
        raise Exception('input stmt type should be IRModule or Stmt')

    new_input = transform_remove()(new_body)
    global_vars = new_input.get_global_vars()
    if len(global_vars) != 1:
        raise Exception("input has more than one global var")
    return new_input[global_vars[0].name_hint].body


def variable_scope_check_pass(stmt):
    """
    check whether variable scope is legal
    """

    return _ffi_api.VariableScopeCheckPass(stmt)


def dynamic_combine_static_pass(stmt, tiling_name, tiling_value):
    """
    dynamic combine static pass
    """

    return _ffi_api.DynamicCombineStaticPass(stmt, tiling_name, tiling_value)


def buildcce_set_scalar_pass(stmt, scalar_map):
    """
    set scalar pass
    """

    return _ffi_api.BuildcceSetScalarPass(stmt, scalar_map)


def dynamic_shape_allocate_memory_preprocess(stmt):
    """
    for/if add new_stmt_scope pass
    """

    return _ffi_api.TikDynamicShapeAllocMemPreprocess(stmt)


def tik_return_instruction_elimination(stmt):
    """
    replace tik_return logic with ifthenelse logic pass
    """

    return _ffi_api.TikReturnInstructionElimination(stmt)


def remove_no_op(input_body):
    """
    RemoveNoOp adapter for tik
    """

    return tik_transform_adapter(input_body, transform.RemoveNoOp)
