#!/usr/bin/env python
# -*- coding:utf-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
"""
soc utils
"""
from typing import List, Tuple, Union


def check_support_soc(supported_soc: Union[str, Tuple[str], List[str]], soc_version: str) -> bool:
    """
    check if soc_version is supported

    Parameters
    ----------
    supported_soc: Union[str, Tuple[str], List[str]]
        the supported soc versions
    soc_version: str
        soc_version which need to check if support

    Returns
    -------
    True or False
    """
    if isinstance(supported_soc, str):
        if supported_soc.lower() == "all":
            return True
        if supported_soc == soc_version:
            return True
        if all(soc in ("Ascend910", "Ascend910A") for soc in (supported_soc, soc_version)):
            return True
    if isinstance(supported_soc, (tuple, list)):
        if soc_version in supported_soc:
            return True
        if "all" in supported_soc:
            return True
        if soc_version in ("Ascend910", "Ascend910A") and \
            any(soc in ("Ascend910", "Ascend910A") for soc in supported_soc):
            return True
    return False