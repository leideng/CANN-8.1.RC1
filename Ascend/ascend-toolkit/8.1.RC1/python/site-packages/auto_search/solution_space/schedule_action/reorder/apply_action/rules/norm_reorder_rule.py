#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
auto search
"""
from auto_search.solution_space import t2c_util


def proc(progress):
    """
    rules for norm op
    :param progress:
    :return:
    """
    op_schedule_info = progress.op_schedule_info

    reduce_axis_set = set()
    reduce_axis_dict = op_schedule_info.reduce_axis_dict
    for key in reduce_axis_dict:
        reduce_axis_set = reduce_axis_set.union(set(reduce_axis_dict[key].get('axis', [])))
    reduce_axis = list(reduce_axis_set)

    leveled_axis_list = progress.op_schedule_info.leveled_axis_for_reorder
    for stage_index, stage_axis_list in enumerate(op_schedule_info.axis_info_list):
        if stage_axis_list is None:
            continue
        if stage_index in reduce_axis_dict:
            continue
        if 'reduce_rfactor' in op_schedule_info.stages_info[stage_index].get('type', []):
            continue
        before_reduce_axis = []
        a_reduce_axis = []

        for each_axis in leveled_axis_list[stage_index][t2c_util.AXIS_LEVEL_O_INDEX]:
            if each_axis.index not in reduce_axis:
                before_reduce_axis.append(each_axis)
            else:
                a_reduce_axis.append(each_axis)

        leveled_axis_list[stage_index][t2c_util.AXIS_LEVEL_O_INDEX] = before_reduce_axis + a_reduce_axis
