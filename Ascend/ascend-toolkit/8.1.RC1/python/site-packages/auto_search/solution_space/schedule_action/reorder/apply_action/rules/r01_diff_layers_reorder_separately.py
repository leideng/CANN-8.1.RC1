#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
auto search
"""
from auto_search.utils import logger
from auto_search.solution_space import t2c_util


def _axis_categorization(axis_info, leveled_axis):
    """
    :param axis_info:
    :param leveled_axis:
    :return:
    """
    axis_name = axis_info.name
    if axis_name.endswith('_oo'):
        leveled_axis[t2c_util.AXIS_LEVEL_OO_INDEX].append(
            axis_info)
    elif axis_name.endswith('_o'):
        leveled_axis[t2c_util.AXIS_LEVEL_O_INDEX].append(
            axis_info)
    elif axis_name.endswith('_ii') or axis_name.endswith('_i'):
        leveled_axis[t2c_util.AXIS_LEVEL_I_II_NORMAL_INDEX].append(
            axis_info)
    elif axis_info.attr == "ub_in_axis":
        leveled_axis[t2c_util.AXIS_LEVEL_I_II_NORMAL_INDEX].append(
            axis_info)
    elif axis_info.attr == "ub_out_axis":
        leveled_axis[t2c_util.AXIS_LEVEL_O_INDEX].append(
            axis_info)


def proc(progress):
    """

    :param progress:
    :return:
    """
    leveled_axis_list = []
    op_schedule_info = progress.op_schedule_info

    for stage_axis_list in op_schedule_info.axis_info_list:
        leveled_axis = [[], [], [], [], [], [], []]
        if stage_axis_list is not None:
            for axis_info in stage_axis_list:
                _axis_categorization(axis_info, leveled_axis)
        leveled_axis_list.append(leveled_axis)

    logger.debug('leveled_axis_list: %s', leveled_axis_list)
    op_schedule_info.leveled_axis_for_reorder = leveled_axis_list
