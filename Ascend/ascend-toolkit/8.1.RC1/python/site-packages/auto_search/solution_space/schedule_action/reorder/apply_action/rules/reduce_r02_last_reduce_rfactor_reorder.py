#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
auto search
"""
from auto_search.utils import logger
from auto_search.solution_space import t2c_util
from auto_search.solution_space.progress import Progress


def proc(progress: Progress):
    """
    last reduce and ub split reduce axis, rfactor stage do reorder
    :param progress:
    :return:
    """
    op_schedule_info = progress.op_schedule_info
    # atomic has dedicated rule
    if op_schedule_info.is_atomic:
        return

    if not (op_schedule_info.last_reduce_and_ub_split_last_reduce_axis ^
            op_schedule_info.last_reduce_and_ub_split_nlast_reduce_axis):
        return

    leveled_axis_list = []
    op_schedule_info.leveled_axis_for_reorder = leveled_axis_list
    for stage_idx, stage_axis_list in enumerate(op_schedule_info.axis_info_list):
        leveled_axis = [[], [], [], [], [], [], []]
        leveled_axis_list.append(leveled_axis)
        # skip the stage without need to reorder
        if stage_axis_list is None:
            continue

        # rfactor stage do reorder
        stage_info = op_schedule_info.stages_info[stage_idx]
        if 'reduce_rfactor' not in stage_info.get('type'):
            continue

        a_axis_info, r_axis_info = [], []

        for axis_info in stage_axis_list:
            if 'reduce_axis' in axis_info.name:
                r_axis_info.append(axis_info)
            else:
                a_axis_info.append(axis_info)
        r_axis_info = r_axis_info + a_axis_info[-1:]
        a_axis_info = a_axis_info[:-1]
        leveled_axis[t2c_util.AXIS_LEVEL_O_INDEX] = a_axis_info
        leveled_axis[t2c_util.AXIS_LEVEL_I_II_NORMAL_INDEX] = r_axis_info

    logger.debug('leveled_axis_for_reorder: %s', op_schedule_info.leveled_axis_for_reorder)
