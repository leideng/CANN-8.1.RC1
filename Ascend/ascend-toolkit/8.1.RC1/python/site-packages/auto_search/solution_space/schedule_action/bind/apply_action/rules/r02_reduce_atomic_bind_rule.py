#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
reduce atomic bind rule
"""
from tbe import tvm

from auto_search.utils import logger
from auto_search.solution_space.t2c_util import MODE_RUNTIME
from auto_search.solution_space.progress import Progress
from auto_search.bank.cheque_generator import get_bind_cheque


def proc(progress: Progress) -> bool:
    """
    reduce atomic bind core
    :param progress:
    :return:
    """
    op_schedule_info = progress.op_schedule_info
    if not op_schedule_info.is_atomic:
        return True

    # only one stage bind core
    bind_stage, bind_stage_index = op_schedule_info.bind_stages[0]

    # if current stage has been proc, skip
    if op_schedule_info.proc_flag_dict.get(bind_stage_index, False):
        return True

    bind_stage_name = op_schedule_info.stages_info[bind_stage_index]['name']
    logger.debug("bind_stage: %s, bind_stage_index: %s, bind_stage_name: %s",
                 bind_stage, bind_stage_index, bind_stage_name)

    op_schedule_info.code_lines.append("block = tvm.thread_axis('blockIdx.x')")

    op_schedule_info.code_lines.append(
        "sch[%s].bind(%s.op.reduce_axis[0], block)" %
        (bind_stage_name, bind_stage_name))

    op_schedule_info.proc_flag_dict[bind_stage_index] = True

    if op_schedule_info.mode == MODE_RUNTIME:
        block = tvm.thread_axis('blockIdx.x')
        bind_stage.bind(bind_stage.op.reduce_axis[0], block)

    cheque = get_bind_cheque(bind_stage_index)
    op_schedule_info.cheque_list.append(cheque)

    return True
