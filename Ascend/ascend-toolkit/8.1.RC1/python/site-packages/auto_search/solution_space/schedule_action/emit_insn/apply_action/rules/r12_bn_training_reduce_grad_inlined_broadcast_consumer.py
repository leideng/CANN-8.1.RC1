#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
unknown broadcast insn rule
"""
from typing import NoReturn

from auto_search.solution_space.tensor_cfg import FeatureTensorCfg
from auto_search.bank.cheque_generator import get_emit_insn_cheque
from auto_search.solution_space.progress import Progress
from auto_search.solution_space.schedule_action.emit_insn.apply_action.rules.comm import \
    get_emit_insn_axis


def proc(progress: Progress) -> NoReturn:
    """
    :param progress:
    :return:
    """
    op_schedule_info = progress.op_schedule_info
    features = op_schedule_info.feature_tensor
    stage_index = op_schedule_info.stage_index
    stage_name = op_schedule_info.stage_name
    stage = op_schedule_info.stage
    axis_info_list = op_schedule_info.axis_info_list

    if op_schedule_info.proc_flag_dict.get(stage_index, False):
        return True

    if stage_index not in op_schedule_info.use_ba_pattern_brc_stage_list:
        return True

    intrinsic_func_name = op_schedule_info.op_intrin_key_index[
        features[stage_index][FeatureTensorCfg.compute_s]].intrin

    axis_num, emit_insn_axis, emit_insn_axis_obj = get_emit_insn_axis(
        stage,
        stage_index,
        axis_info_list,
        op_schedule_info.stages_info[stage_index])

    attrs = {"use_ba_pattern_brc": True}
    stage.emit_insn(emit_insn_axis_obj, intrinsic_func_name, attrs=attrs)

    op_schedule_info.code_lines.append(
        "sch[{}].emit_insn({}, '{}', attrs={})".format(stage_name, emit_insn_axis, intrinsic_func_name, str(attrs)))
    # gen emit_insn cheque
    cheque = get_emit_insn_cheque(stage_index, intrinsic_func_name,
                         (emit_insn_axis, axis_num), extra_info=attrs)
    op_schedule_info.cheque_list.append(cheque)

    op_schedule_info.proc_flag_dict[stage_index] = True
    return True
