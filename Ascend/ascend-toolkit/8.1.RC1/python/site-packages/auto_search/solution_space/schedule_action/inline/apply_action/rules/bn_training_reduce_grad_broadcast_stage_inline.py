#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
bn_training_reduce_grad  inline rule
"""
from auto_search.solution_space.progress import Progress
from auto_search.compute_analysis.broadcast_analysis import can_use_optimize_schedule_for_bn_operators
from auto_search.solution_space.schedule_action.inline.apply_action.rules.\
    comm import get_real_fanin_fanout


def proc(progress: Progress, stage_index: int) -> bool:
    """
    bn_training_reduce_grad  inline rule
    broadcast stage need inline only last axis size is 2 or 3 or 4 block
    :param progress:
    :param stage_index:
    :return:
    """
    op_schedule_info = progress.op_schedule_info
    stage = op_schedule_info.schedule_obj.stages[stage_index]
    if stage.op.tag in ['unknown_broadcast', 'unified_broadcast'] \
            and can_use_optimize_schedule_for_bn_operators(progress):
        _, fanouts = get_real_fanin_fanout(op_schedule_info.schedule_obj, stage_index)
        if len(fanouts) != 1:
            raise RuntimeError('broadcast stage have multi consumers, not support!')
        op_schedule_info.use_ba_pattern_brc_stage_list.append(fanouts[0])
        return True

    return False
