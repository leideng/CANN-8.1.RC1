#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
reused_by rule
"""
from auto_search.solution_space.t2c_util import MODE_RUNTIME
from auto_search.solution_space.schedule_action.inline.apply_action.rules.\
    comm import get_real_fanin_fanout
from auto_search.bank.cheque_generator import get_reuseby_cheque
from auto_search.solution_space.progress import Progress


def proc(progress: Progress) -> bool:
    """
    set_value tensor reuse
    :param progress:
    :return:
    """
    op_schedule_info = progress.op_schedule_info
    sch = op_schedule_info.schedule_obj
    for stage_index, stage_info in enumerate(op_schedule_info.stages_info):
        if 'set_value' in stage_info.get('tag') and \
                stage_info.get('scope') == 'local.UB' and \
                'CacheRead' not in stage_info.get('type', []):
            fanin_list, _ = get_real_fanin_fanout(sch, stage_index)
            reuse_src_index = fanin_list[0]
            reuse_src_stage = sch.stages[reuse_src_index]
            reuse_src_name = op_schedule_info.stages_info[reuse_src_index]["name"]

            reuse_dst_index = stage_index
            reuse_dst_stage = sch.stages[reuse_dst_index]
            reuse_dst_name = op_schedule_info.stages_info[reuse_dst_index]["name"]
            if op_schedule_info.mode == MODE_RUNTIME:
                reuse_src_stage.reused_by(reuse_dst_stage.origin_op.output(0))
                reuse_dst_stage.reused_by(reuse_data=True)
                op_schedule_info.is_reused_by = True

            # Generate the reused_by cheque
            cheque = get_reuseby_cheque(reuse_src_index, reuse_dst_index)
            op_schedule_info.cheque_list.append(cheque)
            cheque = get_reuseby_cheque(reuse_dst_index, reuse_data=True)
            op_schedule_info.cheque_list.append(cheque)

            op_schedule_info.code_lines.append("sch[%s].reused_by(%s)" %
                                         (reuse_src_name, reuse_dst_name))
            op_schedule_info.code_lines.append("sch[%s].reused_by(reuse_data=True)" % reuse_dst_name)

    return True
