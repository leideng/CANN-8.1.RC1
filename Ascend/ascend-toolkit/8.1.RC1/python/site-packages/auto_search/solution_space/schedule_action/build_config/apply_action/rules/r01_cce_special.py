#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
cce special
"""
from auto_search.estimator.estimate import get_all_tensors
from auto_search.estimator.estimate import get_tensors_by_tensors_str
from auto_search.bank.cheque_generator import get_ccespec_cheque
from auto_search.solution_space.progress import Progress


def proc(progress: Progress) -> bool:
    """
    :param progress:
    :return:
    """
    op_schedule_info = progress.op_schedule_info
    sch = op_schedule_info.schedule_obj
    workspace_list_str = op_schedule_info.workspace_list_str
    orign_out_tensor_str = op_schedule_info.orign_out_tensor_str
    real_out_tensor_str = op_schedule_info.real_out_tensor_str
    if workspace_list_str != "[]":
        real_out_tensor_str = "{}, {}".format(real_out_tensor_str.rstrip(']'), workspace_list_str.lstrip('['))

    # gen cheque
    cheque = get_ccespec_cheque(op_schedule_info.cheque_list, op_schedule_info.stages_info, workspace_list_str,
                                orign_out_tensor_str, real_out_tensor_str)
    op_schedule_info.cheque_list.append(cheque)

    # sch.cce_special
    all_tensors, all_tensor_names = get_all_tensors(
        sch, op_schedule_info.special_tensor_dict)

    sch.cce_special = {}
    sch.cce_special["tensor_list"] = get_tensors_by_tensors_str(
        workspace_list_str, all_tensors, all_tensor_names)
    sch.cce_special["orign_out_tensor"] = get_tensors_by_tensors_str(
        orign_out_tensor_str, all_tensors, all_tensor_names)
    sch.cce_special["real_out_tensor"] = get_tensors_by_tensors_str(
        real_out_tensor_str, all_tensors, all_tensor_names)

    # 生成cce_special的codelines
    op_schedule_info.code_lines.append('')
    cce_special_code = '''
    # cce_special code
    sch.cce_special = dict()
    # spec_node_list
    sch.cce_special["tensor_list"] = {workspace_list}
    # the origin out tensor list
    sch.cce_special["orign_out_tensor"] = {orign_out_tensor}
    # the real out tensor list
    sch.cce_special["real_out_tensor"] = {real_out_tensor}
    '''
    code_str = cce_special_code.format(
        workspace_list=op_schedule_info.workspace_list_str,
        orign_out_tensor=op_schedule_info.orign_out_tensor_str,
        real_out_tensor=real_out_tensor_str)
    op_schedule_info.code_lines.append('%s' % code_str)

    return True
