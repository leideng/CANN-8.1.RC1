#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.

rl schedule search, tss
"""
from auto_search.utils import logger
from auto_search.solution_space.op_schedule_info import OpScheduleInfo
from auto_search.solution_space.tensor_cfg import AXIS_CNT


TRANSPOSE_SPLIT_TIMES = 2


def get_nonzero_axes(op_schedule_info: OpScheduleInfo) -> list:
    """
    get nonzero_axes
    :param op_schedule_info:
    :return:
    """
    stage_fea = op_schedule_info.feature_tensor[-1]
    axis_list = stage_fea[:AXIS_CNT]
    nonzero_axes = [dim for dim in axis_list if dim > 0]

    return nonzero_axes


def update_chosen_axes(op_schedule_info: OpScheduleInfo, sorted_chosen_axes: list) -> list:
    """
    update chosen axes
    :param op_schedule_info:
    :param sorted_chosen_axes:
    :return:
    """
    # get nonzero axes
    nonzero_axes = get_nonzero_axes(op_schedule_info)

    split_factor_info = op_schedule_info.stages_info[-1]["split_factor_info"]
    part_split_axis_index = None
    for axis_index in reversed(sorted_chosen_axes):
        if split_factor_info[axis_index] != 1 and \
                split_factor_info[axis_index] != nonzero_axes[axis_index]:
            part_split_axis_index = axis_index
            break

    # 部分切分轴前的切分轴等于shape值时, 则不作为切分轴用于后续的计算
    updated_axes = sorted_chosen_axes
    if part_split_axis_index is not None:
        for axis_index in sorted_chosen_axes:
            if axis_index < part_split_axis_index and \
                    split_factor_info[axis_index] == nonzero_axes[axis_index]:
                updated_axes.remove(axis_index)
    return updated_axes


def calc_trs_split_axis(op_schedule_info: OpScheduleInfo, chosen_axes: list) -> (int, int):
    """
    calculate trs split axis for input and output
    :param op_schedule_info:
    :param chosen_axes:
    :return:
    """
    sorted_chosen_axes = sorted(set(chosen_axes))

    # update chosen_axes
    sorted_chosen_axes = update_chosen_axes(op_schedule_info, sorted_chosen_axes)

    split_axis_for_input = -1
    split_axis_for_output = -1
    if len(sorted_chosen_axes) in range(0, TRANSPOSE_SPLIT_TIMES + 1):
        split_axis_for_input = sorted_chosen_axes[0]
        split_axis_for_output = sorted_chosen_axes[-1]
    else:
        logger.warn('chosen axes num is not correct for tik_to_dsl_op.')

    return split_axis_for_input, split_axis_for_output


def calc_trs_reorder_action(op_schedule_info: OpScheduleInfo) -> (list, list):
    """
    calculate trs reorder action
    :param op_schedule_info:
    :return:
    """
    # for trs reorder optimize, only last stage exist trs_reorder_action
    input_reorder_action = op_schedule_info.dma_reorder_list[0]
    output_reorder_action = op_schedule_info.dma_reorder_list[1]

    # get nonzero axes
    nonzero_axes = get_nonzero_axes(op_schedule_info)

    # get axis info
    input_reorder_action = input_reorder_action[:len(nonzero_axes)]
    output_reorder_action = output_reorder_action[:len(nonzero_axes)]

    return input_reorder_action, output_reorder_action
