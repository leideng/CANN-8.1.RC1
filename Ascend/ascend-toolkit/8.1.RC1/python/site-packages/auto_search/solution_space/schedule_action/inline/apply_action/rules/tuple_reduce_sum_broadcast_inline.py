#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
inline rule
"""
from auto_search.solution_space.progress import Progress
from auto_search.solution_space.schedule_action.inline.apply_action.rules.comm import get_real_fanin_fanout


def proc(progress: Progress, stage_index: int) -> bool:
    """
    nlast broadcast inline braodcast tensor
    :param progress:
    :param stage_index:
    :return:
    """
    op_schedule_info = progress.op_schedule_info
    stage = op_schedule_info.schedule_obj.stages[stage_index]

    if stage.op.tag in ['unified_broadcast'] and '.local.' in stage.op.name:
        input_shape = stage.op.input_tensors[0].shape
        output_shape = stage.op.output(0).shape
        _, fanouts = get_real_fanin_fanout(op_schedule_info.schedule_obj, stage_index)
        if len(fanouts) != 1:
            raise RuntimeError('broadcast stage have multi consumers, not support!')
        op_schedule_info.use_ba_pattern_brc_stage_list.append(fanouts[0])
        if int(input_shape[-1]) == int(output_shape[-1]):
            return True

    return False
