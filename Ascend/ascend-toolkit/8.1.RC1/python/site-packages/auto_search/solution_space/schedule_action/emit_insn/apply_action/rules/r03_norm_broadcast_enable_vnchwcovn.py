#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
norm broadcast vnchwcovn
"""
from auto_search.solution_space.tensor_cfg import FeatureTensorCfg
from auto_search.solution_space.schedule_action.emit_insn.apply_action.rules.comm import \
    get_emit_insn_axis
from auto_search.bank.cheque_generator import get_emit_insn_cheque


def proc(progress):
    """
    :param progress:
    :return:
    """
    op_schedule_info = progress.op_schedule_info
    stage_index = op_schedule_info.stage_index
    stage = op_schedule_info.stage
    stage_name = op_schedule_info.stage_name
    axis_info_list = op_schedule_info.axis_info_list

    if op_schedule_info.proc_flag_dict.get(stage_index, False):
        return True

    op_intrin_key_index = op_schedule_info.op_intrin_key_index
    intrinsic_func_name = op_intrin_key_index[op_schedule_info.feature_tensor[stage_index][
        FeatureTensorCfg.compute_s]].intrin
    if intrinsic_func_name != 'vector_broadcast':
        return True

    axis_num, emit_insn_axis, emit_insn_axis_obj = get_emit_insn_axis(
        stage, stage_index, axis_info_list,
        op_schedule_info.stages_info[stage_index])
    if len(op_schedule_info.compute_graph_info.reduce_axis_index) > 1:
        attrs = {"enable_align_eight_dup": True}
    else:
        attrs = {"enable_vnchwconv": True}
    attrs_str = str(attrs)
    extra_info = attrs
    stage.emit_insn(emit_insn_axis_obj, intrinsic_func_name, attrs=attrs)
    op_schedule_info.code_lines.append(
        "sch[{}].emit_insn({}, '{}', attrs={})".format(stage_name, emit_insn_axis, intrinsic_func_name, attrs_str))

    cheque = get_emit_insn_cheque(stage_index, intrinsic_func_name, (emit_insn_axis, axis_num), extra_info=extra_info)
    op_schedule_info.cheque_list.append(cheque)

    op_schedule_info.proc_flag_dict[stage_index] = True
    return True
