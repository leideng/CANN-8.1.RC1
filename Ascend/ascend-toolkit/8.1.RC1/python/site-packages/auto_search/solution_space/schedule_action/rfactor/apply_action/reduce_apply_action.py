#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
reduce apply action
"""
from auto_search.utils import logger
from auto_search.solution_space.action import apply_action_register
from auto_search.solution_space.action import ScheduleActionType
from auto_search.compute_analysis import ComputePattern
from auto_search.solution_space.schedule_action.rfactor.rfactor_action import RfactorType
from .reduce_r01_ub_split_last_reduce_axis_for_normal import proc as ub_split_last_reduce_axis_for_normal_proc
from .reduce_r02_ub_split_nlast_reduce_axis_for_normal import proc as ub_split_nlast_reduce_axis_for_normal_proc
from .reduce_r03_ub_split_last_reduce_axis_for_atomic import proc as ub_split_last_reduce_axis_for_atomic_proc
from .reduce_r04_ub_split_nlast_reduce_axis_for_atomic import proc as ub_split_nlast_reduce_axis_for_atomic_proc
from .reduce_r05_block_tiling_rfactor_for_atomic import proc as block_tiling_rfactor_for_atomic_proc
from .reduce_r06_block_tiling_rfactor_for_atomic_ra_bind import proc as block_tiling_rfactor_for_atomic_ra_bind_proc


def block_tiling_rfactor_for_atomic(op_schedule_info, progress):
    """
    block tiling rfactor for atomic
    :param op_schedule_info:
    :param progress:
    :return:
    """
    if op_schedule_info.enable_atomic_ra_bind:
        block_tiling_rfactor_for_atomic_ra_bind_proc(progress)
    else:
        block_tiling_rfactor_for_atomic_proc(progress)


@apply_action_register([ComputePattern.TUPLE_REDUCE, ComputePattern.REDUCE], ScheduleActionType.RFACTOR)
def apply(progress):
    """
    :param progress:
    :return:
    """
    op_schedule_info = progress.op_schedule_info
    code_lines = op_schedule_info.code_lines
    code_lines.extend(['\n', '# rfactor code'])

    rfactor_type = progress.todo.rfactor_type
    if rfactor_type == RfactorType.ATOMIC_RFACTOR:
        block_tiling_rfactor_for_atomic(op_schedule_info, progress)
    elif rfactor_type == RfactorType.SPLIT_LAST_REDUCE_AXIS_RFACTOR_FOR_ATOMIC:
        ub_split_last_reduce_axis_for_atomic_proc(progress)
    elif rfactor_type == RfactorType.SPLIT_NLAST_REDUCE_AXIS_RFACTOR_FOR_AROMIC:
        ub_split_nlast_reduce_axis_for_atomic_proc(progress)
    elif rfactor_type == RfactorType.SPLIT_LAST_REDUCE_AXIS_RFACTOR_FOR_NORMAL:
        ub_split_last_reduce_axis_for_normal_proc(progress)
    elif rfactor_type == RfactorType.SPLIT_NLAST_REDUCE_AXIS_RFACTOR_FOR_NORMAL:
        ub_split_nlast_reduce_axis_for_normal_proc(progress)

    logger.debug('apply rfactor done.')
