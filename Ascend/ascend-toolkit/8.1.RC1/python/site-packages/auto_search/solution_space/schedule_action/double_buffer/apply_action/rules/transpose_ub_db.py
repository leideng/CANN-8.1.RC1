#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
transpose db
"""
from tbe import tvm
from tbe.tvm import Stage

from auto_search.utils import logger
from auto_search.solution_space.t2c_util import MODE_RUNTIME
from auto_search.bank.cheque_generator import get_double_buffer_cheque
from auto_search.solution_space.op_schedule_info import OpScheduleInfo


def is_need_db(stages_info: OpScheduleInfo, stage: Stage, stage_index: int) -> bool:
    """
    :param stages_info:
    :param stage:
    :param stage_index:
    :return:
    """
    if not stage.op.name.endswith(".local.UB"):
        return False

    if "CacheRead" in stages_info[stage_index].get('type', []):
        return True

    if "CacheWrite" in stages_info[stage_index].get('type', []):
        if not stage.op.input_tensors:
            return False
        if isinstance(stage.op.input_tensors[0].op, tvm.PlaceholderOp):
            return True

    return False


def proc(op_schedule_info: OpScheduleInfo, stage_index: int) -> bool:
    """
    :param op_schedule_info:
    :param stage_index:
    :return:
    """
    stage = op_schedule_info.schedule_obj.stages[stage_index]
    stage_name = op_schedule_info.stages_info[stage_index]['name']
    stages_info = op_schedule_info.stages_info

    if not is_need_db(stages_info, stage, stage_index):
        return True

    logger.debug('double_buffer stage_name: %s', stage_name)
    op_schedule_info.code_lines.append('sch[%s].double_buffer()' % stage_name)

    cheque = get_double_buffer_cheque(stage_index)
    op_schedule_info.cheque_list.append(cheque)

    op_schedule_info.double_buffer_list.append(stage_name)

    if op_schedule_info.mode == MODE_RUNTIME:
        stage.double_buffer()
    return True
