#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
common director
"""
from auto_search.solution_space.action import director_register
from auto_search.solution_space.action import PrepareActionType
from auto_search.compute_analysis import ComputePattern
from auto_search.solution_space.prepare_action.at_analysis.at_analysis_action import AtAnalysisAction
from auto_search.solution_space.prepare_action.graph_analysis.graph_analysis_action import GraphAnalysisAction
from auto_search.solution_space.schedule_action.cache_write.cache_write_action import CacheWriteAction


@director_register([ComputePattern.ELEMENTWISE, ComputePattern.BROADCAST, ComputePattern.TRANSPOSE],
                   PrepareActionType.FIRST_TODO)
def direct(progress):
    """
    comm direct
    :param progress:
    :return:
    """
    pattern = progress.op_schedule_info.op_pattern
    next_action = AtAnalysisAction(pattern)
    progress.todo = next_action


@director_register([ComputePattern.NORM], PrepareActionType.FIRST_TODO)
def norm_direct(progress):
    """
    norm direct
    :param progress:
    :return:
    """
    pattern = progress.op_schedule_info.op_pattern
    next_action = GraphAnalysisAction(pattern)
    progress.todo = next_action


@director_register([ComputePattern.POOLING], PrepareActionType.FIRST_TODO)
def pooling_direct(progress):
    """
    pooling direct
    :param progress:
    :return:
    """
    pattern = progress.op_schedule_info.op_pattern
    stage_index = len(progress.op_schedule_info.stages_info) - 1
    next_action = CacheWriteAction(pattern, stage_index)
    progress.todo = next_action
