#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
mask rule
"""
from auto_search.utils import util
from auto_search.utils import logger
from auto_search.solution_space.features import SEARCH_N
from auto_search.solution_space.action import mask_rule_register
from auto_search.solution_space.action import SearchActionType
from auto_search.compute_analysis import ComputePattern
from auto_search.solution_space.comm import BLOCK_SIZE_BYTE


@mask_rule_register([ComputePattern.TUPLE_REDUCE, ComputePattern.REDUCE], SearchActionType.SPLIT)
def mask(progress, action_mask):
    """
    if nlast reduce and atomic is open, and ub split last a axis, factor need align, otherwise aic error
    :param progress:
    :param action_mask:
    :return:
    """
    # only for atomic this rule
    if not progress.op_schedule_info.is_atomic:
        return
    # only for nlast reduce this rule
    reduce_compute_graph = progress.op_schedule_info.compute_graph_info
    if reduce_compute_graph.is_last_reduce:
        return
    # ub split last a axis
    ub_split_index = progress.todo.axis_index
    if ub_split_index != reduce_compute_graph.normal_axes_index[-1]:
        return
    # only sampling is over, than judge this rule
    if progress.todo.sub_action_index > 0:
        return
    # get factor
    stage_index = progress.todo.stage_index
    factor_index = progress.todo.axis_index
    factor = progress.action_tensor[stage_index][factor_index]

    stages = progress.op_schedule_info.schedule_obj.stages
    stage_dtype = stages[stage_index].op.output(0).dtype
    elemt_in_block = BLOCK_SIZE_BYTE // util.get_dtype_size(stage_dtype)

    for i in range(SEARCH_N):
        next_factor = factor + pow(SEARCH_N, progress.todo.sub_action_index) * i
        if next_factor % elemt_in_block != 0:
            action_mask[i] = 0

    logger.debug("reduce_r08_atomic_last_a_factor_need_align, action_mask:%s", action_mask)
