#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
common director
"""
from auto_search.solution_space.action import director_register
from auto_search.solution_space.action import SearchActionType
from auto_search.compute_analysis import ComputePattern
from auto_search.solution_space.search_action.choose_axis.choose_axis_action import ChooseAxisAction
from auto_search.solution_space.search_action.split.split_action import SplitAction
from auto_search.solution_space.comm import get_split_sub_tree_depth
from auto_search.solution_space.progress import Progress


@director_register([ComputePattern.BROADCAST, ComputePattern.ELEMENTWISE, ComputePattern.REDUCE,
                    ComputePattern.NORM, ComputePattern.POOLING, ComputePattern.TUPLE_REDUCE],
                   SearchActionType.DOUBLE_BUFFER)
def direct(progress: Progress):
    """
    :param progress:
    :return:
    """
    pattern = progress.op_schedule_info.op_pattern
    stage_index = progress.stage_num - 1
    nonzero_axes = progress.get_nonzero_axes(stage_index)
    if len(nonzero_axes) == 1:
        chosen_axis = 0
        chosen_axis_len = nonzero_axes[chosen_axis]
        sub_tree_depth = get_split_sub_tree_depth(chosen_axis_len)
        # factor initial  1
        progress.action_tensor[stage_index][chosen_axis] = 1
        progress.todo = SplitAction(pattern, stage_index, sub_tree_depth - 1, chosen_axis)
    else:
        progress.todo = ChooseAxisAction(pattern, stage_index)
