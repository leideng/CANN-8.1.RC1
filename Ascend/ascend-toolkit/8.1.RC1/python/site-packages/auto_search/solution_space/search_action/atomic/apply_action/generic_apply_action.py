#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
common apply action
"""
from typing import NoReturn

from auto_search.solution_space.action import apply_action_register
from auto_search.solution_space.action import SearchActionType
from auto_search.compute_analysis import ComputePattern
from auto_search.solution_space.progress import Progress


@apply_action_register([ComputePattern.TUPLE_REDUCE, ComputePattern.REDUCE], SearchActionType.ATOMIC)
def apply(next_progress: Progress, action_value: int) -> NoReturn:
    """
    atomic action value apply
    :param next_progress: Progress
    :param action_value: action value
    :return: no return
    """
    if action_value:
        next_progress.op_schedule_info.is_atomic = True
        # last stage is atomic reduce, add 'reduce_atomic' and 'reduce' type,
        # remove 'reduce_gm' which is set as default
        stage_index = -1
        stage_info = next_progress.op_schedule_info.stages_info[stage_index]
        stage_info.setdefault('type', [])
        if 'reduce_atomic' not in stage_info.get('type', None):
            stage_info['type'].append('reduce_atomic')
        if 'reduce' not in stage_info.get('type', None):
            stage_info['type'].append('reduce')
        if 'reduce_gm' in stage_info.get('type', None):
            stage_info['type'].remove('reduce_gm')
    else:
        next_progress.op_schedule_info.is_atomic = False
