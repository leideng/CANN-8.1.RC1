#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
mask rule: factor_size_less_than_buffer
"""
from auto_search.utils import logger
from auto_search.solution_space.features import SEARCH_N
from auto_search.solution_space.tensor_cfg import AXIS_CNT
from auto_search.solution_space.tensor_cfg import ActionTensorCfg
from auto_search.solution_space.comm import get_limit_ub_size
from auto_search.solution_space.action import mask_rule_register
from auto_search.solution_space.action import SearchActionType
from auto_search.compute_analysis import ComputePattern


@mask_rule_register([ComputePattern.ELEMENTWISE, ComputePattern.BROADCAST], SearchActionType.SPLIT)
def mask(progress, action_mask):
    """
    if calculate ub_count by factor bigger than ub size, this factor need be masked
    :param progress:
    :param action_mask:
    :return:
    """
    ub_right_multi_size = 1
    stage_index = progress.todo.stage_index
    curr_stage_nonzero_axes = progress.get_nonzero_axes(stage_index)
    ub_cut_index = progress.todo.axis_index
    for idx in range(len(curr_stage_nonzero_axes) - 1, ub_cut_index, -1):
        ub_right_multi_size *= curr_stage_nonzero_axes[idx]

    # get factor
    factor_index = \
        ActionTensorCfg.split_factor_s + \
        progress.todo.cache_layer * AXIS_CNT + \
        progress.todo.axis_index
    factor = progress.action_tensor[progress.todo.stage_index][factor_index]
    stage_index = progress.todo.stage_index
    limit_ub_size = get_limit_ub_size(progress.op_schedule_info, stage_index)
    # get axis len
    logger.debug("total_factor_size:%s factor:%s factor_index:%s limit_ub_size:%s",
                 ub_right_multi_size, factor, factor_index, limit_ub_size)
    for i in range(SEARCH_N):
        next_factor \
            = factor + pow(SEARCH_N, progress.todo.sub_action_index) * i
        if ub_right_multi_size * next_factor > limit_ub_size:
            action_mask[i] = 0

    logger.debug("factor_size_smaller_than_buffer action_mask:%s", action_mask)
