#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
mask rule: factor_less_than_axis
"""
from auto_search.utils import logger
from auto_search.solution_space.features import SEARCH_N
from auto_search.solution_space.tensor_cfg import AXIS_CNT
from auto_search.solution_space.tensor_cfg import ActionTensorCfg
from auto_search.solution_space.action import mask_rule_register
from auto_search.solution_space.action import SearchActionType
from auto_search.compute_analysis import ComputePattern


@mask_rule_register([ComputePattern.ELEMENTWISE, ComputePattern.BROADCAST,
                     ComputePattern.NORM, ComputePattern.TRANSPOSE],
                    SearchActionType.SPLIT)
def mask(progress, action_mask):
    """
    factor must less equal axis len
    :param progress:
    :param action_mask:
    :return:
    """
    stage_index = progress.todo.stage_index
    curr_stage_nonzero_axes = progress.get_nonzero_axes(stage_index)

    factor_index = \
        ActionTensorCfg.split_factor_s + \
        progress.todo.cache_layer * AXIS_CNT + \
        progress.todo.axis_index
    factor = progress.action_tensor[stage_index][factor_index]
    # gen axis len
    axis_len = curr_stage_nonzero_axes[progress.todo.axis_index]

    for i in range(SEARCH_N):
        next_factor \
            = factor + pow(SEARCH_N, progress.todo.sub_action_index) * i
        if next_factor > axis_len:
            action_mask[i] = 0
    logger.debug("axis_len:%s action_mask:%s", axis_len, action_mask)
