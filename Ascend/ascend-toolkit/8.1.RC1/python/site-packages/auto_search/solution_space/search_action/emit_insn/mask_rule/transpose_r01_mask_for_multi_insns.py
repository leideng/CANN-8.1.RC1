#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
transpose emit insn mask rule
"""


from numpy import ndarray

from auto_search.utils import logger
from auto_search.compute_analysis import ComputePattern
from auto_search.solution_space.features import SEARCH_N
from auto_search.solution_space.progress import Progress
from auto_search.config.cce_intrin_map import OP_INTRIN_KEY_TAG
from auto_search.solution_space.action import mask_rule_register
from auto_search.solution_space.action import SearchActionType


@mask_rule_register([ComputePattern.TRANSPOSE], SearchActionType.EMIT_INSN)
def proc(progress: Progress, action_mask: ndarray):
    """
    multi insn mask
    :param progress: Progress
    :param action_mask: action mask
    :return: action mask
    """
    stages = progress.op_schedule_info.schedule_obj.stages
    multi_intrins = []
    for stage in stages:
        if stage.op.tag in ["transpose"]:
            multi_intrins = OP_INTRIN_KEY_TAG.get(stage.op.tag).intrin.split('##')
            break

    for idx in range(SEARCH_N - 1, -1, -1):
        if idx >= len(multi_intrins):
            action_mask[idx] = 0
            continue

    if sum(action_mask) == 0:
        action_mask[0] = 1

    logger.debug("transpose_r01_mask_for_multi_insns action_mask:%s", action_mask)
