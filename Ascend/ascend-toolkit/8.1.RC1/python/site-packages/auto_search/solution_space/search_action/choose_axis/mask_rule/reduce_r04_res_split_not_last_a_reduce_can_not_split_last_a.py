#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
mask rule
"""
from auto_search.utils import logger
from auto_search.solution_space.features import SEARCH_N
from auto_search.solution_space.action import mask_rule_register
from auto_search.solution_space.action import SearchActionType
from auto_search.compute_analysis import ComputePattern
from auto_search.solution_space.tensor_cfg import ActionTensorCfg


@mask_rule_register([ComputePattern.TUPLE_REDUCE, ComputePattern.REDUCE], SearchActionType.CHOOSE_AXIS)
def mask(progress, action_mask):
    """
    nlast reduce, if res split not last a axis, reduce can not split last a axis, otherwise aic error
    :param progress:
    :param action_mask:
    :return:
    """
    if progress.op_schedule_info.is_atomic:
        return
    stage_index = progress.todo.stage_index
    # res split need not this rule
    if stage_index == len(progress.op_schedule_info.schedule_obj.stages) - 1:
        return
    res_split_last_axis = _is_res_ub_split_last_axis(progress)
    if res_split_last_axis:
        return
    # reduce
    reduce_compute_graph = progress.op_schedule_info.compute_graph_info
    if reduce_compute_graph.is_last_reduce:
        return

    for idx in range(SEARCH_N - 1, -1, -1):
        if idx == reduce_compute_graph.normal_axes_index[-1]:
            action_mask[idx] = 0
    logger.debug("reduce_r04_res_split_not_last_a_reduce_can_not_split_last_a, action_mask:%s", action_mask)


def _is_res_ub_split_last_axis(progress):
    """
    :param progress:
    :return:
    """
    stages = progress.op_schedule_info.schedule_obj.stages
    res_stage_index = len(stages) - 1
    split_vector = \
        progress.action_tensor[res_stage_index][ActionTensorCfg.split_factor_s:ActionTensorCfg.split_factor_e + 1]
    # find ub split axis
    res_ub_cut_axis = 0
    for i, f in enumerate(split_vector):
        if f > 0:
            res_ub_cut_axis = i
            break

    return res_ub_cut_axis == len(stages[res_stage_index].op.axis) - 1
