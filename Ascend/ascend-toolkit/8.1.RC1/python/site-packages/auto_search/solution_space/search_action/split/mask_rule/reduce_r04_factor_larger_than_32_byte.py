#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
mask rule
"""
from auto_search.utils import util
from auto_search.utils import logger
from auto_search.solution_space.features import SEARCH_N
from auto_search.solution_space.comm import BLOCK_SIZE_BYTE
from auto_search.solution_space.action import mask_rule_register
from auto_search.solution_space.action import SearchActionType
from auto_search.compute_analysis import ComputePattern
from auto_search.compute_analysis import get_stage_ordered_axes_obj


@mask_rule_register([ComputePattern.TUPLE_REDUCE, ComputePattern.REDUCE], SearchActionType.SPLIT)
def mask(progress, action_mask):
    """
    if calculate ub_count by factor less than 32B, should be masked
    :param progress:
    :param action_mask:
    :return:
    """
    ub_split_index = progress.todo.axis_index
    stage_index = progress.todo.stage_index
    ordered_axes_obj = get_stage_ordered_axes_obj(progress.op_schedule_info, stage_index)
    total_size_after_split_axis = ordered_axes_obj.get_total_size_after_split_axis(ub_split_index)

    # get factor
    factor_index = progress.todo.axis_index
    factor = progress.action_tensor[stage_index][factor_index]
    stages = progress.op_schedule_info.schedule_obj.stages
    stage_dtype = stages[stage_index].op.output(0).dtype
    least_block_size = BLOCK_SIZE_BYTE // util.get_dtype_size(stage_dtype)

    curr_stage_nonzero_axes = ordered_axes_obj.get_origin_axis_dim()
    curr_stage_shape_data_size = 1
    for axis_len in curr_stage_nonzero_axes:
        curr_stage_shape_data_size *= axis_len
    # if current shape size is less than 32B, need not action_mask
    if curr_stage_shape_data_size < least_block_size:
        return

    for i in range(SEARCH_N):
        # as long as the upper is bigger than 32B, then it has potential
        base = pow(SEARCH_N, progress.todo.sub_action_index)
        max_factor = factor + base * (i + 1)
        ub_count = max_factor * total_size_after_split_axis
        if ub_count <= least_block_size:
            action_mask[i] = 0

    logger.debug("reduce split r04 factor larger than 32 byte, "
                 "action_mask:%s", action_mask)
    return
