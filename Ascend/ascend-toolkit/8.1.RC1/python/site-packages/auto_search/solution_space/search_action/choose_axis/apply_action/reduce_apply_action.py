#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
"""
common apply action
"""
from typing import NoReturn

from auto_search.solution_space.action import apply_action_register
from auto_search.solution_space.action import SearchActionType
from auto_search.compute_analysis import ComputePattern
from auto_search.compute_analysis import StageOrderedAxes
from auto_search.solution_space.progress import Progress


@apply_action_register([ComputePattern.TUPLE_REDUCE, ComputePattern.REDUCE], SearchActionType.CHOOSE_AXIS)
def apply(next_progress: Progress, action_value: int) -> NoReturn:
    """
    :param next_progress:
    :param action_value:
    :return:
    """
    stage_index = next_progress.todo.stage_index
    stage_info = next_progress.op_schedule_info.stages_info[stage_index]
    stage_index = next_progress.todo.stage_index
    # factor init 1
    next_progress.action_tensor[stage_index][action_value] = 1
    stage_info['choose_axis'] = action_value
    if next_progress.op_schedule_info.is_atomic:
        _set_atomic_split_axis_type(next_progress, action_value)


def _set_atomic_split_axis_type(next_progress: Progress, action_value: int) -> NoReturn:
    """
    :param next_progress:
    :param action_value:
    :return:
    """
    # only atomic need set 'split_axis_type'
    if not next_progress.op_schedule_info.is_atomic:
        return
    stage_index = next_progress.todo.stage_index
    stage_info = next_progress.op_schedule_info.stages_info[stage_index]
    if 'reduce_atomic' not in stage_info.get('type', []):
        return
    if 'stage_ordered_axes_obj' not in stage_info:
        stage_info['stage_ordered_axes_obj'] = \
            StageOrderedAxes(next_progress.op_schedule_info.schedule_obj.stages, stage_index)
    stage_ordered_axes_obj: StageOrderedAxes = stage_info.get('stage_ordered_axes_obj', None)
    reduce_axes = stage_ordered_axes_obj.get_reduce_axes()
    if action_value not in reduce_axes:
        stage_info['split_axis_type'] = 'axis'
        stage_info['type'].remove('reduce')
    else:
        stage_info['split_axis_type'] = 'reduce_axis'
