#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2019. Huawei Technologies Co., Ltd. All rights reserved.
FILE:     tik_basic_data.py
DESC:     new basic class of class Tensor and Scalar, imported by api/debug
CREATED:  2019-08-14 15:45:18
MODIFIED: 2020-12-7 19:17:00
"""


class BasicData:
    """
    content: self.data_type
    """

    def __init__(self, data_type):
        """
        Tensor/Scalar register initialization, recording the data_type of
        BasicData: "Scalar" or "Tensor

        Parameters
        ----------
        data_type: data type of Basic Data

        Returns
        ----------
        None
        """
        self.data_type = data_type

    def is_scalar(self):
        """
        check whether Basic is Scalar

        Returns
        ----------
        bool, whether BasicData is Scalar
        """
        return self.data_type == "Scalar"

    def is_scalar_array(self):
        """
        check whether Basic is ScalarArray

        Returns
        ----------
        bool, whether BasicData is ScalarArray
        """
        return self.data_type == "ScalarArray"

    def is_tensor(self):
        """
        check whether Basic is Tensor

        Returns
        ----------
        bool, whether BasicData is Tensor
        """
        return self.data_type == "Tensor"

    def is_tensor_addr(self):
        """
        check whether Basic is TensorAddrList

        Returns
        ----------
        bool, whether BasicData is TensorAddrList
        """
        return self.data_type == "TensorAddrList"

    def is_predicate(self):
        """
        check whether Basic is Predicate

        Returns
        ----------
        bool, whether BasicData is Predicate
        """
        return self.data_type == "Predicate"

    def is_vector(self):
        """
        check whether Basic is Vector

        Returns
        ----------
        bool, whether BasicData is Vector
        """
        return self.data_type == "Vector"

    def is_wide(self):
        """
        check whether Basic is Vector

        Returns
        ----------
        bool, whether BasicData is Vector
        """
        return self.data_type == "Wide"

    def is_address(self):
        """
        check whether Basic is addr
        Returns
        -------
        bool, whether BasicData is addr
        """
        return self.data_type == "Address"

    def is_alignment(self):
        """
        check whether Basic is Alignment
        Returns
        -------
        bool, whether BasicData is Alignment
        """
        return self.data_type == "Alignment"
