#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2021. Huawei Technologies Co., Ltd. All rights reserved.
FILE:     tik_single_ops_api_.py
DESC:     single operations vector instructions for tik 1.5
CREATED:  2021-06-24 18:53:42
MODIFIED: 2021-06-24 19:17:00
"""

from collections import namedtuple
from tbe import tvm
from tbe.tik.tik_lib.tik_h_vec_api.common_params_check_ import check_single_ops_params
from tbe.tik.tik_lib.tik_h_vec_api.common_util_ import set_tik_version_1_5
from tbe.tik.tik_lib.tik_source_info import source_info_decorator
from tbe.tik.tik_lib.tik_h_vec_api.tik_h_vec_api_base_ import TikHVecApiBase
from tbe.tik.debug.decorators_high_vec import single_ops_debug_for_high_api


class TikSingleOpsApi(TikHVecApiBase):
    """
    Single Operation Api
    """

    single_ops_api_param = namedtuple("SingleOps", "dst src api_name")

    def __init__(self):
        super(TikSingleOpsApi, self).__init__()
        self.core_arch = None
        self.core_version = None
        self.ir_generator = self

    @source_info_decorator()
    def h_abs(self, dst, src):
        """
        vector abs for tik 1.5
        Parameters
        ----------
        dst: Tensor or Tensor slice
        src: Tensor or Tensor slice

        Returns
        -------
        None
        """
        api_name = "h_abs"
        single_ops_api_param_ins = TikSingleOpsApi.single_ops_api_param(dst, src, api_name)
        check_single_ops_params(single_ops_api_param_ins)
        self._single_ops_code_make(single_ops_api_param_ins)

    @source_info_decorator()
    def h_relu(self, dst, src):
        """
        vector relu for tik 1.5
        Parameters
        ----------
        dst: Tensor or Tensor slice
        src: Tensor or Tensor slice

        Returns
        -------
        None
        """
        api_name = "h_relu"
        single_ops_api_param_ins = TikSingleOpsApi.single_ops_api_param(dst, src, api_name)
        check_single_ops_params(single_ops_api_param_ins)
        self._single_ops_code_make(single_ops_api_param_ins)

    @source_info_decorator()
    def h_not(self, dst, src):
        """
        vector not for tik 1.5
        Parameters
        ----------
        dst: Tensor or Tensor slice
        src: Tensor or Tensor slice

        Returns
        -------
        None
        """
        api_name = "h_not"
        single_ops_api_param_ins = TikSingleOpsApi.single_ops_api_param(dst, src, api_name)
        check_single_ops_params(single_ops_api_param_ins)
        self._single_ops_code_make(single_ops_api_param_ins)

    @source_info_decorator()
    def h_exp(self, dst, src):
        """
        vector exp for tik 1.5
        Parameters
        ----------
        dst: Tensor or Tensor slice
        src: Tensor or Tensor slice

        Returns
        -------
        None
        """
        api_name = "h_exp"
        single_ops_api_param_ins = TikSingleOpsApi.single_ops_api_param(dst, src, api_name)
        check_single_ops_params(single_ops_api_param_ins)
        self._single_ops_code_make(single_ops_api_param_ins)

    @source_info_decorator()
    def h_ln(self, dst, src):
        """
        vector ln for tik 1.5
        Parameters
        ----------
        dst: Tensor or Tensor slice
        src: Tensor or Tensor slice

        Returns
        -------
        None
        """
        api_name = "h_ln"
        single_ops_api_param_ins = TikSingleOpsApi.single_ops_api_param(dst, src, api_name)
        check_single_ops_params(single_ops_api_param_ins)
        self._single_ops_code_make(single_ops_api_param_ins)

    @source_info_decorator()
    def h_rec(self, dst, src):
        """
        vector rec for tik 1.5
        Parameters
        ----------
        dst: Tensor or Tensor slice
        src: Tensor or Tensor slice

        Returns
        -------
        None
        """
        api_name = "h_rec"
        single_ops_api_param_ins = TikSingleOpsApi.single_ops_api_param(dst, src, api_name)
        check_single_ops_params(single_ops_api_param_ins)
        self._single_ops_code_make(single_ops_api_param_ins)

    @source_info_decorator()
    def h_rsqrt(self, dst, src):
        """
        vector rsqrt for tik 1.5
        Parameters
        ----------
        dst: Tensor or Tensor slice
        src: Tensor or Tensor slice

        Returns
        -------
        None
        """
        api_name = "h_rsqrt"
        single_ops_api_param_ins = TikSingleOpsApi.single_ops_api_param(dst, src, api_name)
        check_single_ops_params(single_ops_api_param_ins)
        self._single_ops_code_make(single_ops_api_param_ins)

    @source_info_decorator()
    def h_sin(self, dst, src):
        """
        vector sin for tik 1.5
        Parameters
        ----------
        dst: Tensor or Tensor slice
        src: Tensor or Tensor slice

        Returns
        -------
        None
        """
        api_name = "h_sin"
        single_ops_api_param_ins = TikSingleOpsApi.single_ops_api_param(dst, src, api_name)
        check_single_ops_params(single_ops_api_param_ins)
        self._single_ops_code_make(single_ops_api_param_ins)

    @source_info_decorator()
    def h_cos(self, dst, src):
        """
        vector sin for tik 1.5
        Parameters
        ----------
        dst: Tensor or Tensor slice
        src: Tensor or Tensor slice

        Returns
        -------
        None
        """
        api_name = "h_cos"
        single_ops_api_param_ins = TikSingleOpsApi.single_ops_api_param(dst, src, api_name)
        check_single_ops_params(single_ops_api_param_ins)
        self._single_ops_code_make(single_ops_api_param_ins)

    @set_tik_version_1_5()
    @single_ops_debug_for_high_api
    def _single_ops_code_make(self, code_make_params):
        """code maker for single ops instruction"""
        with self.new_scope():
            self.add_source_id()
            self.ir_generator.emit(
                tvm.tir.Evaluate(tvm.call_cce_intrin("int32", code_make_params.api_name,
                                                code_make_params.dst.info_node, code_make_params.src.info_node)))
