#!/usr/bin/env python
# coding: utf-8
# Copyright 2019-2021 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
"""
fusion build config manager
"""

# fusion build config dict
_fusion_build_configs = {}

def set_fusion_buildcfg(op_type, build_config):
    """
    set fusion build config

    Parameters
    ----------
    op_type : string
        op type
    config: dict
        build configs

    Returns
    -------
    decorator : decorator
        decorator to set fusion build config
    """
    global _fusion_build_configs
    if op_type is None:
        raise RuntimeError("set fusion buildcfg failed, op_type is none")
    if op_type in _fusion_build_configs.keys():
        _fusion_build_configs[op_type].update(build_config)
    else:
        _fusion_build_configs[op_type] = build_config


def get_fusion_buildcfg(op_type=None):
    """
    :return:
    """
    if op_type is None:
        return _fusion_build_configs
    return _fusion_build_configs.get(op_type)


def reset_fusion_buildcfg():
    """
    :return:
    """
    global _fusion_build_configs
    _fusion_build_configs = {}