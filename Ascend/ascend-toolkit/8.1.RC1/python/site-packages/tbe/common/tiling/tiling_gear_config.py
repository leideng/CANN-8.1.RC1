#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2021. Huawei Technologies Co., Ltd. All rights reserved.

Description: tiling gear control api
"""

from tbe.tvm import register_func
from tbe.common.context import get_context
from tbe.common.utils.errormgr.error_manager_cube import raise_err_message_cube

GEAR_ALL_OFF = "ALL_OFF"
GEAR_ALL_ON = "ALL_ON"


@register_func
def _get_tiling_gears() -> str:
    context = get_context()
    if context is None:
        raise_err_message_cube("context is None")

    enable_ga_bank_query = context.get_addition("enable_ga_bank_query")
    if enable_ga_bank_query is None:
        raise_err_message_cube("enable_ga_bank_query not in context")

    if not isinstance(enable_ga_bank_query, (str)):
        raise_err_message_cube("enable_ga_bank_query invalid type, expect [str]")

    if enable_ga_bank_query not in ["True", "False"]:
        raise_err_message_cube("enable_ga_bank_query invalid value")

    if enable_ga_bank_query == "False":
        return GEAR_ALL_OFF

    gears = context.get_addition("query_ga_bank_for_key_list")
    if gears is None:
        raise_err_message_cube("query_ga_bank_for_key_list not in context")

    if not isinstance(gears, (str)):
        raise_err_message_cube("query_ga_bank_for_key_list invalid type, expect [str]")

    if gears == "ALL":
        return GEAR_ALL_ON

    return gears


@register_func
def _check_gear_control_enable() -> bool:
    context = get_context()
    if context is None:
        raise_err_message_cube("context is None")

    enable_ga_bank_query = context.get_addition("enable_ga_bank_query")
    if enable_ga_bank_query is None:
        return False

    return True


