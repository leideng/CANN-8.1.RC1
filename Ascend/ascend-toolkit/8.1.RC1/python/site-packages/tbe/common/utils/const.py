#!/usr/bin/env python
# -*- coding:utf-8 -*-
# Copyright 2019-2020 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
"""
utils const
"""
from enum import Enum

# def the mad pattern
GEMM_MODE = 0
GEVM_MODE = 1
CONV_MODE = 2

C0_SIZE = 16
ELEMENTS_VECTOR_OP_FP16 = 128

DEFAULT_MUL_VALUE = 1
DEFAULT_ADD_VALUE = 0

BLOCK_REDUCE = 16
# def the gemm int8/uint8 reduce const
BLOCK_REDUCE_INT8 = 32
# def the gemm/gevm vector const
BLOCK_VECTOR = 1
SPLIT_AXIS_MODE_STR = "split_axis_mode"
IS_CONV1D_SITUATION_STR = "is_conv1d_situation"
SD_KD_MODE_KEY = "sd_kd_mode"
SD_EQ_KD_FLAG = 0
SD_LE_KD_FLAG = 1
SD_GT_KD_FLAG = 2
DILATION_D_GT_ONE_KEY = "dilation_d_gt_one_flag"
BINARY_KEY = "binary_flag"
STRIDE_EXPAND_KEY = "stride_expand_flag"
FUSION_KEY = "fusion_mode"
DTYPE_KEY = "input_dtype"

WEIGHT_SPARSE_4_2 = "weight_sparse_4_2"

# the bytes length of several dtype
BIT_RATIO_DICT = {
    "uint1": 0.125,
    "uint4": 0.5,
    "int4": 0.5,
    "bool": 1,
    "int8": 1,
    "uint8": 1,
    "bfloat16": 2,
    "float16": 2,
    "int16": 2,
    "uint16": 2,
    "float32": 4,
    "int32": 4,
    "uint32": 4,
    "int64": 8,
    "uint64": 8
}

QUANT_DTYPES = ("int4", "int8")


class SplitAxisMode(Enum):
    split_hw = 0
    split_w = 1


class ComputeFlow(Enum):
    tacit = 0 # means no special process for inputs, contrains Nz input and ND input except milan
    on_the_fly = 1 # trans nd2nz by gm2l1
    mix_l2 = 2 # trans nd2nz by mixL2
    weight_nz = 3 # fmap nd, weight nz
