#!/usr/bin/env python
# -*- coding:utf-8 -*-
# Copyright 2022-2023 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================

from enum import IntEnum, auto
from .op_util_conv2d import TilingDataKey as TilingDataKeyConv2D
from .op_util_conv2d import TILINGDATA_KEY_RANGE_MAP as RANGE_MAP_CONV2D
from .op_util_conv2d import TILING_DIM_MAX


class TilingKeyName(object):
    REORDER_N_C1_FLAG = "reorder_n_c1_flag"
    ENABLE_DB = "enable_db"


class TilingKeyOffset(object):
    """
    tiling key bit offset
    """
    OFFSET_REORDER_N_C1_FLAG = 0  # 0 bit
    OFFSET_DB = 1  # 4~1 bit


class TilingCaseValueCollection(object):
    """
    The support value of items in tiling case
    """
    VALUE_REORDER_N_C1_FLAG_LIST = [0, 1]
    VALUE_DB_LIST = [0, 1]


class TilingDataIdx(IntEnum):
    """
    tiling data define index
    """
    TILINGDATA_IDX_START = 0
    IDX_BATCH_N = TILINGDATA_IDX_START
    IDX_C_IN = auto()
    IDX_FMAP_H = auto()
    IDX_FMAP_W = auto()
    IDX_C_OUT = auto()
    IDX_K_H = auto()
    IDX_K_W = auto()
    IDX_HO = auto()
    IDX_WO = auto()
    IDX_DILATION_H = auto()
    IDX_DILATION_W = auto()
    IDX_STRIDE_H = auto()
    IDX_STRIDE_W = auto()
    IDX_PAD_TOP = auto()
    IDX_PAD_BOTTOM = auto()
    IDX_PAD_LEFT = auto()
    IDX_PAD_RIGHT = auto()
    IDX_BLOCK_NPARTS_M = auto()
    IDX_BLOCK_NPARTS_N = auto()
    IDX_BLOCK_NPARTS_C1 = auto()
    IDX_UB_FACTOR_M = auto()
    IDX_UB_FACTOR_N = auto()
    IDX_UB_FACTOR_C1 = auto()
    TILINGDATA_IDX_END = auto()


class TilingDataKey(object):
    """
    tiling data key string.
    """
    DILATION_H = TilingDataKeyConv2D.DILATION_H
    DILATION_W = TilingDataKeyConv2D.DILATION_W
    STRIDE_H = TilingDataKeyConv2D.STRIDE_H
    STRIDE_W = TilingDataKeyConv2D.STRIDE_W
    C_IN = TilingDataKeyConv2D.C_IN
    C_OUT = TilingDataKeyConv2D.C_OUT
    K_H = TilingDataKeyConv2D.K_H
    K_W = TilingDataKeyConv2D.K_W
    PAD_TOP = TilingDataKeyConv2D.PAD_TOP
    PAD_BOTTOM = TilingDataKeyConv2D.PAD_BOTTOM
    PAD_LEFT = TilingDataKeyConv2D.PAD_LEFT
    PAD_RIGHT = TilingDataKeyConv2D.PAD_RIGHT
    BATCH_N = TilingDataKeyConv2D.BATCH_N
    FMAP_H = TilingDataKeyConv2D.FMAP_H
    FMAP_W = TilingDataKeyConv2D.FMAP_W
    HO = TilingDataKeyConv2D.HO
    WO = TilingDataKeyConv2D.WO
    BLOCK_NPARTS_M = "block_nparts_m"
    BLOCK_NPARTS_N = "block_nparts_n"
    BLOCK_NPARTS_C1 = "block_nparts_c1"
    UB_FACTOR_M = "ub_factor_m"
    UB_FACTOR_N = "ub_factor_n"
    UB_FACTOR_C1 = "ub_factor_c1"


TILINGDATA_KEY_RANGE_MAP = {
    TilingDataKey.DILATION_H: RANGE_MAP_CONV2D.get(TilingDataKey.DILATION_H, [1, None]),
    TilingDataKey.DILATION_W: RANGE_MAP_CONV2D.get(TilingDataKey.DILATION_W, [1, None]),
    TilingDataKey.STRIDE_H: RANGE_MAP_CONV2D.get(TilingDataKey.STRIDE_H, [1, None]),
    TilingDataKey.STRIDE_W: RANGE_MAP_CONV2D.get(TilingDataKey.STRIDE_W, [1, None]),
    TilingDataKey.C_IN: RANGE_MAP_CONV2D.get(TilingDataKey.C_IN, [1, None]),
    TilingDataKey.C_OUT: RANGE_MAP_CONV2D.get(TilingDataKey.C_OUT, [1, None]),
    TilingDataKey.K_H: RANGE_MAP_CONV2D.get(TilingDataKey.K_H, [1, None]),
    TilingDataKey.K_W: RANGE_MAP_CONV2D.get(TilingDataKey.K_W, [1, None]),
    TilingDataKey.PAD_TOP: RANGE_MAP_CONV2D.get(TilingDataKey.PAD_TOP, [1, None]),
    TilingDataKey.PAD_BOTTOM: RANGE_MAP_CONV2D.get(TilingDataKey.PAD_BOTTOM, [1, None]),
    TilingDataKey.PAD_LEFT: RANGE_MAP_CONV2D.get(TilingDataKey.PAD_LEFT, [1, None]),
    TilingDataKey.PAD_RIGHT: RANGE_MAP_CONV2D.get(TilingDataKey.PAD_RIGHT, [1, None]),
    TilingDataKey.FMAP_H: RANGE_MAP_CONV2D.get(TilingDataKey.FMAP_H, [1, None]),
    TilingDataKey.FMAP_W: RANGE_MAP_CONV2D.get(TilingDataKey.FMAP_W, [1, None]),
    TilingDataKey.BATCH_N: RANGE_MAP_CONV2D.get(TilingDataKey.BATCH_N, [1, None]),
    TilingDataKey.HO: RANGE_MAP_CONV2D.get(TilingDataKey.HO, [1, None]),
    TilingDataKey.WO: RANGE_MAP_CONV2D.get(TilingDataKey.WO, [1, None]),
    TilingDataKey.BLOCK_NPARTS_M: [1, TILING_DIM_MAX],
    TilingDataKey.BLOCK_NPARTS_N: [1, TILING_DIM_MAX],
    TilingDataKey.BLOCK_NPARTS_C1: [1, TILING_DIM_MAX],
    TilingDataKey.UB_FACTOR_M: [1, None],
    TilingDataKey.UB_FACTOR_N: [1, None],
    TilingDataKey.UB_FACTOR_C1: [1, None]
}


TILING_TEMPLATE = {TilingKeyName.ENABLE_DB: 0, TilingKeyName.REORDER_N_C1_FLAG: 0,
                   TilingDataKey.BLOCK_NPARTS_M: -1,
                   TilingDataKey.BLOCK_NPARTS_N: -1,
                   TilingDataKey.BLOCK_NPARTS_C1: -1,
                   TilingDataKey.UB_FACTOR_M: -1,
                   TilingDataKey.UB_FACTOR_N: -1,
                   TilingDataKey.UB_FACTOR_C1: -1}


TILINGDATA_KEY_MAP = {
    TilingDataIdx.IDX_DILATION_H: TilingDataKey.DILATION_H,
    TilingDataIdx.IDX_DILATION_W: TilingDataKey.DILATION_W,
    TilingDataIdx.IDX_STRIDE_H: TilingDataKey.STRIDE_H,
    TilingDataIdx.IDX_STRIDE_W: TilingDataKey.STRIDE_W,
    TilingDataIdx.IDX_C_IN: TilingDataKey.C_IN,
    TilingDataIdx.IDX_C_OUT: TilingDataKey.C_OUT,
    TilingDataIdx.IDX_K_H: TilingDataKey.K_H,
    TilingDataIdx.IDX_K_W: TilingDataKey.K_W,
    TilingDataIdx.IDX_PAD_TOP: TilingDataKey.PAD_TOP,
    TilingDataIdx.IDX_PAD_BOTTOM: TilingDataKey.PAD_BOTTOM,
    TilingDataIdx.IDX_PAD_LEFT: TilingDataKey.PAD_LEFT,
    TilingDataIdx.IDX_PAD_RIGHT: TilingDataKey.PAD_RIGHT,
    TilingDataIdx.IDX_BATCH_N: TilingDataKey.BATCH_N,
    TilingDataIdx.IDX_FMAP_H: TilingDataKey.FMAP_H,
    TilingDataIdx.IDX_FMAP_W: TilingDataKey.FMAP_W,
    TilingDataIdx.IDX_HO: TilingDataKey.HO,
    TilingDataIdx.IDX_WO: TilingDataKey.WO,
    TilingDataIdx.IDX_BLOCK_NPARTS_M: TilingDataKey.BLOCK_NPARTS_M,
    TilingDataIdx.IDX_BLOCK_NPARTS_N: TilingDataKey.BLOCK_NPARTS_N,
    TilingDataIdx.IDX_BLOCK_NPARTS_C1: TilingDataKey.BLOCK_NPARTS_C1,
    TilingDataIdx.IDX_UB_FACTOR_M: TilingDataKey.UB_FACTOR_M,
    TilingDataIdx.IDX_UB_FACTOR_N: TilingDataKey.UB_FACTOR_N,
    TilingDataIdx.IDX_UB_FACTOR_C1: TilingDataKey.UB_FACTOR_C1,
}
