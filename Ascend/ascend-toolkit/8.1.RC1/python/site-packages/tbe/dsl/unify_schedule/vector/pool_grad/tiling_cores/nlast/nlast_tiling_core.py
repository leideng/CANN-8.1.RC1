#!/usr/bin/env python
# -*- coding:utf-8 -*-
# Copyright 2023-2024 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
"""
pool grad last tiling core
"""

from tbe.dsl.unify_schedule.vector.pool_grad import tiling_core


class NlastTilingCore(tiling_core.TilingCore):

    def __init__(self, schedule):
        super().__init__(schedule)

        self._normal_axes = self._dp.op.axis
        self._ah_axes, self._ak_axes = self._group_ahk_axes(self._normal_axes)
        self._at_axis = self._normal_axes[-1]

        self._reduce_axes = self._dp.op.reduce_axis
        self._rk_axes = self._reduce_axes[:self._window_axis_len]
        self._ro_axes = self._reduce_axes[self._window_axis_len:]

        self._fn_axes = self._fn.op.axis
        self._fn_ah_axes, self._fn_ak_axes = self._group_ahk_axes(self._fn_axes)
        self._fn_at_axis = self._fn_axes[-1]

    def _group_ahk_axes(self, normal_axes):
        ah_axes, ak_axes = [], []
        for i, x, in enumerate(normal_axes[:self._pool_attr.ori_window_axes[-1]+1]):
            if i in self._pool_attr.ori_window_axes:
                ak_axes.append(x)
            else:
                ah_axes.append(x)

        return ah_axes, ak_axes
