#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
Copyright (C) 2022. Huawei Technologies Co., Ltd. All rights reserved.

Define the global manager class
"""
import multiprocessing


class GlobalManager():
    """
    GlobalManager
    """
    def __init__(self) -> None:
        super(GlobalManager, self).__init__()
        self.multi_mgr = multiprocessing.Manager()
        self.tune_result_d = self.multi_mgr.dict()
        self.tune_task_q = self.multi_mgr.Queue()
        self.datacmp_task_q = self.multi_mgr.Queue()
        self.datacmp_res_d = self.multi_mgr.dict()
        self.buildrun_task_q = self.multi_mgr.Queue()
        self.release_tune_q = self.multi_mgr.Queue()
        self.compile_result_d = self.multi_mgr.dict()
        self.compile_task_q = self.multi_mgr.Queue()
        self.parallel_compile_res_d = self.multi_mgr.dict()
        self.release_compile_q = self.multi_mgr.Queue()
        self.tik_tune_space_result_d = self.multi_mgr.dict()
        self.tik_tune_space_task_q = self.multi_mgr.Queue()
        self.release_tik_tune_space_q = self.multi_mgr.Queue()
        self.err_msg_q = self.multi_mgr.Queue()
        self.daemon_event = self.multi_mgr.Event()
        self.buildrun_task_sort_out_q = self.multi_mgr.Queue()
        self.wait_sort_out_finish_q = self.multi_mgr.Queue()
        self.finish_sort_out_q = self.multi_mgr.Queue()
        self.timer_q = self.multi_mgr.Queue()
        self.cur_tune_task_d = self.multi_mgr.dict()
        self.job_tune_progress_q = self.multi_mgr.Queue()
        self.tune_progress_q = self.multi_mgr.Queue()
        self.tune_report_info_q = self.multi_mgr.Queue()
        self.rl_task_q = self.multi_mgr.Queue()
        self.rl_task_d = self.multi_mgr.dict()
        self.rl_event = self.multi_mgr.Event()
        self.as_task_q = self.multi_mgr.Queue()
        self.as_task_d = self.multi_mgr.dict()
        self.as_event = self.multi_mgr.Event()
        self.cb_key_task_clean_q = self.multi_mgr.Queue()
        self.cb_key_clean_res_d = self.multi_mgr.dict()
        self.task_finished_list = self.multi_mgr.list()
        self.ga_tuned_shapes = self.multi_mgr.list()
        self.query_lock = self.multi_mgr.Lock()
        self.mgr_dict = {
            "timer_q": self.timer_q,
            "tune_result_d": self.tune_result_d,
            "tune_task_d": self.tune_task_q,
            "datacmp_task_q": self.datacmp_task_q,
            "datacmp_res_d": self.datacmp_res_d,
            "release_tune_q": self.release_tune_q,
            "compile_result_d": self.compile_result_d,
            "compile_task_d": self.compile_task_q,
            "parallel_compile_res_d": self.parallel_compile_res_d,
            "release_compile_q": self.release_compile_q,
            "tik_tune_space_result_d": self.tik_tune_space_result_d,
            "tik_tune_space_task_q": self.tik_tune_space_task_q,
            "release_tik_tune_space_q": self.release_tik_tune_space_q,
            "err_msg_q": self.err_msg_q,
            "tune_progress_q": self.tune_progress_q,
            "tune_report_info_q": self.tune_report_info_q,
            "cb_key_task_clean_q": self.cb_key_task_clean_q,
            "cb_key_clean_res_d": self.cb_key_clean_res_d,
            "ga_tuned_shapes": self.ga_tuned_shapes,
            "query_lock": self.query_lock
        }
