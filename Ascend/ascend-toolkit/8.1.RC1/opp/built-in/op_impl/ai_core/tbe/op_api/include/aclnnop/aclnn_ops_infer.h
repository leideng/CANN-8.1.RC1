/**
#!usr/bin/env python
# coding: utf-8
# Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
*/

#ifndef OP_API_INC_ACLNN_OPS_INFER_H_
#define OP_API_INC_ACLNN_OPS_INFER_H_

#include "acl_rfft1d.h"
#include "acl_stft.h"
#include "aclnn_adaptive_avg_pool2d.h"
#include "aclnn_adaptive_avg_pool3d.h"
#include "aclnn_adaptive_max_pool2d.h"
#include "aclnn_adaptive_max_pool3d.h"
#include "aclnn_add_layer_norm.h"
#include "aclnn_add_lora.h"
#include "aclnn_add_rms_norm.h"
#include "aclnn_add_rms_norm_dynamic_quant.h"
#include "aclnn_add_rms_norm_quant.h"
#include "aclnn_addbmm.h"
#include "aclnn_addmm.h"
#include "aclnn_addmv.h"
#include "aclnn_advance_step.h"
#include "aclnn_affine_grid.h"
#include "aclnn_all_gather_matmul.h"
#include "aclnn_all_to_all_all_gather_batch_matmul.h"
#include "aclnn_apply_rotary_pos_emb.h"
#include "aclnn_arange.h"
#include "aclnn_argmax.h"
#include "aclnn_argmin.h"
#include "aclnn_argsort.h"
#include "aclnn_ascend_quant.h"
#include "aclnn_ascend_quant_v3.h"
#include "aclnn_avgpool2d.h"
#include "aclnn_avgpool3d.h"
#include "aclnn_background_replace.h"
#include "aclnn_baddbmm.h"
#include "aclnn_batch_matmul.h"
#include "aclnn_batch_matmul_reduce_scatter_all_to_all.h"
#include "aclnn_batch_norm.h"
#include "aclnn_batchmatmul_quant.h"
#include "aclnn_bidirection_lstm.h"
#include "aclnn_bidirection_lstmv2.h"
#include "aclnn_blend_images_custom.h"
#include "aclnn_cat.h"
#include "aclnn_celu.h"
#include "aclnn_channel_shuffle.h"
#include "aclnn_circular_pad2d.h"
#include "aclnn_circular_pad3d.h"
#include "aclnn_constant_pad_nd.h"
#include "aclnn_convert_weight_to_int4_pack.h"
#include "aclnn_convolution.h"
#include "aclnn_copy.h"
#include "aclnn_cummax.h"
#include "aclnn_cummin.h"
#include "aclnn_deep_norm.h"
#include "aclnn_dequant_bias.h"
#include "aclnn_dequant_rope_quant_kvcache.h"
#include "aclnn_dequant_swiglu_quant.h"
#include "aclnn_dynamic_quant.h"
#include "aclnn_dynamic_quant_v2.h"
#include "aclnn_einsum.h"
#include "aclnn_elu.h"
#include "aclnn_embedding.h"
#include "aclnn_embedding_bag.h"
#include "aclnn_embedding_renorm.h"
#include "aclnn_erf.h"
#include "aclnn_erfc.h"
#include "aclnn_erfinv.h"
#include "aclnn_expand.h"
#include "aclnn_fatrelu_mul.h"
#include "aclnn_ffn.h"
#include "aclnn_ffn_v2.h"
#include "aclnn_ffn_v3.h"
#include "aclnn_fill_diagonal.h"
#include "aclnn_fill_scalar.h"
#include "aclnn_fill_tensor.h"
#include "aclnn_flash_attention_score.h"
#include "aclnn_flat_quant.h"
#include "aclnn_flatten.h"
#include "aclnn_flip.h"
#include "aclnn_fused_infer_attention_score.h"
#include "aclnn_fused_infer_attention_score_v2.h"
#include "aclnn_fused_infer_attention_score_v3.h"
#include "aclnn_gather.h"
#include "aclnn_gather_nd.h"
#include "aclnn_gather_v2.h"
#include "aclnn_geglu.h"
#include "aclnn_gelu.h"
#include "aclnn_gelu_mul.h"
#include "aclnn_gelu_v2.h"
#include "aclnn_gemma_rms_norm.h"
#include "aclnn_global_average_pool.h"
#include "aclnn_global_max_pool.h"
#include "aclnn_glu.h"
#include "aclnn_grid_sampler2d.h"
#include "aclnn_grid_sampler3d.h"
#include "aclnn_group_norm.h"
#include "aclnn_group_norm_silu.h"
#include "aclnn_group_quant.h"
#include "aclnn_grouped_mat_mul_all_reduce.h"
#include "aclnn_grouped_matmul.h"
#include "aclnn_grouped_matmul_finalize_routing_weight_nz.h"
#include "aclnn_grouped_matmul_v2.h"
#include "aclnn_grouped_matmul_v3.h"
#include "aclnn_grouped_matmul_v4.h"
#include "aclnn_hardshrink.h"
#include "aclnn_hardsigmoid.h"
#include "aclnn_hardswish.h"
#include "aclnn_hardtanh.h"
#include "aclnn_histc.h"
#include "aclnn_im2col.h"
#include "aclnn_incre_flash_attention.h"
#include "aclnn_incre_flash_attention_v2.h"
#include "aclnn_incre_flash_attention_v3.h"
#include "aclnn_incre_flash_attention_v4.h"
#include "aclnn_index.h"
#include "aclnn_index_add.h"
#include "aclnn_index_copy.h"
#include "aclnn_index_fill_tensor.h"
#include "aclnn_index_put_impl.h"
#include "aclnn_index_select.h"
#include "aclnn_inplace_matmul_all_reduce_add_rms_norm.h"
#include "aclnn_inplace_quant_matmul_all_reduce_add_rms_norm.h"
#include "aclnn_inplace_weight_quant_matmul_all_reduce_add_rms_norm.h"
#include "aclnn_instance_norm.h"
#include "aclnn_layer_norm.h"
#include "aclnn_leaky_relu.h"
#include "aclnn_linalg_vector_norm.h"
#include "aclnn_linspace.h"
#include "aclnn_logit.h"
#include "aclnn_logit_grad.h"
#include "aclnn_logsigmoid.h"
#include "aclnn_logsoftmax.h"
#include "aclnn_masked_fill_scalar.h"
#include "aclnn_masked_fill_tensor.h"
#include "aclnn_masked_scatter.h"
#include "aclnn_masked_select.h"
#include "aclnn_masked_softmax_with_rel_pos_bias.h"
#include "aclnn_matmul.h"
#include "aclnn_matmul_all_reduce.h"
#include "aclnn_matmul_all_reduce_add_rms_norm.h"
#include "aclnn_matmul_all_reduce_v2.h"
#include "aclnn_matmul_compress_dequant.h"
#include "aclnn_matmul_reduce_scatter.h"
#include "aclnn_max_pool.h"
#include "aclnn_max_pool2d_with_indices.h"
#include "aclnn_max_pool3d_with_argmax.h"
#include "aclnn_max_unpool2d.h"
#include "aclnn_max_unpool3d.h"
#include "aclnn_mish.h"
#include "aclnn_mla_prolog.h"
#include "aclnn_mm.h"
#include "aclnn_moe_compute_expert_tokens.h"
#include "aclnn_moe_distribute_combine.h"
#include "aclnn_moe_distribute_dispatch.h"
#include "aclnn_moe_finalize_routing.h"
#include "aclnn_moe_finalize_routing_v2.h"
#include "aclnn_moe_gating_top_k_softmax.h"
#include "aclnn_moe_gating_top_k_softmax_v2.h"
#include "aclnn_moe_init_routing.h"
#include "aclnn_moe_init_routing_quant.h"
#include "aclnn_moe_init_routing_quant_v2.h"
#include "aclnn_moe_init_routing_v2.h"
#include "aclnn_moe_init_routing_v2_grad.h"
#include "aclnn_moe_token_permute_grad.h"
#include "aclnn_moe_token_unpermute.h"
#include "aclnn_mrgba_custom.h"
#include "aclnn_multi_scale_deformable_attn_function.h"
#include "aclnn_mv.h"
#include "aclnn_non_max_suppression.h"
#include "aclnn_norm.h"
#include "aclnn_permute.h"
#include "aclnn_prelu.h"
#include "aclnn_prompt_flash_attention.h"
#include "aclnn_prompt_flash_attention_v2.h"
#include "aclnn_prompt_flash_attention_v3.h"
#include "aclnn_put.h"
#include "aclnn_quant_grouped_matmul_dequant.h"
#include "aclnn_quant_matmul.h"
#include "aclnn_quant_matmul_all_reduce.h"
#include "aclnn_quant_matmul_all_reduce_add_rms_norm.h"
#include "aclnn_quant_matmul_all_reduce_v2.h"
#include "aclnn_quant_matmul_all_reduce_v3.h"
#include "aclnn_quant_matmul_dequant.h"
#include "aclnn_quant_matmul_v3.h"
#include "aclnn_quant_matmul_v4.h"
#include "aclnn_quant_matmul_weight_nz.h"
#include "aclnn_quant_scatter.h"
#include "aclnn_quantize.h"
#include "aclnn_reflection_pad1d.h"
#include "aclnn_reflection_pad2d.h"
#include "aclnn_reflection_pad3d.h"
#include "aclnn_relu.h"
#include "aclnn_renorm.h"
#include "aclnn_repeat.h"
#include "aclnn_replication_pad1d.h"
#include "aclnn_replication_pad2d.h"
#include "aclnn_replication_pad3d.h"
#include "aclnn_resize.h"
#include "aclnn_rms_norm.h"
#include "aclnn_roi_align.h"
#include "aclnn_roi_align_v2.h"
#include "aclnn_rope_with_sin_cos_cache.h"
#include "aclnn_rrelu_with_noise.h"
#include "aclnn_scaled_masked_softmax.h"
#include "aclnn_scatter.h"
#include "aclnn_scatter_add.h"
#include "aclnn_scatter_update.h"
#include "aclnn_searchsorted.h"
#include "aclnn_selu.h"
#include "aclnn_shrink.h"
#include "aclnn_sigmoid.h"
#include "aclnn_silu.h"
#include "aclnn_sinkhorn.h"
#include "aclnn_slice.h"
#include "aclnn_slice_v2.h"
#include "aclnn_softmax.h"
#include "aclnn_softplus.h"
#include "aclnn_softshrink.h"
#include "aclnn_sort.h"
#include "aclnn_split_tensor.h"
#include "aclnn_split_with_size.h"
#include "aclnn_stack.h"
#include "aclnn_strided_slice_assign_v2.h"
#include "aclnn_swi_glu.h"
#include "aclnn_swi_glu_quant.h"
#include "aclnn_swin_attention_score_quant.h"
#include "aclnn_swin_transformer_ln_qkv_quant.h"
#include "aclnn_trans_matmul_weight.h"
#include "aclnn_trans_quant_param.h"
#include "aclnn_trans_quant_param_v2.h"
#include "aclnn_upsample_bicubic2d_aa.h"
#include "aclnn_upsample_bicubic2d_aa_grad.h"
#include "aclnn_upsample_bicubic_2d.h"
#include "aclnn_upsample_bicubic_2d_backward.h"
#include "aclnn_upsample_bilinear_2d.h"
#include "aclnn_upsample_linear_1d.h"
#include "aclnn_upsample_nearest_1d.h"
#include "aclnn_upsample_nearest_1d_v2.h"
#include "aclnn_upsample_nearest_2d.h"
#include "aclnn_upsample_nearest_2d_v2.h"
#include "aclnn_upsample_nearest_3d.h"
#include "aclnn_upsample_nearest_exact1d.h"
#include "aclnn_upsample_nearest_exact1d_backward.h"
#include "aclnn_upsample_nearest_exact2d.h"
#include "aclnn_upsample_nearest_exact2d_backward.h"
#include "aclnn_upsample_nearest_exact3d.h"
#include "aclnn_upsample_nearest_exact3d_backward.h"
#include "aclnn_upsample_trilinear_3d.h"
#include "aclnn_upsample_trilinear_3d_backward.h"
#include "aclnn_weight_quant_batch_matmul.h"
#include "aclnn_weight_quant_batch_matmul_v2.h"
#include "aclnn_weight_quant_batch_matmul_v3.h"
#include "aclnn_weight_quant_matmul_all_reduce.h"
#include "aclnn_weight_quant_matmul_all_reduce_add_rms_norm.h"

#endif
