/**
#!usr/bin/env python
# coding: utf-8
# Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
*/

#ifndef OP_API_INC_ACLNN_OPS_TRAIN_H_
#define OP_API_INC_ACLNN_OPS_TRAIN_H_

#include "aclnn_adaptive_avg_pool2d_backward.h"
#include "aclnn_adaptive_avg_pool3d_backward.h"
#include "aclnn_adaptive_max_pool3d_backward.h"
#include "aclnn_add_layer_norm_grad.h"
#include "aclnn_apply_adam_w_v2.h"
#include "aclnn_apply_fused_ema_adam.h"
#include "aclnn_ascend_anti_quant.h"
#include "aclnn_avgpool2d_backward.h"
#include "aclnn_avgpool3d_backward.h"
#include "aclnn_batch_norm_backward.h"
#include "aclnn_batch_norm_backward_reduce.h"
#include "aclnn_batch_norm_elemt.h"
#include "aclnn_batch_norm_elemt_backward.h"
#include "aclnn_batch_norm_gather_stats_with_counts.h"
#include "aclnn_batch_norm_stats.h"
#include "aclnn_binary_cross_entropy.h"
#include "aclnn_binary_cross_entropy_backward.h"
#include "aclnn_binary_cross_entropy_with_logits.h"
#include "aclnn_binary_cross_entropy_with_logits_backward.h"
#include "aclnn_binary_cross_entropy_with_logits_target_backward.h"
#include "aclnn_chamfer_distance_backward.h"
#include "aclnn_circular_pad2d_backward.h"
#include "aclnn_circular_pad3d_backward.h"
#include "aclnn_convolution_backward.h"
#include "aclnn_cross_entropy_loss.h"
#include "aclnn_cross_entropy_loss_grad.h"
#include "aclnn_ctc_loss.h"
#include "aclnn_ctc_loss_backward.h"
#include "aclnn_cumprod.h"
#include "aclnn_deep_norm_grad.h"
#include "aclnn_elu_backward.h"
#include "aclnn_embedding_dense_backward.h"
#include "aclnn_fake_quant_per_channel_affine_cachemask.h"
#include "aclnn_fake_quant_per_tensor_affine_cachemask.h"
#include "aclnn_flash_attention_score_grad.h"
#include "aclnn_geglu_backward.h"
#include "aclnn_gelu_backward.h"
#include "aclnn_gelu_backward_v2.h"
#include "aclnn_glu_backward.h"
#include "aclnn_grid_sampler2d_backward.h"
#include "aclnn_grid_sampler3d_backward.h"
#include "aclnn_group_norm_backward.h"
#include "aclnn_group_norm_swish.h"
#include "aclnn_group_norm_swish_grad.h"
#include "aclnn_grouped_bias_add_grad.h"
#include "aclnn_grouped_matmul_add.h"
#include "aclnn_hardshrink_backward.h"
#include "aclnn_hardsigmoid_backward.h"
#include "aclnn_hardswish_backward.h"
#include "aclnn_hardtanh_backward.h"
#include "aclnn_im2col_backward.h"
#include "aclnn_iou.h"
#include "aclnn_kl_div.h"
#include "aclnn_kl_div_backward.h"
#include "aclnn_l1_loss.h"
#include "aclnn_l1_loss_backward.h"
#include "aclnn_layer_norm_backward.h"
#include "aclnn_leaky_relu_backward.h"
#include "aclnn_logsigmoid_backward.h"
#include "aclnn_logsoftmax_backward.h"
#include "aclnn_max_pool2d_with_indices_backward.h"
#include "aclnn_max_pool3d_with_argmax_backward.h"
#include "aclnn_max_unpool2d_backward.h"
#include "aclnn_max_unpool3d_backward.h"
#include "aclnn_mish_backward.h"
#include "aclnn_moe_finalize_routing_v2_grad.h"
#include "aclnn_moe_token_permute.h"
#include "aclnn_moe_token_unpermute_grad.h"
#include "aclnn_mse_loss.h"
#include "aclnn_mse_loss_backward.h"
#include "aclnn_mse_loss_out.h"
#include "aclnn_multi_scale_deformable_attention_grad.h"
#include "aclnn_multilabel_margin_loss.h"
#include "aclnn_nll_loss.h"
#include "aclnn_nll_loss2d.h"
#include "aclnn_nll_loss2d_backward.h"
#include "aclnn_nll_loss_backward.h"
#include "aclnn_pad2d_backward.h"
#include "aclnn_precision_compare.h"
#include "aclnn_prelu_backward.h"
#include "aclnn_reflection_pad1d_backward.h"
#include "aclnn_reflection_pad3d_backward.h"
#include "aclnn_replication_pad1d_backward.h"
#include "aclnn_replication_pad3d_backward.h"
#include "aclnn_ring_attention_update.h"
#include "aclnn_rms_norm_grad.h"
#include "aclnn_roi_align_v2_backward.h"
#include "aclnn_scaled_masked_softmax_backward.h"
#include "aclnn_scatter_nd.h"
#include "aclnn_scatter_nd_update.h"
#include "aclnn_selu_backward.h"
#include "aclnn_sigmoid_backward.h"
#include "aclnn_silent_check.h"
#include "aclnn_silent_check_v2.h"
#include "aclnn_silu_backward.h"
#include "aclnn_smooth_l1_loss.h"
#include "aclnn_smooth_l1_loss_backward.h"
#include "aclnn_soft_margin_loss.h"
#include "aclnn_soft_margin_loss_backward.h"
#include "aclnn_softmax_backward.h"
#include "aclnn_softplus_backward.h"
#include "aclnn_softshrink_backward.h"
#include "aclnn_swi_glu_grad.h"
#include "aclnn_swish.h"
#include "aclnn_swish_backward.h"
#include "aclnn_tanh_backward.h"
#include "aclnn_threshold_backward.h"
#include "aclnn_upsample_bilinear_2d_backward.h"
#include "aclnn_upsample_bilinear_2d_backward_v2.h"
#include "aclnn_upsample_linear_1d_backward.h"
#include "aclnn_upsample_nearest_1d_backward.h"
#include "aclnn_upsample_nearest_2d_backward.h"
#include "aclnn_upsample_nearest_3d_backward.h"

#endif
