/**
#!usr/bin/env python
# coding: utf-8
# Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
*/

#ifndef OP_API_INC_ACLNN_MATH_H_
#define OP_API_INC_ACLNN_MATH_H_

#include "aclnn_abs.h"
#include "aclnn_acos.h"
#include "aclnn_acosh.h"
#include "aclnn_add.h"
#include "aclnn_add_relu.h"
#include "aclnn_addcdiv.h"
#include "aclnn_addcmul.h"
#include "aclnn_addr.h"
#include "aclnn_all.h"
#include "aclnn_amax.h"
#include "aclnn_amin.h"
#include "aclnn_aminmax.h"
#include "aclnn_aminmax_all.h"
#include "aclnn_aminmax_dim.h"
#include "aclnn_any.h"
#include "aclnn_asin.h"
#include "aclnn_asinh.h"
#include "aclnn_atan.h"
#include "aclnn_atan2.h"
#include "aclnn_atanh.h"
#include "aclnn_bincount.h"
#include "aclnn_bitwise_and_scalar.h"
#include "aclnn_bitwise_and_tensor.h"
#include "aclnn_bitwise_not.h"
#include "aclnn_bitwise_or_scalar.h"
#include "aclnn_bitwise_or_tensor.h"
#include "aclnn_bitwise_xor_scalar.h"
#include "aclnn_bitwise_xor_tensor.h"
#include "aclnn_cast.h"
#include "aclnn_ceil.h"
#include "aclnn_clamp.h"
#include "aclnn_complex.h"
#include "aclnn_cos.h"
#include "aclnn_cosh.h"
#include "aclnn_cumsum.h"
#include "aclnn_diag.h"
#include "aclnn_diag_flat.h"
#include "aclnn_digamma.h"
#include "aclnn_div.h"
#include "aclnn_dot.h"
#include "aclnn_eq_scalar.h"
#include "aclnn_eq_tensor.h"
#include "aclnn_equal.h"
#include "aclnn_exp.h"
#include "aclnn_exp2.h"
#include "aclnn_expm1.h"
#include "aclnn_eye.h"
#include "aclnn_floor.h"
#include "aclnn_floor_divide.h"
#include "aclnn_fmod_scalar.h"
#include "aclnn_fmod_tensor.h"
#include "aclnn_foreach_abs.h"
#include "aclnn_foreach_acos.h"
#include "aclnn_foreach_add_list.h"
#include "aclnn_foreach_add_list_v2.h"
#include "aclnn_foreach_add_scalar.h"
#include "aclnn_foreach_add_scalar_list.h"
#include "aclnn_foreach_add_scalar_v2.h"
#include "aclnn_foreach_addcdiv_list.h"
#include "aclnn_foreach_addcdiv_scalar.h"
#include "aclnn_foreach_addcdiv_scalar_list.h"
#include "aclnn_foreach_addcdiv_scalar_v2.h"
#include "aclnn_foreach_addcmul_list.h"
#include "aclnn_foreach_addcmul_scalar.h"
#include "aclnn_foreach_addcmul_scalar_list.h"
#include "aclnn_foreach_addcmul_scalar_v2.h"
#include "aclnn_foreach_asin.h"
#include "aclnn_foreach_atan.h"
#include "aclnn_foreach_copy.h"
#include "aclnn_foreach_cos.h"
#include "aclnn_foreach_cosh.h"
#include "aclnn_foreach_div_list.h"
#include "aclnn_foreach_div_scalar.h"
#include "aclnn_foreach_div_scalar_list.h"
#include "aclnn_foreach_div_scalar_v2.h"
#include "aclnn_foreach_erf.h"
#include "aclnn_foreach_erfc.h"
#include "aclnn_foreach_exp.h"
#include "aclnn_foreach_expm1.h"
#include "aclnn_foreach_lerp_list.h"
#include "aclnn_foreach_lerp_scalar.h"
#include "aclnn_foreach_log.h"
#include "aclnn_foreach_log10.h"
#include "aclnn_foreach_log1p.h"
#include "aclnn_foreach_log2.h"
#include "aclnn_foreach_maximum_list.h"
#include "aclnn_foreach_maximum_scalar.h"
#include "aclnn_foreach_maximum_scalar_list.h"
#include "aclnn_foreach_maximum_scalar_v2.h"
#include "aclnn_foreach_minimum_list.h"
#include "aclnn_foreach_minimum_scalar.h"
#include "aclnn_foreach_minimum_scalar_list.h"
#include "aclnn_foreach_minimum_scalar_v2.h"
#include "aclnn_foreach_mul_list.h"
#include "aclnn_foreach_mul_scalar.h"
#include "aclnn_foreach_mul_scalar_list.h"
#include "aclnn_foreach_mul_scalar_v2.h"
#include "aclnn_foreach_neg.h"
#include "aclnn_foreach_norm.h"
#include "aclnn_foreach_pow_list.h"
#include "aclnn_foreach_pow_scalar.h"
#include "aclnn_foreach_pow_scalar_and_tensor.h"
#include "aclnn_foreach_pow_scalar_list.h"
#include "aclnn_foreach_pow_scalar_v2.h"
#include "aclnn_foreach_reciprocal.h"
#include "aclnn_foreach_round_off_number.h"
#include "aclnn_foreach_round_off_number_v2.h"
#include "aclnn_foreach_sigmoid.h"
#include "aclnn_foreach_sign.h"
#include "aclnn_foreach_sin.h"
#include "aclnn_foreach_sinh.h"
#include "aclnn_foreach_sqrt.h"
#include "aclnn_foreach_sub_list.h"
#include "aclnn_foreach_sub_list_v2.h"
#include "aclnn_foreach_sub_scalar.h"
#include "aclnn_foreach_sub_scalar_list.h"
#include "aclnn_foreach_sub_scalar_v2.h"
#include "aclnn_foreach_tan.h"
#include "aclnn_foreach_tanh.h"
#include "aclnn_foreach_zero_inplace.h"
#include "aclnn_frac.h"
#include "aclnn_gcd.h"
#include "aclnn_ge_scalar.h"
#include "aclnn_ge_tensor.h"
#include "aclnn_gemm.h"
#include "aclnn_ger.h"
#include "aclnn_gt_scalar.h"
#include "aclnn_gt_tensor.h"
#include "aclnn_inverse.h"
#include "aclnn_is_inf.h"
#include "aclnn_isclose.h"
#include "aclnn_isfinite.h"
#include "aclnn_isin.h"
#include "aclnn_isin_tensor_scalar.h"
#include "aclnn_isneginf.h"
#include "aclnn_isposinf.h"
#include "aclnn_kthvalue.h"
#include "aclnn_le_scalar.h"
#include "aclnn_le_tensor.h"
#include "aclnn_lerp_scalar.h"
#include "aclnn_lerp_tensor.h"
#include "aclnn_lgamma.h"
#include "aclnn_linalg_cross.h"
#include "aclnn_linalg_qr.h"
#include "aclnn_log.h"
#include "aclnn_log10.h"
#include "aclnn_log1p.h"
#include "aclnn_log2.h"
#include "aclnn_logaddexp.h"
#include "aclnn_logaddexp2.h"
#include "aclnn_logdet.h"
#include "aclnn_logical_and.h"
#include "aclnn_logical_not.h"
#include "aclnn_logical_or.h"
#include "aclnn_logical_xor.h"
#include "aclnn_logsumexp.h"
#include "aclnn_lt_scalar.h"
#include "aclnn_lt_tensor.h"
#include "aclnn_max.h"
#include "aclnn_max_dim.h"
#include "aclnn_max_v2.h"
#include "aclnn_maximum.h"
#include "aclnn_maxn.h"
#include "aclnn_mean.h"
#include "aclnn_median.h"
#include "aclnn_min.h"
#include "aclnn_min_dim.h"
#include "aclnn_minimum.h"
#include "aclnn_minn.h"
#include "aclnn_mul.h"
#include "aclnn_nan_to_num.h"
#include "aclnn_ne_scalar.h"
#include "aclnn_ne_tensor.h"
#include "aclnn_neg.h"
#include "aclnn_nonzero.h"
#include "aclnn_nonzero_v2.h"
#include "aclnn_one_hot.h"
#include "aclnn_ones.h"
#include "aclnn_pdist.h"
#include "aclnn_pdist_forward.h"
#include "aclnn_polar.h"
#include "aclnn_pow.h"
#include "aclnn_pow_tensor_tensor.h"
#include "aclnn_prod.h"
#include "aclnn_qr.h"
#include "aclnn_range.h"
#include "aclnn_real.h"
#include "aclnn_reciprocal.h"
#include "aclnn_reduce_log_sum.h"
#include "aclnn_reduce_nansum.h"
#include "aclnn_reduce_sum.h"
#include "aclnn_remainder.h"
#include "aclnn_repeat_interleave.h"
#include "aclnn_roll.h"
#include "aclnn_round.h"
#include "aclnn_rsqrt.h"
#include "aclnn_rsub.h"
#include "aclnn_s_where.h"
#include "aclnn_scale.h"
#include "aclnn_sign.h"
#include "aclnn_sign_bits_pack.h"
#include "aclnn_sign_bits_unpack.h"
#include "aclnn_signbit.h"
#include "aclnn_sin.h"
#include "aclnn_sinc.h"
#include "aclnn_sinh.h"
#include "aclnn_slogdet.h"
#include "aclnn_sqrt.h"
#include "aclnn_std.h"
#include "aclnn_std_mean_correction.h"
#include "aclnn_sub.h"
#include "aclnn_sum.h"
#include "aclnn_take.h"
#include "aclnn_tan.h"
#include "aclnn_tanh.h"
#include "aclnn_threshold.h"
#include "aclnn_topk.h"
#include "aclnn_trace.h"
#include "aclnn_trans_convolution_weight.h"
#include "aclnn_triangular_solve.h"
#include "aclnn_tril.h"
#include "aclnn_triu.h"
#include "aclnn_trunc.h"
#include "aclnn_unique.h"
#include "aclnn_unique2.h"
#include "aclnn_unique_consecutive.h"
#include "aclnn_unique_dim.h"
#include "aclnn_upsample_bilinear2d_aa.h"
#include "aclnn_upsample_bilinear2d_aa_backward.h"
#include "aclnn_var.h"
#include "aclnn_var_mean.h"
#include "aclnn_x_log_y_scalar_other.h"
#include "aclnn_x_log_y_scalar_self.h"
#include "aclnn_x_log_y_tensor.h"
#include "aclnn_zero.h"

#endif
