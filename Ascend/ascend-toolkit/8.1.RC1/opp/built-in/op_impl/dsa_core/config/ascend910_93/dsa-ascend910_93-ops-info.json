{
    "DSAGenBitMask":{
        "attr":{
            "list":"random_algorithm"
        },
        "attr_random_algorithm":{
            "defaultValue":"\"Philox\"",
            "paramType":"optional",
            "type":"str",
            "value":"all"
        },
        "dynamicCompileStatic":{
            "flag":"true"
        },
        "dynamicRankSupport":{
            "flag":"true"
        },
        "dynamicShapeSupport":{
            "flag":"true"
        },
        "input0":{
            "dtype":"int64,int64,int64,int64,int64,int64",
            "format":"ND,ND,ND,ND,ND,ND",
            "name":"count",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND"
        },
        "input1":{
            "dtype":"uint64,uint64,uint64,uint64,uint64,uint64",
            "format":"ND,ND,ND,ND,ND,ND",
            "name":"seed",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND"
        },
        "input2":{
            "dtype":"float16,float,bfloat16,float16,float,bfloat16",
            "format":"ND,ND,ND,ND,ND,ND",
            "name":"dropout",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND"
        },
        "output0":{
            "dtype":"uint1,uint1,uint1,uint8,uint8,uint8",
            "format":"ND,ND,ND,ND,ND,ND",
            "name":"out",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND"
        }
    },
    "DSARandomNormal":{
        "attr":{
            "list":"random_algorithm"
        },
        "attr_random_algorithm":{
            "defaultValue":"\"Philox\"",
            "paramType":"optional",
            "type":"str",
            "value":"all"
        },
        "dynamicCompileStatic":{
            "flag":"true"
        },
        "dynamicRankSupport":{
            "flag":"true"
        },
        "dynamicShapeSupport":{
            "flag":"true"
        },
        "input0":{
            "dtype":"int64,int64,int64",
            "format":"ND,ND,ND",
            "name":"count",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input1":{
            "dtype":"uint64,uint64,uint64",
            "format":"ND,ND,ND",
            "name":"seed",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input2":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"mean",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input3":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"stdev",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "output0":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"out",
            "paramType":"required",
            "unknownshape_format":"ND,ND,ND"
        }
    },
    "DSARandomTruncatedNormal":{
        "attr":{
            "list":"random_algorithm"
        },
        "attr_random_algorithm":{
            "defaultValue":"\"Philox\"",
            "paramType":"optional",
            "type":"str",
            "value":"all"
        },
        "dynamicCompileStatic":{
            "flag":"true"
        },
        "dynamicRankSupport":{
            "flag":"true"
        },
        "dynamicShapeSupport":{
            "flag":"true"
        },
        "input0":{
            "dtype":"int64,int64,int64",
            "format":"ND,ND,ND",
            "name":"count",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input1":{
            "dtype":"uint64,uint64,uint64",
            "format":"ND,ND,ND",
            "name":"seed",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input2":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"mean",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input3":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"stdev",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "output0":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"out",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        }
    },
    "DSARandomUniform":{
        "attr":{
            "list":"random_algorithm"
        },
        "attr_random_algorithm":{
            "defaultValue":"\"Philox\"",
            "paramType":"optional",
            "type":"str",
            "value":"all"
        },
        "dynamicCompileStatic":{
            "flag":"true"
        },
        "dynamicRankSupport":{
            "flag":"true"
        },
        "dynamicShapeSupport":{
            "flag":"true"
        },
        "input0":{
            "dtype":"int64,int64,int64,int64,int64,int64,int64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"count",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        },
        "input1":{
            "dtype":"uint64,uint64,uint64,uint64,uint64,uint64,uint64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"seed",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        },
        "input2":{
            "dtype":"bfloat16,float16,float,int32,int64,uint32,uint64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"low",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        },
        "input3":{
            "dtype":"bfloat16,float16,float,int32,int64,uint32,uint64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"high",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        },
        "output0":{
            "dtype":"bfloat16,float16,float,int32,int64,uint32,uint64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"out",
            "paramType":"required",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        }
    },
    "DSAStatelessGenBitMask":{
        "attr":{
            "list":"random_algorithm,output_dtype"
        },
        "attr_output_dtype":{
            "defaultValue":"\"uint8\"",
            "paramType":"optional",
            "type":"str",
            "value":"all"
        },
        "attr_random_algorithm":{
            "defaultValue":"\"Philox\"",
            "paramType":"optional",
            "type":"str",
            "value":"all"
        },
        "dynamicCompileStatic":{
            "flag":"true"
        },
        "dynamicRankSupport":{
            "flag":"true"
        },
        "dynamicShapeSupport":{
            "flag":"true"
        },
        "input0":{
            "dtype":"int64,int64,int64,int64,int64,int64",
            "format":"ND,ND,ND,ND,ND,ND",
            "name":"count",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND"
        },
        "input1":{
            "dtype":"uint64,uint64,uint64,uint64,uint64,uint64",
            "format":"ND,ND,ND,ND,ND,ND",
            "name":"seed",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND"
        },
        "input2":{
            "dtype":"float16,float,bfloat16,float16,float,bfloat16",
            "format":"ND,ND,ND,ND,ND,ND",
            "name":"dropout",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND"
        },
        "input3":{
            "dtype":"int64,int64,int64,int64,int64,int64",
            "format":"ND,ND,ND,ND,ND,ND",
            "name":"offset",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND"
        },
        "output0":{
            "dtype":"uint8,uint8,uint8,uint1,uint1,uint1",
            "format":"ND,ND,ND,ND,ND,ND",
            "name":"out",
            "paramType":"required",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND"
        }
    },
    "DSAStatelessRandomNormal":{
        "attr":{
            "list":"random_algorithm"
        },
        "attr_random_algorithm":{
            "defaultValue":"\"Philox\"",
            "paramType":"optional",
            "type":"str",
            "value":"all"
        },
        "dynamicCompileStatic":{
            "flag":"true"
        },
        "dynamicRankSupport":{
            "flag":"true"
        },
        "dynamicShapeSupport":{
            "flag":"true"
        },
        "input0":{
            "dtype":"int64,int64,int64",
            "format":"ND,ND,ND",
            "name":"count",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input1":{
            "dtype":"uint64,uint64,uint64",
            "format":"ND,ND,ND",
            "name":"seed",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input2":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"mean",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input3":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"stdev",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input4":{
            "dtype":"uint64,uint64,uint64",
            "format":"ND,ND,ND",
            "name":"counter",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "output0":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"out",
            "paramType":"required",
            "unknownshape_format":"ND,ND,ND"
        }
    },
    "DSAStatelessRandomTruncatedNormal":{
        "attr":{
            "list":"random_algorithm"
        },
        "attr_random_algorithm":{
            "defaultValue":"\"Philox\"",
            "paramType":"optional",
            "type":"str",
            "value":"all"
        },
        "dynamicCompileStatic":{
            "flag":"true"
        },
        "dynamicRankSupport":{
            "flag":"true"
        },
        "dynamicShapeSupport":{
            "flag":"true"
        },
        "input0":{
            "dtype":"int64,int64,int64",
            "format":"ND,ND,ND",
            "name":"count",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input1":{
            "dtype":"uint64,uint64,uint64",
            "format":"ND,ND,ND",
            "name":"seed",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input2":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"mean",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input3":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"stdev",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "input4":{
            "dtype":"uint64,uint64,uint64",
            "format":"ND,ND,ND",
            "name":"counter",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        },
        "output0":{
            "dtype":"float16,float,bfloat16",
            "format":"ND,ND,ND",
            "name":"out",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND"
        }
    },
    "DSAStatelessRandomUniform":{
        "attr":{
            "list":"random_algorithm"
        },
        "attr_random_algorithm":{
            "defaultValue":"\"Philox\"",
            "paramType":"optional",
            "type":"str",
            "value":"all"
        },
        "dynamicCompileStatic":{
            "flag":"true"
        },
        "dynamicRankSupport":{
            "flag":"true"
        },
        "dynamicShapeSupport":{
            "flag":"true"
        },
        "input0":{
            "dtype":"int64,int64,int64,int64,int64,int64,int64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"count",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        },
        "input1":{
            "dtype":"uint64,uint64,uint64,uint64,uint64,uint64,uint64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"seed",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        },
        "input2":{
            "dtype":"bfloat16,float16,float,int32,int64,uint32,uint64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"low",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        },
        "input3":{
            "dtype":"bfloat16,float16,float,int32,int64,uint32,uint64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"high",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        },
        "input4":{
            "dtype":"uint64,uint64,uint64,uint64,uint64,uint64,uint64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"counter",
            "paramType":"required",
            "shape":"all",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        },
        "output0":{
            "dtype":"bfloat16,float16,float,int32,int64,uint32,uint64",
            "format":"ND,ND,ND,ND,ND,ND,ND",
            "name":"out",
            "paramType":"required",
            "unknownshape_format":"ND,ND,ND,ND,ND,ND,ND"
        }
    }
}