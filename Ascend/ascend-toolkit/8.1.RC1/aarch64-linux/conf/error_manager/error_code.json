{
  "error_info_list": [
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10001",
      "ErrMessage": "Value [%s] for parameter [%s] is invalid. Reason: %s",
      "Arglist": "value,parameter,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid argument."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_shape Argument",
      "ErrCode": "E10002",
      "ErrMessage": "Value [%s] for parameter [--input_shape] is invalid. Reason: %s The value must be formatted as [%s].",
      "Arglist": "shape,reason,sample",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "The valid format is [input_name1:n1,c1,h1,w1;input_name2:n2,c2,h2,w2]. Replace [input_name#] with node names. Ensure that the shape values are integers."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10003",
      "ErrMessage": "Value [%s] for parameter [--%s] is invalid. Reason: %s",
      "Arglist": "value,parameter,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Run the \"atc -h\" command to view the usage. For details, see ATC Instructions."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10004",
      "ErrMessage": "Value for [--%s] is empty.",
      "Arglist": "parameter",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10005",
      "ErrMessage": "Value [%s] for parameter [--%s] is invalid. The value must be either [true] or [false].",
      "Arglist": "value,parameter",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10006",
      "ErrMessage": "Value [%s] for parameter [--%s] is invalid. The value must be either 1 or 0.",
      "Arglist": "value,parameter",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10007",
      "ErrMessage": "[--%s] is required. The value must be [%s].",
      "Arglist": "parameter,support",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10008",
      "ErrMessage": "[--weight] must not be empty when [--framework] is set to 0 (Caffe).",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1.If the source model framework is Caffe, try again with a valid [--weight] argument.  2.If the source model framework is not Caffe, try again with a valid [--framework] argument."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Dynamic Shape Argument",
      "ErrCode": "E10009",
      "ErrMessage": "[--dynamic_batch_size], [--dynamic_image_size], [--input_shape_range], and [--dynamic_dims] are mutually exclusive.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1.In dynamic shape scenarios, include only one of these options in your command line.  2.In static shape scenarios, remove these options from your command line."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --log Argument",
      "ErrCode": "E10010",
      "ErrMessage": "Value [%s] for parameter [--log] is invalid.",
      "Arglist": "loglevel",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Select the value from [debug], [info], [warning], [error], and [null]."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_shape Argument",
      "ErrCode": "E10011",
      "ErrMessage": "Value [%s] for parameter [--input_shape] is invalid. Shape values must be positive integers. The error value in the shape is %s",
      "Arglist": "shape,result",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. In static shape scenarios, set the shape values in [--input_shape] to positive integers. 2. In dynamic shape scenarios, add the related dynamic-input option in your command line, such as [--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims]."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_shape Argument",
      "ErrCode": "E10012",
      "ErrMessage": "[--dynamic_batch_size] is included, but the dimension count of the dynamic-shape input configured in [--input_shape] is less than 1.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. In static shape scenarios, remove the [--dynamic_batch_size] option from your command line. 2. In dynamic shape scenarios, set the corresponding axis of the dynamic-shape input in [--input_shape] to -1."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10013",
      "ErrMessage": "Value [%s] for [--%s] is out of range.",
      "Arglist": "value,parameter",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Run the \"atc -h\" command to view the usage. For details, see ATC Instructions."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10014",
      "ErrMessage": "Value [%s] for parameter [--%s] is invalid.",
      "Arglist": "value,parameter",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Run the \"atc -h\" command to view the usage. For details, see ATC Instructions."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10015",
      "ErrMessage": "Value [%s] for [--%s] is invalid.",
      "Arglist": "value,parameter",
      "suggestion": {
        "Possible Cause": "Try again with a valid argument.",
        "Solution": "Run the \"atc -h\" command to view the usage. For details, see [ATC Instructions]."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Node Name",
      "ErrCode": "E10016",
      "ErrMessage": "Opname [%s] specified in [--%s] is not found in the model, confirm whether this node name exists, or node is not split with the specified delimiter ';'",
      "Arglist": "opname,parameter",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10017",
      "ErrMessage": "Input Op [%s] specified in [--%s] is invalid. The Op type must be Data.",
      "Arglist": "opname,parameter",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Run the \"atc -h\" command to view the usage. For details, see ATC Instructions."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Dynamic Shape Argument",
      "ErrCode": "E10018",
      "ErrMessage": "Value [%s] for shape [%s] is invalid. When [--dynamic_batch_size] is included, only batch size N can be -1 in [--input_shape].",
      "Arglist": "shape,index",
      "suggestion": {
        "Possible Cause": "When [--dynamic_batch_size] is included, only batch size N can be -1 in the shape.",
        "Solution": "Try again with a valid [--input_shape] argument. Make sure that non-batch size axes are not -1."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_shape Argument",
      "ErrCode": "E10019",
      "ErrMessage": "When [--dynamic_image_size] is included, only the height and width axes can be -1 in [--input_shape].",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "When [--dynamic_image_size] is included, only the height and width axes can be -1 in the shape.",
        "Solution": "Try again with a valid [--input_shape] argument. Make sure that axes other than height and width are not -1."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --dynamic_image_size Argument",
      "ErrCode": "E10020",
      "ErrMessage": "Value [%s] for parameter [--dynamic_image_size] is invalid. ",
      "Arglist": "dynamic_image_size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "The value must be formatted as [imagesize1_height,imagesize1_width;imagesize2_height,imagesize2_width]. Make sure that each profile has two dimensions."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10021",
      "ErrMessage": "Path for parameter [--%s] is too long. Keep the length within %s",
      "Arglist": "parameter,size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10022",
      "ErrMessage": "Path [%s] for parameter [--%s] does not include the file name.",
      "Arglist": "filename,parameter",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Add the file name to the path."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --singleop Argument",
      "ErrCode": "E10023",
      "ErrMessage": "Value [%s] for parameter [--singleop] is invalid.",
      "Arglist": "value",
      "suggestion": {
        "Possible Cause": "The path does not exist or the file name is incorrect.",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --singleop Argument",
      "ErrCode": "E10024",
      "ErrMessage": "Failed to open file [%s] specified by [--singleop].",
      "Arglist": "value",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check the owner group and permission settings and ensure that the user who runs the ATC command has enough permission to open the file."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --singleop Argument",
      "ErrCode": "E10025",
      "ErrMessage": "File [%s] specified by [--singleop] is not a valid JSON file. Reason: %s",
      "Arglist": "realpath,errmsg",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check that the file is in valid JSON format."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --singleop Argument",
      "ErrCode": "E10026",
      "ErrMessage": "Empty Op name in the file specified by [--singleop].",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check that no Op name is empty in the file."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --singleop Argument",
      "ErrCode": "E10027",
      "ErrMessage": "Attribute [%s] of [%s] tensor [%s] for Op [%s] is invalid when [--singleop] is specified.",
      "Arglist": "attr,input_output,index,op_name",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid tensor dtype and format."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --singleop Argument",
      "ErrCode": "E10029",
      "ErrMessage": "Attribute name of Op [%s] is empty in the file specified by [--singleop].",
      "Arglist": "op_name",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check that no Op attribute name is empty in the file."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --singleop Argument",
      "ErrCode": "E10030",
      "ErrMessage": "There is an invalid value for attribute name [%s] of Op [%s] in the file specified by [--singleop].",
      "Arglist": "attrname,op_name",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check that no Op attribute value is invalid in the file."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_shape Argument",
      "ErrCode": "E10031",
      "ErrMessage": "[--dynamic_batch_size] is included, but none of the nodes specified in [--input_shape] have a batch size equaling -1.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "As [--dynamic_batch_size] is included, ensure that at least one of the nodes specified in [--input_shape] has a batch size equaling -1.",
        "Solution": "1. In static shape scenarios, remove the [--dynamic_batch_size] option from your command line. 2. In dynamic shape scenarios, set the corresponding axis of the dynamic-shape input in [--input_shape] to -1."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Json File",
      "ErrCode": "E10032",
      "ErrMessage": "Parse json file [%s] failed, reason: %s. %s",
      "Arglist": "file_name,reason,optional_info",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_fp16_nodes Argument",
      "ErrCode": "E10034",
      "ErrMessage": "Nodes (for example, [%s]) connected to AIPP must not be of type fp16.",
      "Arglist": "opname",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. To enable AIPP, remove the nodes connected to AIPP from the [--input_fp16_nodes] argument.  2. If AIPP is not required, remove the [--insert_op_conf] option from your ATC command line."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Dynamic Shape Argument",
      "ErrCode": "E10035",
      "ErrMessage": "[--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims] has [%s] profiles, which is less than the minimum ([%s]).",
      "Arglist": "shapesize,minshapesize",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Ensure that the number of profiles configured in [--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims] is at least the minimum."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Dynamic Shape Argument",
      "ErrCode": "E10036",
      "ErrMessage": "[--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims] has [%s] profiles, which is greater than the maximum ([%s]).",
      "Arglist": "shapesize,maxshapesize",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Ensure that the number of profiles configured in [--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims] is at most the maximum."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Dynamic Shape Argument",
      "ErrCode": "E10037",
      "ErrMessage": "The profiles configured in [--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims] have inconsistent dimension counts. A profile has %s dimensions while another has %s dimensions.",
      "Arglist": "shapesize1,shapesize2",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Ensure that the profiles configured in [--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims] have the same dimension count."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Dynamic Shape Argument",
      "ErrCode": "E10038",
      "ErrMessage": "Dimension size [%s] is invalid. The value must be greater than 0.",
      "Arglist": "dim",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Set the shape values of each profile to positive in [--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims]."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Dynamic Shape Argument",
      "ErrCode": "E10039",
      "ErrMessage": "The [--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims] argument have duplicate profiles.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check that the profiles configured in [--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims] are unique."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_shape Argument",
      "ErrCode": "E10040",
      "ErrMessage": "As the [--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims] argument is included, the corresponding nodes specified in [--input_shape] must have -1 axes and can not have '~'.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "In dynamic shape scenarios, when [--dynamic_batch_size], [--dynamic_image_size], or [--dynamic_dims] argument is included, the corresponding shape value in the input node must be set to -1 and can not have '~'.",
        "Solution": "1. In static shape scenarios, remove the [--dynamic_batch_size], [--dynamic_image_size] or [--dynamic_dims] option from your command line. \n 2. In dynamic multi-batch scenarios, set the corresponding axis of the dynamic-shape input in [--input_shape] to -1.\n 3. In dynamic shape scenarios, remove the [--dynamic_batch_size], [--dynamic_image_size] or [--dynamic_dims] option from your command line and set [--input_shape] to -1 or n1~n2"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --framework or --model Argument",
      "ErrCode": "E10041",
      "ErrMessage": "Failed to load the model from [%s].",
      "Arglist": "parameter",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check that the model file is valid. 2. Check that the weight file or path is valid when model is more than 2G. 3. Check that the [--framework] argument matches the actual framework of the model file."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10042",
      "ErrMessage": "GenerateOfflineModel execute failed.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Insufficient Memory",
      "ErrCode": "E10044",
      "ErrMessage": "The available memory is [%s KB], which is less than the required minimum [%s KB].",
      "Arglist": "value,min_value",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Stop unnecessary processes and ensure that the required minimum system memory is available. "
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Dynamic Shape Argument",
      "ErrCode": "E10045",
      "ErrMessage": "The number of -1 axes in the [--input_shape] argument exceeds the dimension count per profile in [--dynamic_dims].",
      "Arglist": "name,shape",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Ensure that the number of -1 axes in the [--input_shape] argument matches the dimension count per profile in [--dynamic_dims]."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Dynamic Shape Argument",
      "ErrCode": "E10046",
      "ErrMessage": "The total number of -1 axes in the [--input_shape] argument is greater than the dimension count per profile in [--dynamic_dims].",
      "Arglist": "name,shape",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Ensure that the total number of -1 axes in the [--input_shape] argument is less than the dimension count per profile in [--dynamic_dims]."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10047",
      "ErrMessage": "[--%s] and [--%s] are mutually exclusive.",
      "Arglist": "parameter0,parameter1",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Remove either of them and try again."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_shape_range or dynamic_inputs_shape_range Argument",
      "ErrCode": "E10048",
      "ErrMessage": "Value [%s] for parameter [--input_shape_range] or [dynamic_inputs_shape_range] is invalid. Reason: %s The value must be formatted as [%s].",
      "Arglist": "shape_range,reason,sample",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid argument."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_shape Argument",
      "ErrCode": "E10049",
      "ErrMessage": "Dimension count [%s] configured in [--input_shape] does not match dimension count [%s] of the node.",
      "Arglist": "shape_range_size,cur_dim_size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Set the dimension count in [--input_shape] according to the dimension count of the node."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_shape Argument",
      "ErrCode": "E10050",
      "ErrMessage": "Current dimension size [%s] is not in the range of [%s–%s] specified by [--input_shape].",
      "Arglist": "cur_dim,shape_range_left,shape_range_right",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Set the dimension size according to [--input_shape]."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --job_id Argument",
      "ErrCode": "E10051",
      "ErrMessage": "Value [%s] for parameter [--job_id] exceeds the allowed maximum ([%s]).",
      "Arglist": "id, length",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid argument."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid AIPP Configuration",
      "ErrCode": "E10052",
      "ErrMessage": "AIPP configuration is invalid. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Run the \"atc -h\" command to view the usage. For details, see ATC Instructions."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10053",
      "ErrMessage": "There is an error in the command line. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10054",
      "ErrMessage": "The requied parameter [%s] for ATC is empty. Another possible reason is that the value of some parameters is not enclosed by quotation marks (\"\").",
      "Arglist": "parameter",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Unsupported Feature",
      "ErrCode": "E10055",
      "ErrMessage": "The operation is not supported. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10056",
      "ErrMessage": "Cannot config both parameters [%s] and [%s] simultaneously.",
      "Arglist": "parameter1, parameter2",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10057",
      "ErrMessage": "[--%s] and [--%s] can only be used together",
      "Arglist": "parameter0, parameter1",
      "suggestion": {
      "Possible Cause": "N/A",
      "Solution": "If the value of --mode is 6, it only needs to be used with --om. Please check and try again."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Operator Input Count",
      "ErrCode": "E10401",
      "ErrMessage": "The number of operator inputs ([%s]) exceeds the allowed maximum ([%s]).",
      "Arglist": "expect_num, input_num",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid number of inputs."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Input Buffer Allocation for Operator Execution",
      "ErrCode": "E10402",
      "ErrMessage": "Input indexed [%s] requires a %s buffer, but %s (aligned) are allocated.",
      "Arglist": "index, expect_size, input_size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check whether the data type, dimensions, and shape are correctly set.For details, see the aclGetTensorDescSize API description in AscendCL API Reference."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Operator Output Count",
      "ErrCode": "E10403",
      "ErrMessage": "The number of operator outputs ([%s]) exceeds the allowed maximum ([%s]).",
      "Arglist": "expect_num, input_num",
      "suggestion": {
        "Possible Cause": "The number of outputs configured for operator execution does not match that described in the operator specifications.",
        "Solution": "Check whether the number of elements in numoutputs is correctly set. The aclopCompile, aclopExecuteV2, and aclopCompileAndExecute APIs may be involved. For details, see AscendCL API Reference."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Output Buffer Allocation for Operator Execution",
      "ErrCode": "E10404",
      "ErrMessage": "Output indexed [%s] requires a %s buffer, but %s (aligned) are allocated.",
      "Arglist": "index, expect_size, input_size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check whether the data type, dimensions, and shape are correctly set. For details, see the aclGetTensorDescSize API description in AscendCL API Reference."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Inconsistent Input Buffer Count and Input Tensor Count for Operator Execution",
      "ErrCode": "E10405",
      "ErrMessage": "The number of input buffers is [%s], which does not match the number of input tensors ([%s]).",
      "Arglist": "input_num, input_desc_num",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check whether the number of elements in inputDesc and inputs of the operator is correctly set. The aclopExecuteV2 and aclopCompileAndExecute APIs may be involved. For details, see AscendCL API Reference."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Inconsistent Output Buffer Count and Output Tensor Count for Operator Execution",
      "ErrCode": "E10406",
      "ErrMessage": "The number of output buffers is [%s], which does not match the number of output tensors ([%s]).",
      "Arglist": "out_num, out_desc_num",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check whether the number of elements in outputDesc and outputs of the operator is correctly set. The aclopExecuteV2 and aclopCompileAndExecute APIs may be involved. For details, see AscendCL API Reference."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E10410",
      "ErrMessage": "File [%s] does not exist.",
      "Arglist": "cfgpath",
      "suggestion": {
        "Possible Cause": "The file specified by the [--keep_dtype] or [--compress_weight_conf] argument does not exist.",
        "Solution": "Try again with a valid file directory."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Unsupported Operator",
      "ErrCode": "E10501",
      "ErrMessage": "IR for Op [%s, optype [%s]], is not registered.",
      "Arglist": "opname,optype",
      "suggestion": {
        "Possible Cause": "1. The environment variable ASCEND_OPP_PATH is not configured. 2. IR is not registered",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11001",
      "ErrMessage": "[input_dim] and [input_shape] are mutually exclusive in [NetParameter] for Caffe model conversion.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Remove either of [--input_dim] and [--input_shape] from your atc command line."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11003",
      "ErrMessage": "The number of [input_dim] fields in the model is [%s], which is not 4x the input count [%s].",
      "Arglist": "input_dim_size,input_size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Modify your Caffe model and try again."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11004",
      "ErrMessage": "The number of input shapes is [%s], which does not match the number of inputs [%s].",
      "Arglist": "input_shape_size,input_size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Modify your Caffe model and try again."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --input_shape Argument",
      "ErrCode": "E11005",
      "ErrMessage": "Shape is not defined by using [--input_shape] for input [%s].",
      "Arglist": "input",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Modify your Caffe model, or add the shape of the input to the [--input_shape] argument in your atc command line."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11008",
      "ErrMessage": "Optype DetectionOutput is unsupported.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Modify your Caffe model and replace DetectionOutput operators with FSRDetectionOutput or SSDDetectionOutput."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Unsupported Caffe Operator",
      "ErrCode": "E11009",
      "ErrMessage": "No Caffe parser is registered for Op [%s, optype [%s]].",
      "Arglist": "opname,optype",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11012",
      "ErrMessage": "Unknown bottom blob [%s] at layer [%s]. The bottom blob is indexed [%s].",
      "Arglist": "bottom_blob,layer,bottom_index",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Modify your Caffe model and try again."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11014",
      "ErrMessage": "Failed to find the top blob for layer [%s].",
      "Arglist": "opname",
      "suggestion": {
        "Possible Cause": "The top blob has no corresponding node in the source Caffe model.",
        "Solution": "Modify your Caffe model and try again."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11015",
      "ErrMessage": "Failed to find the bottom blob for layer [%s].",
      "Arglist": "opname",
      "suggestion": {
        "Possible Cause": "The bottom blob has no corresponding node in the source Caffe model.",
        "Solution": "Modify your Caffe model and try again."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --out_nodes Argument",
      "ErrCode": "E11016",
      "ErrMessage": "Failed to add Op [%s] to NetOutput. Op output index [%s] is not less than [%s]. NetOutput input_index [%s] is not less than [%s].",
      "Arglist": "opname,outputindex,totlaloutputindex,inputindex,totlalinputindex",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid [--out_nodes] argument."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid --out_nodes Argument",
      "ErrCode": "E11017",
      "ErrMessage": "Failed to find node [%s] specified by [--out_nodes].",
      "Arglist": "opname",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid [--out_nodes] argument."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11018",
      "ErrMessage": "Op name [%s] contains invalid characters.",
      "Arglist": "opname",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Allowed characters include: letters, digits, hyphens (-), periods (.), underscores (_), and slashes (/). Modify the Op name and try again."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11021",
      "ErrMessage": "Model file [%s] contains [layers] structures, which have been deprecated in Caffe and unsupported by ATC.",
      "Arglist": "realpath",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Replace [layers] with [layer].."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11022",
      "ErrMessage": "Invalid prototxt file.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "No [layer] structures are found in the Caffe model.",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11023",
      "ErrMessage": "Weight file contains [layers] structures, which have been deprecated in Caffe and unsupported by ATC.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Replace [layers] with [layer]."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11024",
      "ErrMessage": "Invalid Caffe weight file.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "No [layer] structures are found in the Caffe weight file.",
        "Solution": "N/A."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11027",
      "ErrMessage": "Op [%s, optype [%s]] in the Caffe model has an input node with shape size 0.",
      "Arglist": "layername,layertype",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11029",
      "ErrMessage": "Op [%s] exists in model file but not found in weight file.",
      "Arglist": "opname",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid Caffe model or weight file. Ensure that the two files match with each other."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe File Error",
      "ErrCode": "E11032",
      "ErrMessage": "Failed to parse message [%s]. The error field is %s. Reason: %s.",
      "Arglist": "message_type,name,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "The Caffe weight file is invalid.",
      "ErrCode": "E11033",
      "ErrMessage": "Failed to convert the weight file. Blob [%s] of size [%s] is invalid. Reason: %s.",
      "Arglist": "opname,blobsize,reason",
      "suggestion": {
        "Possible Cause": "The blob size of the node in the Caffe weight file does not match the number of elements calculated based on its shape.",
        "Solution": "Try again with a valid Caffe model or weight file. Ensure that the two files match with each other."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11035",
      "ErrMessage": "The top size of data node [%s] is not 1 but [%s].",
      "Arglist": "opname,size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11036",
      "ErrMessage": "Data nodes have duplicate top blobs [%s].",
      "Arglist": "topname",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Caffe Model Data Error",
      "ErrCode": "E11037",
      "ErrMessage": "Op [%s] has zero outputs.",
      "Arglist": "opname",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Nodes in the Caffe model must have at least one output."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Operator Prototype Registration Error",
      "ErrCode": "E12004",
      "ErrMessage": "Failed to register the prototype of Op [%s]. If input index is less than 0, then input index [–%s] (absolute value) must be less than the input count [%s]",
      "Arglist": "opname,inputIdx,inputsize",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "TensorFlow Model Data Error",
      "ErrCode": "E12009",
      "ErrMessage": "Op [%s]'s input [%s] is not found in graph_def.",
      "Arglist": "opname,inputopname",
      "suggestion": {
        "Possible Cause": "The input name of the node is not found in the graph.",
        "Solution": "Try again with a valid TensorFlow model."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "TensorFlow Model Data Error",
      "ErrCode": "E12013",
      "ErrMessage": "Failed to find a subgraph by the name [%s].",
      "Arglist": "functionname",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. To use function subgraphs to convert a TensorFlow model, place the subgraph .proto description file in the same directory as the model file and name it [graph_def_library.pbtxt]. 2. Run the [func2graph.py] script in the ATC installation directory to save the subgraphs to [graph_def_library.pbtxt]."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "TensorFlow Model Data Error",
      "ErrCode": "E12029",
      "ErrMessage": "Failed to find the subgraph library.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "The model to convert contains function subgraphs, but the [graph_def_library.pbtxt] file is not found.",
        "Solution": "1. To use function subgraphs to convert a TensorFlow model, place the subgraph .proto description file in the same directory as the model file and name it [graph_def_library.pbtxt]. 2. Run the [func2graph.py] script in the ATC installation directory to save the subgraphs to [graph_def_library.pbtxt]."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Argument for Operator Compilation",
      "ErrCode": "E14001",
      "ErrMessage": "Argument [%s] for Op [%s, optype [%s]], is invalid. Reason: %s.",
      "Arglist": "value,opname,optype,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Failed to Obtain Tensor Attribute",
      "ErrCode": "E14002",
      "ErrMessage": "In the current process, obtaining the attribute of %s must be successful. Reason: %s.",
      "Arglist": "attribute,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "ONNX Model Data Error",
      "ErrCode": "E16001",
      "ErrMessage": "Model has no [%s] node.",
      "Arglist": "value",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "ONNX Model Data Error",
      "ErrCode": "E16002",
      "ErrMessage": "No ONNX parser is registered for optype [%s].",
      "Arglist": "optype",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check the version of the installation package and reinstall the package. For details, see the operator specifications."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "ONNX Model Data Error",
      "ErrCode": "E16004",
      "ErrMessage": "ONNX model has no graph.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "ONNX Model Data Error",
      "ErrCode": "E16005",
      "ErrMessage": "The model has [%s] [--domain_version] fields, but only one is allowed.",
      "Arglist": "domain_version_size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Directory",
      "ErrCode": "E19000",
      "ErrMessage": "Path[%s] is empty. Reason: %s.",
      "Arglist": "path,errmsg",
      "suggestion": {
        "Possible Cause": "The file does not exist.",
        "Solution": "Try again with a valid directory."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Failure to Open File",
      "ErrCode": "E19001",
      "ErrMessage": "Failed to open file[%s]. Reason: %s.",
      "Arglist": "file,errmsg",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Fix the error according to the error message."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Too Long File Directory",
      "ErrCode": "E19002",
      "ErrMessage": "Directory [%s] is too long. Keep the length within [%s] characters.",
      "Arglist": "filepath,size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid file directory."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Failure to Read File",
      "ErrCode": "E19003",
      "ErrMessage": "Failed to read file [%s]. Reason: %s.",
      "Arglist": "file,errmsg",
      "suggestion": {
        "Possible Cause": "Failed to read the file.",
        "Solution": "Fix the error according to the error message."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Failure to Write File",
      "ErrCode": "E19004",
      "ErrMessage": "Failed to write file [%s]. Reason: %s.",
      "Arglist": "file,errmsg",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Fix the error according to the error message."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Failure to Parse File",
      "ErrCode": "E19005",
      "ErrMessage": "Failed to parse file [%s].",
      "Arglist": "file",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check that a matched Protobuf version is installed and try again with a valid file. For details, see section \"--framework\" in ATC Instructions."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Operator Name Conflict",
      "ErrCode": "E19009",
      "ErrMessage": "Op [%s] has a name conflict in the graph.",
      "Arglist": "opname",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Ensure that the operators in the graph have unique names."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Unsupported Operator",
      "ErrCode": "E19010",
      "ErrMessage": "No parser is registered for Op [%s, optype [%s]].",
      "Arglist": "opname,optype",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check the version of the installation package and reinstall the package. For details, see the operator specifications."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Operator Data Verification Failure",
      "ErrCode": "E19014",
      "ErrMessage": "Value [%s] for Op [%s] is invalid. Reason: %s.",
      "Arglist": "value,opname,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "File size invalid",
      "ErrCode": "E19015",
      "ErrMessage": "File[%s] size %s is out of valid range(0, %s).",
      "Arglist": "file,size,maxsize",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Failure to Parse File",
      "ErrCode": "E19018",
      "ErrMessage": "Failed to parse file [%s] through [google::protobuf::TextFormat::Parse].",
      "Arglist": "protofile",
      "suggestion": {
        "Possible Cause": "The file may not be in valid protobuf format.",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Insufficient Memory",
      "ErrCode": "E19022",
      "ErrMessage": "Model %s requires [%s] memory, which exceeds system limit [%s].",
      "Arglist": "item,size,maxsize",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Set variable_memory_max_size and graph_memory_max_size to adjust the memory usage of variables and feature maps. 2. Reduce the batch size. 3. If the error persists when the batch size is reduced to 1, modify the model structure to reduce the model size."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Too Large OM Model",
      "ErrCode": "E19023",
      "ErrMessage": "Model %s has size [%s], which exceeds system limit [%s].",
      "Arglist": "item,size,maxsize",
      "suggestion": {
        "Possible Cause": "The generated OM model is too large and therefore cannot be dumped to the disk.",
        "Solution": "Reduce the model size."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Invalid Environment Variable",
      "ErrCode": "E19024",
      "ErrMessage": "Value [%s] for environment variable [%s] is invalid when %s.",
      "Arglist": "value,env,situation",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Reset the environment variable by referring to the setup guide."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Input Tensor Error",
      "ErrCode": "E19025",
      "ErrMessage": "Input tensor is invalid. Reason: %s.",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Input Path Name Error",
      "ErrCode": "E19026",
      "ErrMessage": "Input path [%s] is invalid. Reason: %s",
      "Arglist": "pathname,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Input Config Item Error",
      "ErrCode": "E19027",
      "ErrMessage": "Failed to connect to the peer address[%s].",
      "Arglist": "address",
      "suggestion": {
        "Possible Cause": "ipaddr, port or token is invalid.",
        "Solution": "Check ipaddr, port or token in the configuration file, ensure that the configuration is correct."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Custom Fusion Pass Execution Failure",
      "ErrCode": "E19028",
      "ErrMessage": "Failed to run custom fusion pass [%s]. Return code is [%s]. Reason: %s.",
      "Arglist": "passname,retcode,reason",
      "suggestion": {
        "Possible Cause": "Refer to the reason provided in the error message.",
        "Solution": "Check the error log for details and verify whether the fusion logic is correct."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Custom Fusion Pass Load Failure",
      "ErrCode": "E19029",
      "ErrMessage": "Failed to load custom fusion pass lib [%s]. Reason: %s.",
      "Arglist": "passlibname,reason",
      "suggestion": {
        "Possible Cause": "Refer to the reason provided in the error message.",
        "Solution": "Analyze the failure reason mentioned above. Below are some typical solutions for common dlopen failures:\n1. Verify the library path is correct and the file exists.\n2. Ensure the library and its dependencies have the correct permissions.\n3. Check that all dependencies are available using the 'ldd' command."
      }
    },
    {
      "errClass": "GE Errors",
      "errTitle": "Custom Pass Registration Error",
      "ErrCode": "E19030",
      "ErrMessage": "Failed to get custom fusion pass func [%s]. Reason: %s.",
      "Arglist": "passname,reason",
      "suggestion": {
        "Possible Cause": "Refer to the reason provided in the error message.",
        "Solution": "Check custom pass registration is valid."
      }
    },
    {
      "errClass": "Default Error",
      "errTitle": "System Terminated",
      "ErrCode": "E19999",
      "ErrMessage": "Unknown error occurred. Please check the log.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "System terminated abnormally without valid error messages.",
        "Solution": "In this scenario, collect the logs generated when the fault occurs and locate the fault based on the logs."
      }
    },
    {
      "errClass": "Minor Error",
      "errTitle": "Operator Missing High-Priority Performance",
      "ErrCode": "W11001",
      "ErrMessage": "Op [%s] does not hit the high-priority operator information library, which might result in compromised performance.",
      "Arglist": "opname",
      "suggestion": {
        "Possible Cause": "The operator does not hit the high-priority operator information library, which might result in compromised performance.",
        "Solution": "Submit an issue to request for support at https://gitee.com/ascend."
      }
    },
    {
      "errClass": "GE Error",
      "errTitle": "Invalid Weight Configuration",
      "ErrCode": "W11002",
      "ErrMessage": "In the compression weight configuration file [%s], some nodes do not exist in graph: %s.",
      "Arglist": "filename, opnames",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "FE Errors",
      "errTitle": "Op Compilation Failure",
      "ErrCode": "E20001",
      "ErrMessage": "Failed to compile Op [%s]. (optype: [%s])",
      "Arglist": "parameter0,parameter1",
      "suggestion": {
        "Possible Cause": "The operator has an invalid argument.",
        "Solution": "For a custom operator, check the operator implementation and arguments based on the error log. For a Huawei built-in operator, submit an issue to request for support at https://gitee.com/ascend or contact Huawei technical support."
      }
    },
    {
      "errClass": "FE Errors",
      "errTitle": "Invalid Environment Variable",
      "ErrCode": "E20002",
      "ErrMessage": "Value [%s] for environment variable [%s] is invalid when %s.",
      "Arglist": "value,env,situation",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Reset the environment variable by referring to the installation guide."
      }
    },
    {
      "errClass": "FE Errors",
      "errTitle": "Invalid Content",
      "ErrCode": "E20003",
      "ErrMessage": "Configuration file [%s] for parameter [%s] has invalid content. Reason: [%s]",
      "Arglist": "parameter0,parameter1,parameter2",
      "suggestion": {
        "Possible Cause": "The content or format of the configuration file does not comply with the specifications provided in the documentation.",
        "Solution": "Modify the configuration file by referring to the specifications in the user guide."
      }
    },
    {
      "errClass": "FE Errors",
      "errTitle": "Fusion Pass Execution Failure",
      "ErrCode": "E20007",
      "ErrMessage": "Failed to run graph fusion pass [%s]. The pass type is [%s]",
      "Arglist": "parameter0,parameter1",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. If the pass code is custom, check the error log and the verification logic.  2. If the pass code is not custom, perform a complete or partial dump by using npucollect.sh and then send the dump to Huawei technical support for fault locating."
      }
    },
    {
      "errClass": "FE Errors",
      "errTitle": "Invalid CANN Initialization Argument",
      "ErrCode": "E20101",
      "ErrMessage": "Value [%s] for parameter [%s] is invalid. Reason: %s.",
      "Arglist": "parameter0,parameter1,parameter2",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "FE Errors",
      "errTitle": "Invalid Platform Initialization Argument",
      "ErrCode": "E20103",
      "ErrMessage": "Value [%s] for parameter [%s] is invalid. The value must be in the range of (0, %s].",
      "Arglist": "parameter0,parameter1,parameter2",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "FE Errors",
      "errTitle": "File Opening Failure",
      "ErrCode": "E21001",
      "ErrMessage": "Failed to open file [%s].",
      "Arglist": "parameter0",
      "suggestion": {
        "Possible Cause": "1. The configured file path does not exist. 2. The file permissions are insufficient. 3. An error occurred when installing the system environment.",
        "Solution": "1. Configure the file path correctly.  2. Configure user permissions correctly. 3. Reinstall the system environment."
      }
    },
    {
      "errClass": "FE Errors",
      "errTitle": "File Read Failure",
      "ErrCode": "E21002",
      "ErrMessage": "Failed to read file [%s]. Reason: %s.",
      "Arglist": "parameter0,parameter1",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Configure the file path correctly."
      }
    },
    {
      "errClass": "FE Errors",
      "errTitle": "Compile result is not found",
      "ErrCode": "E22001",
      "ErrMessage": "Compile result is not found for Op [%s, %s].",
      "Arglist": "opname,optype",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "NN Process Count Limit Exceeded",
      "ErrCode": "E30003",
      "ErrMessage": "The number of started NN processes exceeds the limit.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Something wrong with queue_schedule.",
        "Solution": "Wait for 10s after the last training process exited and try again."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "NN Process Bin Error",
      "ErrCode": "E30004",
      "ErrMessage": "The binary file of the NN process is damaged or the file permissions are incorrect.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "The driver package is incorrectly installed.",
        "Solution": "Reinstall the driver package."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "AI CPU Timeout",
      "ErrCode": "E30008",
      "ErrMessage": "AI CPU operator execution time out.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "1. For the GetNext operator, its preprocessing duration may be too long. 2. For a custom operator, its logic may be improper.",
        "Solution": "1. For the GetNext operator, check its preprocessing or set OpExecuteTimeOut to a larger value. 2. For a custom operator, make sure its logic is proper."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E39001",
      "ErrMessage": "The argument is invalid.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "The parameter value is null or the parameter length is invalid.",
        "Solution": "See the host log for details, and then check the parameter where the error log is reported."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "Driver Function Call Failure",
      "ErrCode": "E39002",
      "ErrMessage": "Failed to obtain the number of devices and the device list.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Failed to obtain the device information from the driver.",
        "Solution": "Check the device logs to see whether the device driver service is normal."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "Cgroup Add Failure",
      "ErrCode": "E30007",
      "ErrMessage": "Failed to add the AI CPU scheduler to the Cgroup.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "1. The User have no sudo Permission.\n2. The Cgroup configuration is incorrect.",
        "Solution": "1. Check whether the user have sudo Permission or not.\n2. Submit an issue on Gitee at https://gitee.com/ascend."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "AI CPU Scheduler Initialization Failure",
      "ErrCode": "E39004",
      "ErrMessage": "The AI CPU scheduler is abnormal.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Something wrong with aicpu_scheduler",
        "Solution": "Check the initialization information from device logs."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "Device Connection Failure",
      "ErrCode": "E30005",
      "ErrMessage": "The device failed to be connected.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "1. The device is broken.\n2. The device failed to be started.",
        "Solution": "1.Restart the device.\n2. Submit an issue on Gitee at https://gitee.com/ascend."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "TSDaemon Process Abnormal",
      "ErrCode": "E39005",
      "ErrMessage": "The TSDaemon process is abnormal.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "The TSDaemon process failed to be started.",
        "Solution": "Check the device logs to see if TSDaemon is normal."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "Failed to Send OPP to device",
      "ErrCode": "E39006",
      "ErrMessage": "Failed to send the OPP to the device.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "1.The HDCD process is abnormal.\n2. The device failed to be connected.",
        "Solution": "Check the host and device logs to see if HDC is normal."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "Device Subprocess Startup Timeout",
      "ErrCode": "E39007",
      "ErrMessage": "Starting a subprocess on the device timed out.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "1.The subprocess failed to be started.\n2. HDC is abnormal.",
        "Solution": "1. Check the device logs to see if the subprocess is started is started successfully.\n2. Check the host and device logs to see if HDC is normal."
      }
    },
    {
      "errClass": "AI CPU Errors",
      "errTitle": "OPP Verification Failure",
      "ErrCode": "E30006",
      "ErrMessage": "Failed to verify the OPP",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "1.The OPP is incorrect.",
        "Solution": "1. Use a correct OPP."
      }
    },
    {
      "errClass": "TEFusion Errors",
      "errTitle": "Invalid Path",
      "ErrCode": "W40010",
      "ErrMessage": "Path [%s] for [%s] is invalid. Result: %s. Reason: %s.",
      "Arglist": "path,arg,result,reason",
      "suggestion": {
        "Possible Cause": "The path is empty or does not exist.",
        "Solution": "Try again with a valid path."
      }
    },
    {
      "errClass": "TEFusion Errors",
      "errTitle": "Failure to Create Disk Cache Directory",
      "ErrCode": "W40011",
      "ErrMessage": "Failed to create disk cache directory [%s]. Result: %s. Reason: %s.",
      "Arglist": "path,result,reason",
      "suggestion": {
        "Possible Cause": "You do not have the permission for the directory or the directory name is invalid.",
        "Solution": "Modify the permission or directory name and try again."
      }
    },
    {
      "errClass": "TEFusion Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "W40012",
      "ErrMessage": "Value [%s] for parameter [%s] is invalid. The value must be in the range of %s and defaults to [%s].",
      "Arglist": "invalid_value,argument,valid_range,default_value",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "TE Fusion Errors",
      "errTitle": "Invalid Environment Variable",
      "ErrCode": "E40001",
      "ErrMessage": "Value [%s] for environment variable [%s] is invalid when %s.",
      "Arglist": "value,env,situation",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Reset the environment variable by referring to the installation guide."
      }
    },
    {
      "errClass": "TE Fusion Errors",
      "errTitle": "Invalid Python Version",
      "ErrCode": "E40002",
      "ErrMessage": "The current Python version is [%s]. The system supports only [%s] or later.",
      "Arglist": "currentVersion,supportVersion",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "TE Fusion Errors",
      "errTitle": "Failed to Open JSON File",
      "ErrCode": "E40003",
      "ErrMessage": "Failed to open the JSON file: %s",
      "Arglist": "file_name",
      "suggestion": {
        "Possible Cause": "1. The file has been deleted.\n2. You do not have the permission to open the file.\n3. The file is locked.",
        "Solution": "Run your program again in a single-user environment(to ensure that no other user accesses the file)"
      }
    },
    {
      "errClass": " TEFusion Errors",
      "errTitle": "Failure to Import Python Module",
      "ErrCode": "E40020",
      "ErrMessage": "Failed to import Python module [%s] and Reason is [%s].",
      "Arglist": "result, reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check that all required components are properly installed and the specified Python path matches the Python installation directory. (If the path does not match the directory, run set_env.sh in the installation package.)"
      }
    },
    {
      "errClass": "TEFusion Errors",
      "errTitle": "Failure to Compile Op",
      "ErrCode": "E40021",
      "ErrMessage": "Failed to compile Op [%s]. (oppath: [%s], optype: [%s])",
      "Arglist": "op_name,opp_path,op_type",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "See the host log for details, and then check the Python stack where the error log is reported."
      }
    },
    {
      "errClass": "TEFusion Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "E40022",
      "ErrMessage": "Value [%s] for parameter [%s] is invalid. The value must be in the range of [%s].",
      "Arglist": "invalid_value,argument,valid_range ",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "TEFusion Errors",
      "errTitle": "Invalid Path",
      "ErrCode": "E40023",
      "ErrMessage": "Path [%s] for [%s] is invalid. Result: %s. Reason: %s.",
      "Arglist": "path,arg,result,reason",
      "suggestion": {
        "Possible Cause": "The path does not exist.",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "TEFusion Errors",
      "errTitle": "Call Python Func or Method Expection",
      "ErrCode": "E40024",
      "ErrMessage": "Failed call Python Func/Method [%s], Reason[%s] ",
      "Arglist": "func_name, reason",
      "suggestion": {
        "Possible Cause": "The Python Func/Method does not exist.",
        "Solution": "1.Check that the spelling of the invoked function is correct or the Python dependency library is installed.\n2.Set CANN environment variables.\n3.Reinstall the CANN package."
      }
    },
    {
      "errClass": "Vector Operator Plugin Errors",
      "errTitle": "ONNX Model Data Error",
      "ErrCode": "E76002",
      "ErrMessage": "No ONNX parser is registered for optype [%s].",
      "Arglist": "optype",
      "suggestion": {
        "Possible Cause": "No parser is registered for the optype in ONNX model conversion.",
        "Solution": "Submit an issue to request for support at https://gitee.com/ascend, or remove this type of operators from your model."
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "Remote Device Connection Failure",
      "ErrCode": "EC0000",
      "ErrMessage": "Failed to connect the remote device [IP: %s, Port: %s].",
      "Arglist": "ip,port",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1.Check the IP and port values in the config.json file in the ${install_path}/python/site-packages/auto_tune/estimate/python/ directory. 2.Check whether the remote device is normal."
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "Remote Device Login Failure",
      "ErrCode": "EC0001",
      "ErrMessage": "User [%s] failed to log in to the remote device.",
      "Arglist": "username",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check the username or password in the config.json file in the ${install_path}/python/site-packages/auto_tune/estimate/python/ directory."
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "Invalid NFS Mount Path",
      "ErrCode": "EC0002",
      "ErrMessage": "Remote mount path [%s] does not exist.",
      "Arglist": "mount_path",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid NFS mount path."
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "File Not Found",
      "ErrCode": "EC0003",
      "ErrMessage": "File [tss/bin/kernel_perf_comm] does not exist in remote mount path [%s].",
      "Arglist": "mount_path",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Autotune Errors",
      "errTitle": "Permission Denied",
      "ErrCode": "EC0004",
      "ErrMessage": "The permissions for tss/bin or tss/bin/kernel_perf_comm in the remote mount path[%s] are insufficient.",
      "Arglist": "mount_path",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check that the current user has the \"rwx\" permissions for tss/bin and tss/bin/kernel_perf_comm. 2. Check that the current user is the root user."
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "EC0005",
      "ErrMessage": "Value for parameter [--soc_version]  is invalid or the config.json is not set correctly.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "The SoC version does not match the device  or the config.json is not set correctly.",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "Directory Operation Failure",
      "ErrCode": "EC0006",
      "ErrMessage": "Directory operation failed. Reason: %s.",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "Invalid Environment Variable",
      "ErrCode": "EC0007",
      "ErrMessage": "The environment variable argument is invalid. Value [%s] for environment variable [%s] must be less than [%s].",
      "Arglist": "value,env,max_val",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "Invalid Environment Variable",
      "ErrCode": "EC0008",
      "ErrMessage": "Environment variable [%s] is not set. Use bash command [env] to check whether the environment variable is missing, and then use the [export] command to set it correctly.",
      "Arglist": "env_name",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "Resources Insufficient",
      "ErrCode": "EC0009",
      "ErrMessage": "Computing resources are insufficient. Reason: %s.",
      "Arglist": "err_detail",
      "suggestion": {
        "Possible Cause": "1. Memory resources are insufficient.\t2. The number of file handles exceeds the limit.",
        "Solution": "1. Check whether the memory usage reaches the upper limit.\t2. Check whether the file handle usage reaches the system limit."
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "Failure to Import Python Module",
      "ErrCode": "EC0010",
      "ErrMessage": "Failed to import Python module [%s].",
      "Arglist": "result",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check that all required components are properly installed and the specified Python path matches the Python installation directory. (If the path does not match the directory, run set_env.sh in the installation package.)"
      }
    },
    {
      "errClass": "Autotune Errors",
      "errTitle": "User Permission Denied",
      "ErrCode": "EC0011",
      "ErrMessage": "The permissions for current user in the custom strategy path[%s] are insufficient.",
      "Arglist": "custom_file_dir",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check that the current user has the \"rwx\" permissions in custom strategy file path or Check that the current user is the root user."
      }
    },
    {
      "errClass": "Auto Tune Errors",
      "errTitle": "Invalid Environment Variable",
      "ErrCode": "EC0012",
      "ErrMessage": "Value [%s] for environment variable [%s] is invalid.",
      "Arglist": "value,env",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Reset the environment variable by referring to the product documentation."
      }
    },
    {
      "errClass": "RLTune Errors",
      "errTitle": "Device Check Failure",
      "ErrCode": "ED0000",
      "ErrMessage": "Failed to obtain the basic information about the remote device.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check that the device is operating normally."
      }
    },
    {
      "errClass": "RLTune Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "ED0001",
      "ErrMessage": "Value [%s] for parameter [--soc_version] is invalid. Reason: The SoC version does not match device [%s].",
      "Arglist": "user_val, device_val",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "RLTune Errors",
      "errTitle": "Invalid Environment Variable",
      "ErrCode": "ED0002",
      "ErrMessage": "The environment variable argument is invalid. Value [%s] for environment variable [%s] must be less than [%s].",
      "Arglist": "value,env,max_val",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "RTS Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "EE1001",
      "ErrMessage": "The argument is invalid.Reason: %s",
      "Arglist": "extend_info",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1.Check the input parameter range of the function. 2.Check the function invocation relationship."
      }
    },
    {
      "errClass": "RTS Errors",
      "errTitle": "Stream synchronize timeout",
      "ErrCode": "EE1002",
      "ErrMessage": "Stream synchronize timeout. %s",
      "Arglist": "extend_info",
      "suggestion": {
        "Possible Cause": "1. The timeout interval may be improperly set.",
        "Solution": "1. Check whether the timeout interval is properly set. 2. Check whether the network is normal."
      }
    },
    {
      "errClass": "RTS Errors",
      "errTitle": "Model Binding Errors",
      "ErrCode": "EE4001",
      "ErrMessage": "Failed to bind the stream to the model. %s",
      "Arglist": "extend_info",
      "suggestion": {
        "Possible Cause": "The stream has been bound to another model.",
        "Solution": "Remove the repeated binding operation on the stream from the code."
      }
    },
    {
      "errClass": "RTS Errors",
      "errTitle": "Model Unbinding Errors",
      "ErrCode": "EE4002",
      "ErrMessage": "Failed to unbind the stream to the model. %s",
      "Arglist": "extend_info",
      "suggestion": {
        "Possible Cause": "1.The stream to be unbound is not bound to the model.   2.The model is running.",
        "Solution": "1.Check the code to ensure that the stream to be unbound is bound to the model.    2.Ensure that the model is not running."
      }
    },
    {
      "errClass": "RTS Errors",
      "errTitle": "Profiling Enable Errors",
      "ErrCode": "EE4004",
      "ErrMessage": "Failed to enable profiling.  %s",
      "Arglist": "extend_info",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Do not enable profiling repeatedly."
      }
    },
    {
      "errClass": "LxFusion Errors",
      "errTitle": "Invalid Directory",
      "ErrCode": "EF0000",
      "ErrMessage": "Failed to open the directory where repository file [%s] is located with read, write and execute permissions.",
      "Arglist": "filepath",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check the existence and permissions of the directory. If the directory does not exist, create one with read, write and execute permissions."
      }
    },
    {
      "errClass": "LxFusion Errors",
      "errTitle": "Invalid SoC Version",
      "ErrCode": "EF0001",
      "ErrMessage": "soc_version [%s] is invalid. AOE SGAT is not supported on current platform.",
      "Arglist": "version",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "LxFusion Errors",
      "errTitle": "Invalid Config Value",
      "ErrCode": "WF0001",
      "ErrMessage": "Value [%s] for key [%s] is invalid. The value must be in the range of [%s]",
      "Arglist": "value,key,value_str",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "LxFusion Errors",
      "errTitle": "Invalid Environment Variable",
      "ErrCode": "EF0003",
      "ErrMessage": "The environment variable argument is invalid. Value [%s] for environment variable [%s] must be [%s]",
      "Arglist": "value,env,value_str",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "LxFusion Errors",
      "errTitle": "File Read Failure",
      "ErrCode": "WF0000",
      "ErrMessage": "Failed to open config file [%s]",
      "Arglist": "filepath",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check whether the config file exists according to the file path, whether the file is in Json format, and whether the user has the read permission."
      }
    },
    {
      "errClass": "LxFusion Errors",
      "errTitle": "Model Performance Not Optimal",
      "ErrCode": "WF0002",
      "ErrMessage": "Model performance may not be optimal due to changes in UB fusion.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Re-tune the subgraphs with AOE SGAT."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Invalid Hierarchical Machine Configuration",
      "ErrCode": "EF1001",
      "ErrMessage": "Configuration format %s is incorrect.",
      "Arglist": "hierarchical_machine_cfg_str",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Set the environment variable or resource file correctly."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Repository File Not Exist",
      "ErrCode": "EF1002",
      "ErrMessage": "Repository file %s does not exist.",
      "Arglist": "repo_file_path",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Repository File Format Incorrect",
      "ErrCode": "EF1003",
      "ErrMessage": "The repository file format is incorrect.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "The original repository file has been replaced by a file with a different format.",
        "Solution": "Make sure the format of the repository file is the same as that of the original repository file in the installed CANN compiler package."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Fused Optimizer Operator Partition Failure",
      "ErrCode": "EF1004",
      "ErrMessage": "Failed when processing node %s (%s), which should be connected with Variable or VariableV2.",
      "Arglist": "node_name,node_type",
      "suggestion": {
        "Possible Cause": "The input graph is incorrect.",
        "Solution": "Pass a correct graph."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "pulp Module Import Failure",
      "ErrCode": "EF1005",
      "ErrMessage": "Failed to import the pulp module.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Install the pulp module before running AutoDeploy."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "coin-or-cbc Not Installed or Correctly Configured",
      "ErrCode": "EF1006",
      "ErrMessage": "coin-or-cbc is not installed or correctly configured.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Perform operations by referring to the AutoDeploy user guide."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Python Environment Failure",
      "ErrCode": "EF1007",
      "ErrMessage": "Failed to call Python.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Python is incorrectly installed or its path is incorrectly configured.",
        "Solution": "Recompile and install Python."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Dynamic Shape Not Supported",
      "ErrCode": "EF1008",
      "ErrMessage": "Dynamic shape is not allowed in computation graphs.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Invalid Slice Number for a Node",
      "ErrCode": "EF1009",
      "ErrMessage": "The slice number %s that you set for node %s (%s) is invalid.",
      "Arglist": "slice_num,node_name,node_type",
      "suggestion": {
        "Possible Cause": "An invalid character string is set as the slice number for the node.",
        "Solution": "Set the slice number to a positive integer, or do not set the slice number at all, in which case the default slice number will be used."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Multiple Slice Numbers Set for a Node Scope",
      "ErrCode": "EF1010",
      "ErrMessage": "Inconsistent custom slice numbers have been found in scope %s, for example %s and %s.",
      "Arglist": "scope_name, slice_num1, slice_num2",
      "suggestion": {
        "Possible Cause": "Multiple slice numbers are set for a node scope to be sliced.",
        "Solution": "Set the expected slice number for only one node in the scope, or do not set the slice number at all, in which case the default slice number will be used."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Unsupported Attribute for a Node",
      "ErrCode": "EF1011",
      "ErrMessage": "The attribute _process_node_engine_id marked as %s for node %s (%s) is invalid.",
      "Arglist": "process_node_engine_id, node_name, node_type",
      "suggestion": {
        "Possible Cause": "The attribute _process_node_engine_id is marked with value other than 'NPU' for the node.",
        "Solution": "Unset the attribute _process_node_engine_id in the compute graph or set the value to 'NPU'."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Invalid Graph Parallel Option Configuration",
      "ErrCode": "EF1012",
      "ErrMessage": "Configuration of graph parallel option is incorrect.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Tensor parallel size or data parallel size is incorrect.",
        "Solution": "Make sure the options in graph_parallel_option.json are correct: 1. If both tensor_parallel_option and data_parallel_option are set, the total parallel size (i.e. tensor_parallel_size * data_parallel_size) must equal the total device num in numa_config.json; 2. If only either tensor_parallel_option or data_parallel_option is set, the tensor_parallel_size or data_parallel_size must equal the total device num in numa_config,json."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Invalid Optimize Shape Format",
      "ErrCode": "EF1013",
      "ErrMessage": "Optimize shape format %s is incorrect.",
      "Arglist": "opt_shape_str",
      "suggestion": {
        "Possible Cause": "The format of ge.exec.dataInputsOptimizeShape is incorrect.",
        "Solution": "Make sure the format of ge.exec.dataInputsOptimizeShape is correct. For example, ge.exec.dataInputsOptimizeShape='input0:[100,16];input1:[100,100,16];input2:[100,100,16]'"
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Incorrect Value of the mode Argument",
      "ErrCode": "EF1014",
      "ErrMessage": "The Session::ShardGraphs API does not support the mode argument %s in the configuration file specified by the ge.graphParallelOptionPath parameter.",
      "Arglist": "mode",
      "suggestion": {
        "Possible Cause": "The mode argument is incorrectly set.",
        "Solution": "When calling the Session::ShardGraphs API, set the mode argument correctly by referring to the document."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Incorrect Value of the mode Argument",
      "ErrCode": "EF1015",
      "ErrMessage": "The Session::RunGraph API does not support the mode argument %s in the configuration file specified by the ge.graphParallelOptionPath parameter.",
      "Arglist": "mode",
      "suggestion": {
        "Possible Cause": "The mode argument is incorrectly set.",
        "Solution": "When calling the Session::RunGraph API, set the mode argument correctly by referring to the document."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Failed to Create the Directory",
      "ErrCode": "EF1016",
      "ErrMessage": "Failed to create the %s directory.",
      "Arglist": "dir",
      "suggestion": {
        "Possible Cause": "The directory has no write permission.",
        "Solution": "Make sure the directory has the write permission."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Unset Working Directory Argument",
      "ErrCode": "EF1017",
      "ErrMessage": "The working directory argument is not set.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "The working directory argument is not set.",
        "Solution": "Before loading the strategy, set the working directory argument."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Strategy File Error",
      "ErrCode": "EF1018",
      "ErrMessage": "The strategy file %s has an error. Cause: %s",
      "Arglist": "strategy_file, detailed_reason",
      "suggestion": {
        "Possible Cause": "See the details in the error message.",
        "Solution": "See the solution in the error message."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Device Mesh Error",
      "ErrCode": "EF1019",
      "ErrMessage": "The device mesh (%s) set during strategy loading is inconsistent with device mesh (%s) in the strategy file.",
      "Arglist": "device_mesh, org_device_mesh",
      "suggestion": {
        "Possible Cause": "The device mesh set during strategy loading has an error.",
        "Solution": "Make sure the device mesh set during strategy loading is consistent with that in the strategy file."
      }
    },
    {
      "errClass": "AutoDeploy Errors",
      "errTitle": "Offload Under a Non-SPMD Scenario Not Supported",
      "ErrCode": "EF1020",
      "ErrMessage": "Cannot apply offload under a non-SPMD deploy mode. The current deploy mode is (%s).",
      "Arglist": "deploy_mode",
      "suggestion": {
        "Possible Cause": "Offload is enabled but the deploy mode is not SPMD.",
        "Solution": "Disable offload or set the deploy mode to SPMD."
      }
    },
    {
      "errClass": "MdatDeploy Errors",
      "errTitle": "Invalid Numa Configuration",
      "ErrCode": "EF2001",
      "ErrMessage": "Numa Configuration is incorrect.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Invalid format in numa_config.json",
        "Solution": "Set the environment variable or resource file correctly."
      }
    },
    {
      "errClass": "MdatDeploy Errors",
      "errTitle": "Invalid Graph Parallel Option Configuration",
      "ErrCode": "EF2002",
      "ErrMessage": "Configuration of graph parallel option is incorrect.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Tensor parallel size or data parallel size is incorrect.",
        "Solution": "Make sure the options in graph_parallel_option.json are correct: 1. If both tensor_parallel_option and data_parallel_option are set, the total parallel size (i.e. tensor_parallel_size * data_parallel_size) must equal the total device num in numa_config.json; 2. If only either tensor_parallel_option or data_parallel_option is set, the tensor_parallel_size or data_parallel_size must equal the total device num in numa_config.json."
      }
    },
    {
      "errClass": "MdatDeploy Errors",
      "errTitle": "Dynamic Shape Not Supported",
      "ErrCode": "EF2003",
      "ErrMessage": "Dynamic shape is not allowed in computation graphs.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Graph contains operations with dynamic shape, which is not supported.",
        "Solution": "Graph contains operations with dynamic shape, which is not supported by MDAT."
      }
    },
    {
      "errClass": "MdatDeploy Errors",
      "errTitle": "Invalid Slice Number for a Node",
      "ErrCode": "EF2004",
      "ErrMessage": "The slice number %s that you set for node %s (%s) is invalid.",
      "Arglist": "slice_num,node_name,node_type",
      "suggestion": {
        "Possible Cause": "An invalid character string is set as the slice number for the node.",
        "Solution": "Set the slice number to a positive integer, or do not set the slice number at all, in which case the default slice number will be used."
      }
    },
    {
      "errClass": "MdatDeploy Errors",
      "errTitle": "Unsupported Attribute for a Node",
      "ErrCode": "EF2005",
      "ErrMessage": "The attribute _process_node_engine_id marked as %s for node %s (%s) is invalid.",
      "Arglist": "process_node_engine_id, node_name, node_type",
      "suggestion": {
        "Possible Cause": "The attribute _process_node_engine_id is marked with value other than 'NPU' for the node.",
        "Solution": "Unset the attribute _process_node_engine_id in the compute graph or set the value to 'NPU'."
      }
    },
    {
      "errClass": "MdatDeploy Errors",
      "errTitle": "Invalid Memory Budget for Recompute",
      "ErrCode": "EF2006",
      "ErrMessage": "The memory budget for recompute is %s, not larger than zero.",
      "Arglist": "memory_budget",
      "suggestion": {
        "Possible Cause": "The memory budget for recompute is not larger than zero.",
        "Solution": "The memory budget for recompute must larger than zero."
      }
    },
    {
      "errClass": "MdatDeploy Errors",
      "errTitle": "Invalid GE graph",
      "ErrCode": "EF2007",
      "ErrMessage": "Invalid GE graph.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "The input GE graph may have folowing problems: 1. graph is cyclic; 2. missing some necessary op info and etc.",
        "Solution": "Make sure the input ge graph is correct and have compelet information."
      }
    },
    {
      "errClass": "MdatDeploy Errors",
      "errTitle": "Graph Pattern Matching Failed",
      "ErrCode": "EF2008",
      "ErrMessage": "Graph pattern with [%s] matching failed.",
      "Arglist": "pattern",
      "suggestion": {
        "Possible Cause": "The input graph may not meet the specific pattern.",
        "Solution": "Make sure the input graph is correct and have specific pattern."
      }
    },
    {
      "errClass": "DVPP Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "EN0001",
      "ErrMessage": "Value [%s] for [%s] is invalid. Reason: %s.",
      "Arglist": "value,param,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "DVPP Errors",
      "errTitle": "Some Argument Invalid",
      "ErrCode": "EN0002",
      "ErrMessage": "Some argument is invalid. See the %s API description in AscendCL API Reference.",
      "Arglist": "functionname",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "DVPP Errors",
      "errTitle": "Null Pointer",
      "ErrCode": "EN0003",
      "ErrMessage": "Argument [%s] is null.",
      "Arglist": "param",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a correct pointer argument."
      }
    },
    {
      "errClass": "DVPP Errors",
      "errTitle": "Unsupported Feature",
      "ErrCode": "EN0004",
      "ErrMessage": "The operation is not supported. Reason: %s.",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "DVPP Errors",
      "errTitle": "Channel Resource Error",
      "ErrCode": "EN0005",
      "ErrMessage": "An error occurred on channel resource %s. Reason: %s.",
      "Arglist": "channel,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check the input channel ID or the number of created channels."
      }
    },
    {
      "errClass": "DVPP Errors",
      "errTitle": "Memory Address Error",
      "ErrCode": "EN0006",
      "ErrMessage": "The passed memory address is incorrect.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Use the hi_mpi_dvpp_malloc API to allocate memory."
      }
    },
    {
      "errClass": "DVPP Errors",
      "errTitle": "Operation Timeout",
      "ErrCode": "EN0007",
      "ErrMessage": "%s times out. Reason: %s.",
      "Arglist": "operation,reason",
      "suggestion": {
        "Possible Cause": "1. The input timeout interval is improper; 2. The buffer is full; 3. An internal error occurred.",
        "Solution": "Set the timeout interval to a proper value."
      }
    },
    {
      "errClass": "DVPP Errors",
      "errTitle": "Unsupported JPEG File",
      "ErrCode": "EN0008",
      "ErrMessage": "The input JPEG image is not supported. Reason: %s.",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "DVPP Errors",
      "errTitle": "Unsupported PNG File",
      "ErrCode": "EN0009",
      "ErrMessage": "The input PNG image is not supported. Reason: %s.",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "ACL Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "EH0001",
      "ErrMessage": "Value [%s] for [%s] is invalid. Reason: %s.",
      "Arglist": "value,param,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "ACL Errors",
      "errTitle": "Null Pointer",
      "ErrCode": "EH0002",
      "ErrMessage": "Argument [%s] must not be null.",
      "Arglist": "param",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a correct pointer argument."
      }
    },
    {
      "errClass": "ACL Errors",
      "errTitle": "Invalid Path",
      "ErrCode": "EH0003",
      "ErrMessage": "Path [%s] is invalid. Reason: %s.",
      "Arglist": "path,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "ACL Errors",
      "errTitle": "Invalid File",
      "ErrCode": "EH0004",
      "ErrMessage": "File [%s] is invalid. Reason: %s.",
      "Arglist": "path,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "ACL Errors",
      "errTitle": "Invalid AIPP Argument",
      "ErrCode": "EH0005",
      "ErrMessage": "AIPP argument [%s] is invalid. Reason: %s.",
      "Arglist": "param,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "ACL Errors",
      "errTitle": "Unsupported Feature",
      "ErrCode": "EH0006",
      "ErrMessage": "%s is not supported. Reason: %s.",
      "Arglist": "feature, reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "HCCL Errors",
      "errTitle": "Invalid Environment Variable Configuration",
      "ErrCode": "EI0001",
      "ErrMessage": "Environment variable [%s] is invalid. Reason: %s.",
      "Arglist": "env,tips",
      "suggestion": {
        "Possible Cause": "The environment variable configuration is invalid.",
        "Solution": "Try again with valid environment variable configuration."
      }
    },
    {
      "errClass": "HCCL Errors",
      "errTitle": " Communication Operation  Timeout",
      "ErrCode": "EI0002",
      "ErrMessage": "The wait execution of the Notify register times out. Reason: The Notify register has not received the Notify record from remote rank: [%s]. base information: [%s]. task information: [%s]. group information: [%s]",
      "Arglist": "remote_rankid, base_information, task_information, group_rank_content",
      "suggestion": {
        "Possible Cause": "1. An exception occurs during the execution on some NPUs in the cluster. As a result, collective communication operation failed.2. The execution speed on some NPU in the cluster is too slow to complete a communication operation within the timeout interval. (default 1800s, You can set the interval by using HCCL_EXEC_TIMEOUT.)3. The number of training samples of each NPU is inconsistent.4. Packet loss or other connectivity problems occur on the communication link.",
        "Solution": "1. If this error is reported on part of these ranks, check other ranks to see whether other errors have been reported earlier.2. If this error is reported for all ranks, check whether the error reporting time is consistent (the maximum difference must not exceed 1800s). If not, locate the cause or adjust the locate the cause or set the HCCL_EXEC_TIMEOUT environment variable to a larger value.3. Check whether the completion queue element (CQE) of the error exists in the plog(grep -rn 'error cqe'). If so, check the network connection status. 4. Ensure that the number of training samples of each NPU is consistent."
      }
    },
    {
      "errClass": "HCCL Errors",
      "errTitle": "Invalid Collective Communication Op Argument",
      "ErrCode": "EI0003",
      "ErrMessage": "In [%s], value [%s] for parameter [%s] is invalid. Reason: The collective communication operator has an invalid argument. Reason[%s]",
      "Arglist": "ccl_op,value,parameter,value",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid argument."
      }
    },
    {
      "errClass": "HCCL Errors",
      "errTitle": "Invalid Ranktable Configuration",
      "ErrCode": "EI0004",
      "ErrMessage": "The ranktable or rank is invalid,Reason:[%s]. Please check the configured ranktable. [%s]",
      "Arglist": "error_reason,ranktable_path",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid cluster configuration in the ranktable file. Ensure that the configuration matches the operating environment."
      }
    },
    {
      "errClass": "HCCL Errors ",
      "errTitle": "Inconsistent Collective Communication Arguments Between Ranks",
      "ErrCode": "EI0005",
      "ErrMessage": "The arguments for collective communication are inconsistent between ranks: tag [%s], parameter [%s], local [%s], remote [%s]",
      "Arglist": "tag,para_name,local_para,remote_para",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check whether the training script and ranktable of each NPU are consistent."
      }
    },
    {
      "errClass": "HCCL Errors",
      "errTitle": "Get Socket Timeout",
      "ErrCode": "EI0006",
      "ErrMessage": "Getting socket times out. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check the rank service processes with other errors or no errors in the cluster.2. If this error is reported for all NPUs, check whether the time difference between the earliest and latest errors is greater than the connect timeout interval (120s by default). If so, adjust the timeout interval by using the HCCL_CONNECT_TIMEOUT environment variable.3. Check the connectivity of the communication link between nodes. (For example, run the 'hccn_tool -i $devid -tls -g' command to check the TLS status of each NPU)."
       }
     },
    {
      "errClass": "HCCL Errors",
      "errTitle": "Allocation Failure",
      "ErrCode": "EI0007",
      "ErrMessage": "Failed to allocate resource[%s] with info [%s]. Reason: Memory resources are exhausted.",
      "Arglist": "resource_type, resource_info",
      "suggestion": {
        "Possible Cause": "Failed to allocate memory or the Notify register due to resource insufficiency.",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "HCCL Errors",
      "errTitle": "Inconsistent CANN Versions",
      "ErrCode": "EI0008",
      "ErrMessage": "The CANN versions are inconsistent: tag [%s], local_version [%s], remote_version [%s]",
      "Arglist": "tag,local_version,remote_version",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Install the same CANN version."
      }
    },
    {
      "errClass": "HCCL Errors",
      "errTitle": "Transport Init Error",
      "ErrCode": "EI0009",
      "ErrMessage": "Transport init error. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Check other NPUs that are not reporting errors, or check if there are any abnormalities on the other end's NPU."
      }
    },
    {
      "errClass": "HCCL Errors",
      "errTitle": "P2P Communication Failed",
      "ErrCode": "EI0010",
      "ErrMessage": "P2P communication failed. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Ensure that the NPU card is normal and entering environment variables 'export HCCL_INTRA_ROCE_ENABLE=1'."
      }
    },
    {
      "errClass": "HCCP Errors",
      "errTitle": "HCCP Process Initialization Failure",
      "ErrCode": "EJ0001",
      "ErrMessage": "Failed to initialize the HCCP process. Reason: Maybe the last training process is running.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Wait for 10s after killing the last training process and try again."
      }
    },
    {
      "errClass": "HCCP Errors",
      "errTitle": "Environment Error",
      "ErrCode": "EJ0002",
      "ErrMessage": "The network port is down.Suggest: %s",
      "Arglist": "suggest",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "HCCP Errors",
      "errTitle": "Bind Failed",
      "ErrCode": "EJ0003",
      "ErrMessage": "Failed to bind the IP port. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "HCCP Errors",
      "errTitle": "Check Ip Failed",
      "ErrCode": "EJ0004",
      "ErrMessage": "Check ip fail. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Profiling Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "EK0001",
      "ErrMessage": "Value [%s] for [%s] is invalid. Reason: %s.",
      "Arglist": "value,param,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Profiling Errors",
      "errTitle": "Interface Call Sequence Error",
      "ErrCode": "EK0002",
      "ErrMessage": "Failed to call %s before calling %s.",
      "Arglist": "intf1,intf2",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Profiling Errors",
      "errTitle": "Profiling Config Setting Error",
      "ErrCode": "EK0003",
      "ErrMessage": "Failed to set the %s to [%s]. Reason: %s.",
      "Arglist": "config,value,reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Profiling Errors",
      "errTitle": "API Support Error",
      "ErrCode": "EK0004",
      "ErrMessage": "[%s] is not supported in %s.",
      "Arglist": "intf,platform",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Profiling Errors",
      "errTitle": "Memory Allocation Error",
      "ErrCode": "EK0201",
      "ErrMessage": "Failed to allocate host memory for Profiling: %s.",
      "Arglist": "buf_size",
      "suggestion": {
        "Possible Cause": "Available memory is insufficient.",
        "Solution": "Close unused applications."
      }
    },
    {
      "errClass": "Profiling Errors",
      "errTitle": "System Terminated",
      "ErrCode": "EK9999",
      "ErrMessage": "An unknown error occurred. Please check the log.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Device Absent/Abnormal",
      "ErrCode": "EL0001",
      "ErrMessage": "Device not found.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Invalid Device ID",
      "ErrCode": "EL0002",
      "ErrMessage": "The device ID is invalid.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Invalid Argument",
      "ErrCode": "EL0003",
      "ErrMessage": "The argument is invalid.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Try again with a valid argument."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Memory Allocation Failure",
      "ErrCode": "EL0004",
      "ErrMessage": "Failed to allocate memory.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Available memory is insufficient.",
        "Solution": "Close applications not in use."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Resource Busy",
      "ErrCode": "EL0005",
      "ErrMessage": "The resources are busy.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "1. The resources have been occupied. 2. The device is being reset. 3. Software is not ready.",
        "Solution": "1. Close applications not in use. 2. Wait for a while and try again."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Insufficient Resources",
      "ErrCode": "EL0006",
      "ErrMessage": "The resources are insufficient.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Close applications not in use."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "No Permission",
      "ErrCode": "EL0007",
      "ErrMessage": "You have no permission.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "1. The resources have been occupied. 2. You have no permission on this API.",
        "Solution": "1. Close applications not in use. 2. Check that you have the required permission."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Insufficient Event Resources",
      "ErrCode": "EL0008",
      "ErrMessage": "The event resources are insufficient.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Close applications not in use."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Insufficient Stream Resources",
      "ErrCode": "EL0009",
      "ErrMessage": "The stream resources are insufficient.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Close applications not in use."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Insufficient Notify Resources",
      "ErrCode": "EL0010",
      "ErrMessage": "The Notify resources are insufficient.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Close applications not in use."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Insufficient Model Resources",
      "ErrCode": "EL0011",
      "ErrMessage": "The model resources are insufficient.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Close applications not in use."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Full Service Queue",
      "ErrCode": "EL0012",
      "ErrMessage": "The service queue is full.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Available resources are insufficient due to busy services.",
        "Solution": "Reduce service loads."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Insufficient CDQM Resources",
      "ErrCode": "EL0013",
      "ErrMessage": "The CDQM resources are insufficient.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "Available resources are insufficient due to busy services.",
        "Solution": "Reduce service loads."
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Operation Unsupported",
      "ErrCode": "EL0014",
      "ErrMessage": "The operation is unsupported.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Driver Errors",
      "errTitle": "Invalid Device Access",
      "ErrCode": "EL0015",
      "ErrMessage": "The device access is invalid.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "1. The device has been bound to another container. 2. You have no permission on this device.",
        "Solution": "1. Check your configurations. 2. Check whether there are residual container processes."
      }
    },
    {
      "errClass": "AMCT Errors",
      "errTitle": "Invalid compression_optimize_conf Value",
      "ErrCode": "EO0001",
      "ErrMessage": "The compression configuration value is invalid. Reason: %s.",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "AMCT Errors",
      "errTitle": "Invalid compression_optimize_conf Path",
      "ErrCode": "EO0002",
      "ErrMessage": "The compression configuration path is invalid. Reason: %s.",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "AMCT Errors",
      "errTitle": "Invalid Model",
      "ErrCode": "EO0003",
      "ErrMessage": "The model is invalid. Reason: %s.",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "AMCT Errors",
      "errTitle": "Command Error",
      "ErrCode": "EO0004",
      "ErrMessage": "The command is invalid. Reason: %s.",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "AMCT Errors",
      "errTitle": "System Terminated",
      "ErrCode": "EO9999",
      "ErrMessage": "An unknown error occurred. Please check the log.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "Queue Schedule Errors",
      "errTitle": "Group Attaching Failure",
      "ErrCode": "EM9001",
      "ErrMessage": "Failed to attach the queue_schedule process to the group.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Submit an issue to request for support at https://gitee.com/ascend or contact Huawei technical support."
      }
    },
    {
      "errClass": "Queue Schedule Errors",
      "errTitle": "Queue_Schedule Initialization Failure",
      "ErrCode": "EM9002",
      "ErrMessage": "Failed to initialize the queue_schedule process.",
      "Arglist": "",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "Submit an issue to request for support at https://gitee.com/ascend or contact Huawei technical support."
      }
    },
    {
      "errClass": "Public Operator Errors",
      "errTitle": "Unsupported Operator",
      "ErrCode": "EZ0501",
      "ErrMessage": "IR for Op [%s, optype [%s]], is not registered.",
      "Arglist": "opname,optype",
      "suggestion": {
        "Possible Cause": "IR for the operator type is not registered.",
        "Solution": "Submit an issue to request for support at https://gitee.com/ascend, or remove this type of operators from your model."
      }
    },
    {
      "errClass": "Public Operator Errors",
      "errTitle": "Unsupported Operator",
      "ErrCode": "EZ3002",
      "ErrMessage": "Optype [%s] of Ops kernel [%s] is unsupported. Reason: %s.",
      "Arglist": "optype,opskernel,reason",
      "suggestion": {
        "Possible Cause": "The operator type is unsupported in the operator information library due to specification mismatch.",
        "Solution": "Submit an issue to request for support at https://gitee.com/ascend, or remove this type of operators from your model."
      }
    },
    {
      "errClass": "Public Operator Errors",
      "errTitle": "Unsupported Operator",
      "ErrCode": "EZ3003",
      "ErrMessage": "No supported Ops kernel and engine are found for [%s], optype [%s].",
      "Arglist": "opname,optype",
      "suggestion": {
        "Possible Cause": "The operator is not supported by the system. Therefore, no hit is found in any operator information library.",
        "Solution": "1. Check that the OPP component is installed properly. 2. Submit an issue to request for the support of this operator type."
      }
    },
    {
      "errClass": "Public Operator Errors",
      "errTitle": "Unsupported Operator",
      "ErrCode": "EZ9010",
      "ErrMessage": "No parser is registered for Op [%s, optype [%s]].",
      "Arglist": "opname,optype",
      "suggestion": {
        "Possible Cause": "No parser is registered for the operator type.",
        "Solution": "Submit an issue to request for support at https://gitee.com/ascend."
      }
    },
    {
      "ErrCode": "E50000",
      "ErrMessage": "The op [%s] missing [%s] parameter",
      "Arglist": "op_name, param_name"
    },
    {
      "ErrCode": "E50001",
      "ErrMessage": "The length of input [%s] of [%s] op needs to be %s, but the length is [%s]",
      "Arglist": "param,op_name,expected_length, length"
    },
    {
      "ErrCode": "E50002",
      "ErrMessage": "The  format of input [%s] of [%s] op needs to be [%s], but incoming format is [%s]",
      "Arglist": "param,op_name,expected_format_list,format"
    },
    {
      "ErrCode": "E50003",
      "ErrMessage": "The data type of input [%s] of [%s] op needs to be [%s], but incoming data type is [%s]",
      "Arglist": "param,op_name,expected_data_type_list,data_type"
    },
    {
      "ErrCode": "E50004",
      "ErrMessage": "1.The op [%s] input [%s] data type is [%s], but input [%s] data type is [%s], They must meet the rule [%s]",
      "Arglist": "op_name,param1,param1_data_type,param2,param2_data_type,rule"
    },
    {
      "ErrCode": "E50009",
      "ErrMessage": "1.The op [%s] has rule: [%s], but input [%s] shape is [%s]",
      "Arglist": "op_name, rule_desc,param_name, param_shape"
    },
    {
      "ErrCode": "E50012",
      "ErrMessage": "The [%s] op has rule: %s, but [%s] is [%s]",
      "Arglist": "op_name,rule_desc,param_name, param_value"
    },
    {
      "ErrCode": "E50029",
      "ErrMessage": "The op[%s] input parameter[%s] should be [%s], actual the input is [%s]",
      "Arglist": "op_name,param_name,expected_value,input_value"
    },
    {
      "ErrCode": "E50030",
      "ErrMessage": "The op[%s] required input parameter[%s] must exist.",
      "Arglist": "op_name,param_name"
    },
    {
      "ErrCode": "E50031",
      "ErrMessage": "In op[%s], the [%s] of [%s] and [%s] must be same, actual the [%s] of [%s] is [%s] and the [%s] of [%s] is [%s]",
      "Arglist": "op_name,attr_name,param1_name,param2_name,attr_name,param1_name,param1_value,attr_name,param2_name,param2_value"
    },
    {
      "ErrCode": "E50032",
      "ErrMessage": "When dtype of a is [%s], the op[%s] out dtype must in [%s], actual out dtype is [%s]",
      "Arglist": "a_dtype,op_name,expected_dtype_list,out_dtype"
    },
    {
      "ErrCode": "E50033",
      "ErrMessage": "The format of [%s] of op[%s] must in [%s], actual format is [%s]",
      "Arglist": "param_name,op_name,expected_format_list,format"
    },
    {
      "ErrCode": "E50034",
      "ErrMessage": "The dtype of [%s] of op[%s] must in [%s], actual dtype is [%s]",
      "Arglist": "param_name,op_name,expected_dtype_list,dtype"
    },
    {
      "ErrCode": "E50035",
      "ErrMessage": "In op[%s], the dim of [%s] must be [%s], actual input is [%s]",
      "Arglist": "op_name,param_name,expected_length,length"
    },
    {
      "ErrCode": "E50036",
      "ErrMessage": "When the shape of a is [%s] and the shape of b is [%s], the shape of c of op [%s] must be [%s], actual input is [%s]",
      "Arglist": "a_shape,b_shape,op_name, expected_shape,shape"
    },
    {
      "ErrCode": "E50037",
      "ErrMessage": "The format of [%s] of op[%s] must in [%s], actual format is [%s]",
      "Arglist": "param_name,op_name, expected_format_list,format"
    },
    {
      "ErrCode": "E50038",
      "ErrMessage": "In op [%s], the 1d value of shape a should be equal to 0d value of shape b, actual input are [%s] and [%s]",
      "Arglist": "op_name,a_1d,b_0d"
    },
    {
      "ErrCode": "E50039",
      "ErrMessage": "In op[%s], the channel of x should be equal to  filter's, actual input are [%s] and [%s]",
      "Arglist": "op_name,channel_of_x,channel_of_filter"
    },
    {
      "ErrCode": "E50040",
      "ErrMessage": "In op[%s], the [%s] must in range [%s], actual is [%s]",
      "Arglist": "op_name,range,attr_name,value"
    },
    {
      "ErrCode": "E50041",
      "ErrMessage": "In op[%s], the depth of feature map after padding can not be less than shape_filter's, actual are [%s] and [%s]",
      "Arglist": "op_name,depth_of_x,depth_of_filter"
    },
    {
      "ErrCode": "E50042",
      "ErrMessage": "In op[%s], the depth of pad can not be less than shape_filter's, actual are [%s] and [%s]",
      "Arglist": "op_name,depth_of_pad,depth_of_filter"
    },
    {
      "ErrCode": "E50043",
      "ErrMessage": "In op[%s], x H(after pad) must >= filter H, actual are [%s] and [%s]",
      "Arglist": "op_name,h_of_x,h_of_filter"
    },
    {
      "ErrCode": "E50044",
      "ErrMessage": "In op[%s], x W(after pad) must >= filter W, actual are [%s] and [%s]",
      "Arglist": "op_name,w_of_x,w_of_filter"
    },
    {
      "ErrCode": "E50045",
      "ErrMessage": "In op[%s],filter H must > Pad H, actual are [%s] and [%s]",
      "Arglist": "op_name,h_of_filter,h_of_pad"
    },
    {
      "ErrCode": "E50046",
      "ErrMessage": "In op[%s],filter W must > Pad W, actual are [%s] and [%s]",
      "Arglist": "op_name,w_of_filter,w_of_pad"
    },
    {
      "ErrCode": "E50047",
      "ErrMessage": "In op[%s], x W(after pad) must >= stride W, actual are [%s] and [%s]",
      "Arglist": "op_name,w_of_x,w_of_filter"
    },
    {
      "ErrCode": "E50048",
      "ErrMessage": "In op[%s], x W(after pad) must >= stride W, actual are [%s] and [%s]",
      "Arglist": "op_name,w_of_x,w_of_stride"
    },
    {
      "ErrCode": "E50049",
      "ErrMessage": "In op[%s], [%s] exceed 64 bit limitations",
      "Arglist": "op_name,attr_name"
    },
    {
      "ErrCode": "E50050",
      "ErrMessage": "In op [%s], only support pads model [%s], actual is [%s]",
      "Arglist": "op_name,expected_pad_mode,actual_pad_mode"
    },
    {
      "ErrCode": "E50051",
      "ErrMessage": "In op[%s], Invalid input size due to large kernel size and stride",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E50052",
      "ErrMessage": "In op[%s], Dilations in the batch and depth dimensions must be 1,actual are [%s] and [%s].",
      "Arglist": "op_name,dilation_n,dilation_c"
    },
    {
      "ErrCode": "E50053",
      "ErrMessage": "In op[%s], Shape error : The compute result of H under convolution rule cannot match",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E50054",
      "ErrMessage": "In op[%s], Shape error : The compute result of W under convolution rule cannot match",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E50055",
      "ErrMessage": "In op[%s], Input is too large, the minimum tiling may exceed L1_Buffer",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E50056",
      "ErrMessage": "In V200 op[%s],dilation_h and dilation_w must be 1,actual are [%s] and  [%s]",
      "Arglist": "op_name,dilation_h,dilation_w"
    },
    {
      "ErrCode": "E50057",
      "ErrMessage": "In op [%s], set either [%s] or [%s], not both",
      "Arglist": "op_name,param1_name,param2_name"
    },
    {
      "ErrCode": "E50058",
      "ErrMessage": "In op [%s], [%s]",
      "Arglist": "op_name,description"
    },
    {
      "ErrCode": "E50059",
      "ErrMessage": "In op[%s], x channel should be equal to filter channel*groups, x shape is: [%s], filter shape is: [%s], groups is: [%s]",
      "Arglist": "op_name,x_shape,filter_shape,groups"
    },
    {
      "ErrCode": "E50060",
      "ErrMessage": "In op [%s], [%s]",
      "Arglist": "op_name,description"
    },
    {
      "ErrCode": "E60000",
      "ErrMessage": "The op[%s] input parameter[%s] should be [%s], actual the input is [%s]",
      "Arglist": "op_name,param_name,expected_value,input_value"
    },
    {
      "ErrCode": "E60001",
      "ErrMessage": "The op[%s] required input parameter[%s] must exist.",
      "Arglist": "op_name,param_name"
    },
    {
      "ErrCode": "E60002",
      "ErrMessage": "In op[%s], the [%s] of [%s] and [%s] must be same, actual the [%s] of [%s] is [%s] and the [%s] of [%s] is [%s]",
      "Arglist": "op_name,attr_name,param1_name,param2_name,attr_name,param1_name,param1_value,attr_name,param2_name,param2_value"
    },
    {
      "ErrCode": "E60003",
      "ErrMessage": "When dtype of a is [%s], the op[%s] out dtype must in [%s], actual out dtype is [%s]",
      "Arglist": "a_dtype,op_name,expected_dtype_list,out_dtype"
    },
    {
      "ErrCode": "E60004",
      "ErrMessage": "The format of [%s] of op[%s] must in [%s], actual format is [%s]",
      "Arglist": "param_name,op_name, expected_format_list,format"
    },
    {
      "ErrCode": "E60005",
      "ErrMessage": "The dtype of [%s] of op[%s] must in [%s], actual dtype is [%s]",
      "Arglist": "param_name,op_name,expected_dtype_list,dtype"
    },
    {
      "ErrCode": "E60006",
      "ErrMessage": "In op[%s], the dim of [%s] must be [%s], actual input is [%s]",
      "Arglist": "op_name,param_name,expected_length,length"
    },
    {
      "ErrCode": "E60007",
      "ErrMessage": "When the shape of a is [%s] and the shape of b is [%s], the shape of c of op [%s] must be [%s], actual input is [%s]",
      "Arglist": "a_shape,b_shape,op_name,expected_shape,shape"
    },
    {
      "ErrCode": "E60008",
      "ErrMessage": "The original format of [%s] of op[%s] must in [%s], actual format is [%s]",
      "Arglist": "param_name,op_name,expected_format_list,format"
    },
    {
      "ErrCode": "E60009",
      "ErrMessage": "In op [%s], the 1d value of shape a should be equal to 0d value of shape b, actual input are [%s] and [%s]",
      "Arglist": "op_name,a_1d,b_0d"
    },
    {
      "ErrCode": "E60010",
      "ErrMessage": "In op[%s], the channel of a should be equal to  filter's, actual input are [%s] and [%s]",
      "Arglist": "op_name,channel_of_x,channel_of_filter"
    },
    {
      "ErrCode": "E60011",
      "ErrMessage": "In op[%s], the [%s] must in range [%s], actual is [%s]",
      "Arglist": "op_name,attr_name,range,value"
    },
    {
      "ErrCode": "E60012",
      "ErrMessage": "In op[%s], the depth of feature map after padding can not be less than shape_filter's, actual are [%s] and [%s]",
      "Arglist": "op_name,depth_of_x,depth_of_filter"
    },
    {
      "ErrCode": "E60013",
      "ErrMessage": "In op[%s], the depth of pad must be smaller than shape_filter's, actual are [%s] and [%s]",
      "Arglist": "op_name,depth_of_pad,depth_of_filter"
    },
    {
      "ErrCode": "E60014",
      "ErrMessage": "In op[%s], x H(after pad) must >= filter H, actual are [%s] and [%s]",
      "Arglist": "op_name,h_of_x,h_of_filter"
    },
    {
      "ErrCode": "E60015",
      "ErrMessage": "In op[%s], x W(after pad) must >= filter W, actual are [%s] and [%s]",
      "Arglist": "op_name,w_of_x,w_of_filter"
    },
    {
      "ErrCode": "E60016",
      "ErrMessage": "In op[%s],filter H must > Pad H, actual are [%s] and [%s]",
      "Arglist": "op_name,h_of_filter,h_of_pad"
    },
    {
      "ErrCode": "E60017",
      "ErrMessage": "In op[%s],filter W must > Pad W, actual are [%s] and [%s]",
      "Arglist": "op_name,w_of_filter,w_of_pad"
    },
    {
      "ErrCode": "E60018",
      "ErrMessage": "In op[%s], x W(after pad) must >= stride W, actual are [%s] and [%s]",
      "Arglist": "op_name,w_of_x,w_of_filter"
    },
    {
      "ErrCode": "E60019",
      "ErrMessage": "In op[%s], x W(after pad) must >= stride W, actual are [%s] and [%s]",
      "Arglist": "op_name,w_of_x,w_of_stride"
    },
    {
      "ErrCode": "E60020",
      "ErrMessage": "In op[%s], [%s] exceed 64 bit limitations",
      "Arglist": "op_name,attr_name"
    },
    {
      "ErrCode": "E60021",
      "ErrMessage": "In op [%s], only support pads model [%s], actual is [%s]",
      "Arglist": "op_name,expected_pad_mode,actual_pad_mode"
    },
    {
      "ErrCode": "E60022",
      "ErrMessage": "In op[%s], Invalid input size due to large kernel size and stride",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E60023",
      "ErrMessage": "In op[%s], Dilations in the batch and depth dimensions must be 1,actual are [%s] and [%s].",
      "Arglist": "op_name,dilation_n,dilation_c"
    },
    {
      "ErrCode": "E60024",
      "ErrMessage": "In op[%s], Shape error : The compute result of H under convolution rule cannot match",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E60025",
      "ErrMessage": "In op[%s], Shape error : The compute result of W under convolution rule cannot match",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E60026",
      "ErrMessage": "In op[%s], Input is too large, the minimum tiling may exceed L1_Buffer",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E60027",
      "ErrMessage": "In V200 op[%s],dilation_h and dilation_w must be 1,actual are [%s] and  [%s]",
      "Arglist": "op_name,dilation_h,dilation_w"
    },
    {
      "ErrCode": "E60101",
      "ErrMessage": "In op[%s], the last 2 dim of [%s] should be [%s], actual are [%s] ",
      "Arglist": "op_name,param_name,expected_two_dims,actual_two_dim"
    },
    {
      "ErrCode": "E60102",
      "ErrMessage": "When the shape of a is [%s] and the shape of b is [%s], the first 2 dims of c of op[%s] must be [%s], actual input is [%s]",
      "Arglist": "a_shape,b_shape,op_name,expected_first_two_dims,two_dim"
    },
    {
      "ErrCode": "E60103",
      "ErrMessage": "In op[%s], block_in of a should be [%s], actual input is [%s]",
      "Arglist": "op_name,expected_value,value"
    },
    {
      "ErrCode": "E60104",
      "ErrMessage": "In op[%s], block_reduce of a should be [%s], actual input is [%s]",
      "Arglist": "op_name,expected_value,value"
    },
    {
      "ErrCode": "E60105",
      "ErrMessage": "In op[%s], block_out of b should be [%s], actual input is [%s]",
      "Arglist": "op_name,expected_value,value"
    },
    {
      "ErrCode": "E60106",
      "ErrMessage": "In op[%s], block_reduce of b should be [%s], actual input is [%s]",
      "Arglist": "op_name,expected_value,value"
    },
    {
      "ErrCode": "E60107",
      "ErrMessage": "In op[%s], [%s] should be 4d list",
      "Arglist": "op_name,param_name"
    },
    {
      "ErrCode": "E60108",
      "ErrMessage": "In op[%s], [%s]",
      "Arglist": "op_name,reason"
    },
    {
      "ErrCode": "E60109",
      "ErrMessage": "In op[%s], input_memory_type should be 0 or 2, actual is [%s]",
      "Arglist": "op_name,input_memory_type"
    },
    {
      "ErrCode": "E60110",
      "ErrMessage": "In op[%s], output_memory_type should be 0 or 2, actual [%s]",
      "Arglist": "op_name,output_memory_type"
    },
    {
      "ErrCode": "E60111",
      "ErrMessage": "In op[%s], slice_offset is valid, actual is [%s]",
      "Arglist": "op_name,slice_offset"
    },
    {
      "ErrCode": "E60112",
      "ErrMessage": "In op[%s], valid_shape is valid, actual valid_shape is [%s] and shape_in is [%s]",
      "Arglist": "op_name,valid_shape,shape_in"
    },
    {
      "ErrCode": "E60113",
      "ErrMessage": "When dtype of b is int8, the op[%s]'s parameter[transpose_b] value must be False.",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E60114",
      "ErrMessage": "In op[%s], [%s],actual is [%s]",
      "Arglist": "op_name,reason,value"
    },
    {
      "ErrCode": "E60028",
      "ErrMessage": "The op [%s] input parameter [%s] should be [%s] type, but the type you enter is [%s]",
      "Arglist": "opname,param_name, optype,optype"
    },
    {
      "ErrCode": "E60029",
      "ErrMessage": "The op [%s] [%s] input does not contain the [%s] key",
      "Arglist": "op_name,param_name, key"
    },
    {
      "ErrCode": "E60030",
      "ErrMessage": "The  length of input [%s] of [%s] op needs to be [%s],but the length is [%s]",
      "Arglist": "param_name, op_name, expected_length, length"
    },
    {
      "ErrCode": "E60031",
      "ErrMessage": "The  format of input [%s] of [%s] op needs to be [%s], but the format you enter is [%s]",
      "Arglist": "param_name,op_name,expeted_format_list,format"
    },
    {
      "ErrCode": "E60032",
      "ErrMessage": "The input[%s] data type of the op[%s] is [%s], but the data type you enter is [%s]",
      "Arglist": "param_name, op_name, expected_data_type_list,data_type"
    },
    {
      "ErrCode": "E60033",
      "ErrMessage": "The op [%s] has rule: %s, but [%s] is [%s]",
      "Arglist": "op_name, rule_desc, param_name,param_value"
    },
    {
      "ErrCode": "E60034",
      "ErrMessage": "The op [%s]'s kernel name[%s] is invalid, it can only contain letters, numbers and underscores, and begin with underscores or letters",
      "Arglist": "op_name,kernel_name"
    },
    {
      "ErrCode": "E60035",
      "ErrMessage": "The op [%s] does not support this fusion mode",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E60037",
      "ErrMessage": "In op[%s], the type of [%s] should be in [%s], actual is [%s]",
      "Arglist": "op_name,param_name,type_list,type"
    },
    {
      "ErrCode": "E60038",
      "ErrMessage": "In op[%s], [%s]",
      "Arglist": "op_name,desc"
    },
    {
      "ErrCode": "E60039",
      "ErrMessage": "In op[%s], the [%s] of [%s] should be [%s] than [%s], actual is [%s]",
      "Arglist": "op_name,attr_name,param_name,comparator,expected_value,input_value"
    },
    {
      "ErrCode": "E60040",
      "ErrMessage": "The op[%s] [%s] requires attribute [%s]",
      "Arglist": "op_name,param_name,attr_name"
    },
    {
      "ErrCode": "E60115",
      "ErrMessage": "The op [%s] get illegal tiling parameter",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E60116",
      "ErrMessage": "tiling query has rule: %s",
      "Arglist": "rule_desc"
    },
    {
      "ErrCode": "E60117",
      "ErrMessage": "Failed to generate solution space, because of %s",
      "Arglist": "cause_desc"
    },
    {
      "ErrCode": "E60118",
      "ErrMessage": "Invalid platform,only support [%s]",
      "Arglist": "platform_desc"
    },
    {
      "ErrCode": "E60119",
      "ErrMessage": "In op[%s], Input is too large, the minimum tiling may exceed UB_Buffer",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E61000",
      "ErrMessage": "In op [%s], [%s] should be 4d list",
      "Arglist": "op_name,param_name"
    },
    {
      "ErrCode": "E61001",
      "ErrMessage": "In op [%s], [%s]",
      "Arglist": "op_name,reason"
    },
    {
      "ErrCode": "E61203",
      "ErrMessage": "In op [%s], [%s] , the value is [%s] and [%s]",
      "Arglist": "op_name,sence_params,param_1,param_2"
    },
    {
      "ErrCode": "E61204",
      "ErrMessage": "In op [%s], [%s] , the value is [%s]",
      "Arglist": "op_name,sence_params,param_1"
    },
    {
      "ErrCode": "E61205",
      "ErrMessage": "In op[%s], [%s]",
      "Arglist": "op_name,reason"
    },
    {
      "ErrCode": "E61300",
      "ErrMessage": "In op [%s], [%s] must be [%s] [%s]",
      "Arglist": "op_name,param_name,expect_value,condition"
    },
    {
      "ErrCode": "E61301",
      "ErrMessage": "In op [%s], [%s] must be equal to [%s]",
      "Arglist": "op_name,param_name_1,param_name_2"
    },
    {
      "ErrCode": "E61500",
      "ErrMessage": "In op [%s], input_memory_type should be 0 or 1 or 2, actual is [%s]",
      "Arglist": "op_name,input_memory_type"
    },
    {
      "ErrCode": "E61501",
      "ErrMessage": "In op [%s], output_memory_type should be 0 or 1 or 2, actual [%s]",
      "Arglist": "op_name,output_memory_type"
    },
    {
      "ErrCode": "E61600",
      "ErrMessage": "In op [%s] param [%s] must > 0",
      "Arglist": "op_name, param"
    },
    {
      "ErrCode": "E61601",
      "ErrMessage": "In op [%s], if it is the [%s] cut shape, the [%s] must be [%s]",
      "Arglist": "op_name,scene,param_name"
    },
    {
      "ErrCode": "E61602",
      "ErrMessage": "In op [%s] input parameter [%s] should be [%s] type, but the type you enter is [%s]",
      "Arglist": "op_name, param_name, optype_1, optype_2"
    },
    {
      "ErrCode": "E61603",
      "ErrMessage": "In op [%s] [%s] must equal to [%s]",
      "Arglist": "op_name, optype_1, optype_2"
    },
    {
      "ErrCode": "E62001",
      "ErrMessage": "In op[%s],dilation_h, dilation_w and dilation_d must be 1,actual are [%s], [%s] and  [%s].",
      "Arglist": "op_name,para1,para2,para3"
    },
    {
      "ErrCode": "E62002",
      "ErrMessage": "In op[%s], the type and dim of [%s] must be  [%s] and [%s], actual they are  [%s] and [%s] respectively.",
      "Arglist": "op_name,param_name,expected_type,expected_length,type,length"
    },
    {
      "ErrCode": "E62003",
      "ErrMessage": "In op[%s], the size of [%s] on [%s] dimension should be in range [%s], but it is [%s].",
      "Arglist": "op_name,para1,para2,para3,para4"
    },
    {
      "ErrCode": "E62004",
      "ErrMessage": "In op[%s],filter D must > Pad D, actual they are [%s] and [%s].",
      "Arglist": "op_name,para1,para2"
    },
    {
      "ErrCode": "E62005",
      "ErrMessage": "In op[%s], x D(after pad) must >= stride D, actual they are [%s] and [%s].",
      "Arglist": "op_name,para1,para2"
    },
    {
      "ErrCode": "E62006",
      "ErrMessage": "In op[%s],[%s].",
      "Arglist": "op_name,para1"
    },
    {
      "ErrCode": "E62301",
      "ErrMessage": "In op[%s], the second value of BL1_shape should be a factor of  the block num, actual input is [%s].",
      "Arglist": "op_name,para1"
    },
    {
      "ErrCode": "E62302",
      "ErrMessage": "In op[%s], the second value of BL1_shape should be even number, but actually it is [%s].",
      "Arglist": "op_name,para1"
    },
    {
      "ErrCode": "E62303",
      "ErrMessage": "In op[%s], the value of AL1_shape & BL1_shape are  not reasonable, which are [%s] and [%s].",
      "Arglist": "op_name,para1,para2"
    },
    {
      "ErrCode": "E62304",
      "ErrMessage": "In op[%s], the dim of [%s] should be [%s], but it is  [%s].",
      "Arglist": "op_name,para1,para2,para3"
    },
    {
      "ErrCode": "E62305",
      "ErrMessage": "In op[%s], the value of [%s] should be [%s], but it is  [%s].",
      "Arglist": "op_name,param_name,expect_value,value"
    },
    {
      "ErrCode": "E62306",
      "ErrMessage": "In op[%s], [%s].",
      "Arglist": "op_name,para1"
    },
    {
      "ErrCode": "E62501",
      "ErrMessage": "In op[%s], [%s] should be 6d list.",
      "Arglist": "op_name,para1"
    },
    {
      "ErrCode": "E62502",
      "ErrMessage": "In op[%s], there is a division by zero operation during calculating, the oprands are [%s] and [%s]. ",
      "Arglist": "op_name,para1,para2"
    },
    {
      "ErrCode": "E62503",
      "ErrMessage": "In op[%s], the  Fmap's batch must be equal to the batch in backpropagation, it should be [%s], but actually it is [%s].",
      "Arglist": "op_name,para1,para2"
    },
    {
      "ErrCode": "E62504",
      "ErrMessage": "In op[%s], the  Dedy's channel must be equal to the Filter's batch in backpropagation, it should be [%s], but actually it is [%s].",
      "Arglist": "op_name,para1,para2"
    },
    {
      "ErrCode": "E62505",
      "ErrMessage": "In op[%s], the  input's channel must be equal to the Filter's batch in backpropagation, it should be [%s], but actually it is [%s].",
      "Arglist": "op_name,para1,para2"
    },
    {
      "ErrCode": "E62506",
      "ErrMessage": "In op[%s], the  Dedy's channel must be equal to the Filter's channel in backpropagation, it should be [%s], but actually it is [%s].",
      "Arglist": "op_name,para1,para2"
    },
    {
      "ErrCode": "E62507",
      "ErrMessage": "In op[%s], the [%s] dim of Filter(after dilation) must be less than the corresponding dim of input(after padding), they are [%s] and [%s].",
      "Arglist": "op_name,para1,para2,para3"
    },
    {
      "ErrCode": "E62508",
      "ErrMessage": "In op[%s], Shape error : The compute result of D under convolution rule cannot match.",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E62509",
      "ErrMessage": "In op[%s], the type of axis of [%s] must be positive int.",
      "Arglist": "op_name,para1"
    },
    {
      "ErrCode": "E62510",
      "ErrMessage": "In op[%s], Dilations in the batch and channel dimensions must be 1.",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E62511",
      "ErrMessage": "In op[%s], C0 must be 16, but actually it is [%s].",
      "Arglist": "op_name,para1"
    },
    {
      "ErrCode": "E64001",
      "ErrMessage": "In op[%s], the [%s] must be int and in range [%s], actual is [%s]",
      "Arglist": "op_name,attr_name, range, value"
    },
    {
      "ErrCode": "E64002",
      "ErrMessage": "In op[%s], [%s] must be equal to [%s], while the input of them are [%s]",
      "Arglist": "op_name, param1, param2, actual_value"
    },
    {
      "ErrCode": "E64003",
      "ErrMessage": "In op[%s], shape format of [%s] must be [%s], and the dim is [%s], actual the dim is [%s]",
      "Arglist": "op_name, param_name, format, expect_dim, dim"
    },
    {
      "ErrCode": "E64004",
      "ErrMessage": "In op[%s], The type of axis of [%s] must be [%s], actual the [%s]ed axis is [%s]",
      "Arglist": "op_name, param_name, axis_rule, wrong_axis, actual_value"
    },
    {
      "ErrCode": "E64005",
      "ErrMessage": "In op[%s], pads must less than filter In [%s], actual input of [%s] are [%s] while filter is [%s]",
      "Arglist": "op_name, direction, pads_dir, pads_value, filter_value "
    },
    {
      "ErrCode": "E64006",
      "ErrMessage": "In tiling of op [%s], k of [%s] must be integral multiply of [%s], actual are [%s] and [%s]",
      "Arglist": "op_name, param_1, param_2, value_1, value_2"
    },
    {
      "ErrCode": "E64007",
      "ErrMessage": "In tiling of op [%s], [%s] of L1 must be integral multiply of L0, that mean [%s] must >=1, actual it is [%s]",
      "Arglist": "op_name, axis_name, param_name, param_value"
    },
    {
      "ErrCode": "E64008",
      "ErrMessage": "In tiling of op [%s], [%s] of [%s] and [%s] must be same, actual they are [%s] and [%s]",
      "Arglist": "op_name, axis_name, param_1, param_2, value_1, value_2"
    },
    {
      "ErrCode": "E64009",
      "ErrMessage": "In tiling of op [%s], it has rules: CUB_matrix[1] = CL0_matrix[1], CUB_matrix[0] is a factor of CL0_matrix[0]",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E64010",
      "ErrMessage": "In tiling of op [%s], value of [%s] can only be 1 or 2, while the value is [%s]",
      "Arglist": "op_name, buffer_name, value"
    },
    {
      "ErrCode": "E65001",
      "ErrMessage": "In op [%s], The type of axis of [%s] must be [%s], actual the [%s]ed axis is [%s]",
      "Arglist": "op_name, param_name, axis_rule, wrong_axis, actual_value"
    },
    {
      "ErrCode": "E65002",
      "ErrMessage": "In op [%s], the dtype of [%s] and [%s] must be equal",
      "Arglist": "op_name, param_1, param_2"
    },
    {
      "ErrCode": "E65003",
      "ErrMessage": "In op[%s], shape format of [%s] must be [%s], and the dim is [%s], actual the dim is [%s]",
      "Arglist": "op_name, param_name, format, expect_dim, dim"
    },
    {
      "ErrCode": "E65004",
      "ErrMessage": "In op[%s], deconvolution not support offset_w now.",
      "Arglist": "op_name"
    },
    {
      "ErrCode": "E65005",
      "ErrMessage": "In op[%s], [%s] must <= [%s]",
      "Arglist": "op_name, param_1, param_2"
    },
    {
      "ErrCode": "E65006",
      "ErrMessage": "In op[%s], the [%s] must be int and in range [%s], actual is [%s]",
      "Arglist": "op_name, attr_name, range, value"
    },
    {
      "ErrCode": "E65007",
      "ErrMessage": "In op[%s], [%s] must be equal to [%s], while the input of them are [%s]",
      "Arglist": "op_name, param1, param2, actual_value"
    },
    {
      "ErrCode": "E65008",
      "ErrMessage": "In op [%s], input_memory_type should be [%s], actual is [%s]",
      "Arglist": "op_name, input_memory_type_range, input_memory_type"
    },
    {
      "ErrCode": "E65009",
      "ErrMessage": "In op [%s], output_memory_type should be [%s], actual is [%s]",
      "Arglist": "op_name, output_memory_type_range, output_memory_type"
    },
    {
      "ErrCode": "E70001",
      "ErrMessage": "In op[%s], the mandatory parameter[%s] is missed.",
      "Arglist": "op_name,param_name"
    },
    {
      "ErrCode": "E70002",
      "ErrMessage": "In op[%s], the format of input[%s] should be one of [%s], but actually is [%s].",
      "Arglist": "op_name,param_name,expected_format_list,format"
    },
    {
      "ErrCode": "E70003",
      "ErrMessage": "In op[%s], the dtype of input[%s] should be one of [%s], but actually is [%s].",
      "Arglist": "op_name,param_name,expected_data_type_list,data_type"
    },
    {
      "ErrCode": "E70004",
      "ErrMessage": "In op[%s], the parameter[%s]'s type should be [%s],  but actually is [%s].",
      "Arglist": "op_name,param_name,param_type,actual_type"
    },
    {
      "ErrCode": "E70005",
      "ErrMessage": "Op[%s] get attr[%s] failed.",
      "Arglist": "op_name,param_name"
    },
    {
      "ErrCode": "E70006",
      "ErrMessage": "Op[%s] set attr[%s] failed.",
      "Arglist": "op_name,param_name"
    },
    {
      "ErrCode": "E70007",
      "ErrMessage": "The op[%s] input parameter[%s] should be [%s], actual the input is [%s].",
      "Arglist": "op_name,param_name,excepted_value,input_value"
    },
    {
      "ErrCode": "E70008",
      "ErrMessage": "The op [%s] update [%s] param failed.",
      "Arglist": "op_name,param_name"
    },
    {
      "ErrCode": "E70009",
      "ErrMessage": "The op [%s] has rule: %s, but [%s] is [%s].",
      "Arglist": "op_name,rule_desc,param_name,param_value"
    },
    {
      "ErrCode": "E70010",
      "ErrMessage": "In op[%s], the shape size(product of all dimensions) of input[%s] should less than [%s], but actually is [%s].",
      "Arglist": "op_name,input_name,max_value,real_value"
    },
    {
      "ErrCode": "E70011",
      "ErrMessage": "In op[%s], the num of dimensions of input[%s] should be in the range of [%s, %s], but actually is [%s].",
      "Arglist": "op_name,param_name,max_value,min_value,real_value"
    },
    {
      "ErrCode": "E70012",
      "ErrMessage": "In op[%s], the inputs[%s][%s] could not be broadcast together with shapes[%s][%s].",
      "Arglist": "op_name,input1_name,input2_name,input1_shape,input2_shape"
    },
    {
      "ErrCode": "E70013",
      "ErrMessage": "In op[%s], the dtype of inputs[%s][%s] should be same, but actually is [%s][%s].",
      "Arglist": "op_name,input1_name,input2_name,input1_dtype,input2_dtype"
    },
    {
      "ErrCode": "E70014",
      "ErrMessage": "In op[aipp], aipp output H and W should be equal to data's H and W, but actually aipp output H is [%s], aipp output W is [%s], data's H is [%s], data's W is [%s].",
      "Arglist": "aipp_output_H,aipp_output_W,data_H,data_W"
    },
    {
      "ErrCode": "E70015",
      "ErrMessage": "In op[%s], the shape of input[%s] is invalid, [%s].",
      "Arglist": "op_name,param_name,error_detail"
    },
    {
      "ErrCode": "E70016",
      "ErrMessage": "In op[%s], the shape of inputs[%s][%s] are invalid, [%s].",
      "Arglist": "op_name,param_name1,param_name2,error_detail"
    },
    {
      "ErrCode": "E70017",
      "ErrMessage": "In op[%s], the shape of output[%s] is invalid, [%s].",
      "Arglist": "op_name,param_name,error_detail"
    },
    {
      "ErrCode": "E70018",
      "ErrMessage": "In op[%s], failed to get compileparams, mainly get [%s] error.",
      "Arglist": "op_name,param_name"
    },
    {
      "ErrCode": "EA0000",
      "ErrMessage": "Compile operator failed, cause: %s, %s",
      "Arglist": "message,traceback"
    },
    {
      "ErrCode": "E90000",
      "ErrMessage": "Compile operator failed, cause: %s %s",
      "Arglist": "message,traceback"
    },
    {
      "ErrCode": "E90001",
      "ErrMessage": "Compile operator failed, cause: Parameters check failed, detailed information: %s.",
      "Arglist": "detailed_cause"
    },
    {
      "ErrCode": "E90002",
      "ErrMessage": "Compile operator failed, cause: The limitation of instruction, detailed information: %s.",
      "Arglist": "detailed_cause"
    },
    {
      "ErrCode": "E90003",
      "ErrMessage": "Compile operator failed, cause: Template constraint, detailed information: %s.",
      "Arglist": "detailed_cause"
    },
    {
      "ErrCode": "E68000",
      "ErrMessage": "the tiling_type is error, only support [%s], but tiling_type is [%s].",
      "Arglist": "expect_value,real_value"
    },
    {
      "ErrCode": "E68001",
      "ErrMessage": "info_dict should be dict, but the input type is [%s].",
      "Arglist": "real_value"
    },
    {
      "ErrCode": "E68002",
      "ErrMessage": "the keyword [%s] is missing in input params.",
      "Arglist": "keyword"
    },
    {
      "ErrCode": "E68003",
      "ErrMessage": "only support: [%s], but the input is [%s].",
      "Arglist": "expect_value,real_value"
    },
    {
      "ErrCode": "E68004",
      "ErrMessage": "the type of param is illegal, only support [%s], but the type of param is [%s].",
      "Arglist": "expect_value,real_value"
    },
    {
      "ErrCode": "E68005",
      "ErrMessage": "the length of param is illegal, only support [%s], but the length of param is [%s].",
      "Arglist": "expect_value,real_value"
    },
    {
      "ErrCode": "E68006",
      "ErrMessage": "the input param is illegal, don't support [%s], but the param is [%s].",
      "Arglist": "not_expect_value,real_value"
    },
    {
      "ErrCode": "E68007",
      "ErrMessage": "the input param is illegal, only support [%s], but the param is [%s].",
      "Arglist": "expect_value,real_value"
    },
    {
      "ErrCode": "E68008",
      "ErrMessage": "the fm_l1_valid_size must be 1/2, 3/4, 1 times fm_shape_size, but fm_l1_valid_size is [%s], fm_shape_size is [%s].",
      "Arglist": "fm_l1_valid_size,fm_shape_size"
    },
    {
      "ErrCode": "E68009",
      "ErrMessage": "when it is tuning tiling mode, illegal current input params is: [%s].",
      "Arglist": "current_value"
    },
    {
      "ErrCode": "E68010",
      "ErrMessage": "when it is tuning tiling mode, illegal previous input params is: [%s].",
      "Arglist": "previous_value"
    },
    {
      "ErrCode": "E68011",
      "ErrMessage": "tiling params is changed, previous input is [%s], current input is [%s].",
      "Arglist": "previous_value,current_value"
    },
    {
      "ErrCode": "E68012",
      "ErrMessage": "tiling mode is not tuning tiling, current is [%s].",
      "Arglist": "real_value"
    },
    {
      "ErrCode": "E68013",
      "ErrMessage": "only support legal tiling, but the return value of tiling is [%s].",
      "Arglist": "real_value"
    },
    {
      "ErrCode": "E68014",
      "ErrMessage": "the tiling_type is error, dynamic shape not support [%s].",
      "Arglist": "real_value"
    },
    {
      "ErrCode": "E68015",
      "ErrMessage": "only support [%s], but the type of return value is [%s].",
      "Arglist": "expect_value,real_value"
    },
    {
      "ErrCode": "E68016",
      "ErrMessage": "the environment path [%s] is not set or invalid, expect [%s].",
      "Arglist": "env_name,expect_value"
    },
    {
      "ErrCode": "E68017",
      "ErrMessage": "the [%s] model does not support [%s] type.",
      "Arglist": "tiling_model,tiling_type"
    },
    {
      "ErrCode": "E68050",
      "ErrMessage": "[%s] close failed.",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68051",
      "ErrMessage": "[%s] should not be empty.",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68052",
      "ErrMessage": "get function [%s] failed.",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68053",
      "ErrMessage": "only support: [%s].",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68054",
      "ErrMessage": "[%s] plugin handler is NULL!",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68055",
      "ErrMessage": "mode = [%s] is not found in [%s].",
      "Arglist": "mode_name,param_name"
    },
    {
      "ErrCode": "E68056",
      "ErrMessage": "platform flag [%s] is not supported.",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68057",
      "ErrMessage": "not support costmodel query for platform flag [%s].",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68058",
      "ErrMessage": "not support costmodel query for opTag [%s].",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68059",
      "ErrMessage": "cannot find corresponding hardware platform name for platform flag [%s].",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68060",
      "ErrMessage": "cannot find corresponding op name for opTag [%s].",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68061",
      "ErrMessage": "not support repository query for platform flag [%s].",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68062",
      "ErrMessage": "not support repository query for opTag [%s].",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68063",
      "ErrMessage": "cannot find corresponding platform flag for platform [%s].",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68064",
      "ErrMessage": "CceConfBase::GetInstance Failed.",
      "Arglist": ""
    },
    {
      "ErrCode": "E68065",
      "ErrMessage": "cannot find corresponding loaded [%s].",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68066",
      "ErrMessage": "current operation caused data overflow.",
      "Arglist": ""
    },
    {
      "ErrCode": "E68067",
      "ErrMessage": "tiling index [%s] should not be [%s].",
      "Arglist": "index_name,not_expect_value"
    },
    {
      "ErrCode": "E68068",
      "ErrMessage": "kAL1/kBL1 should be greater than 0 and less than or equal to l1buffer.",
      "Arglist": ""
    },
    {
      "ErrCode": "E68069",
      "ErrMessage": "[%s] should be less than or equal to [%s].",
      "Arglist": "param_name,threshhold"
    },
    {
      "ErrCode": "E68070",
      "ErrMessage": "size of [%s] should be greater than [%s].",
      "Arglist": "size_value,threshhold"
    },
    {
      "ErrCode": "E68071",
      "ErrMessage": "mDim is zero, illegal!",
      "Arglist": ""
    },
    {
      "ErrCode": "E68072",
      "ErrMessage": "divisor can not be zero!",
      "Arglist": ""
    },
    {
      "ErrCode": "E68073",
      "ErrMessage": "The keyword [%s] is not in [%s].",
      "Arglist": "key_name,param_name"
    },
    {
      "ErrCode": "E68074",
      "ErrMessage": "run function [%s] failed.",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68075",
      "ErrMessage": "[%s] can not be zero.",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68076",
      "ErrMessage": "value at index [%s] of [%s] can not be zero.",
      "Arglist": "index_name,param_name"
    },
    {
      "ErrCode": "E68077",
      "ErrMessage": "the length of all features not up to 46.",
      "Arglist": ""
    },
    {
      "ErrCode": "E68078",
      "ErrMessage": "size of index should be even.",
      "Arglist": ""
    },
    {
      "ErrCode": "E68079",
      "ErrMessage": "cost model close failed.",
      "Arglist": ""
    },
    {
      "ErrCode": "E68080",
      "ErrMessage": "cost model can not be NULL!",
      "Arglist": ""
    },
    {
      "ErrCode": "E68081",
      "ErrMessage": "doing [%s] node decompress fail.",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68082",
      "ErrMessage": "the [%s] tree node can not be NULL!",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68083",
      "ErrMessage": "repository is empty!",
      "Arglist": ""
    },
    {
      "ErrCode": "E68084",
      "ErrMessage": "the readable length of key and value of repository are not equal!",
      "Arglist": ""
    },
    {
      "ErrCode": "E68085",
      "ErrMessage": "current op can not be L1 fusion.",
      "Arglist": ""
    },
    {
      "ErrCode": "E68086",
      "ErrMessage": "current op can not be L1/L2 fusion.",
      "Arglist": ""
    },
    {
      "ErrCode": "E68087",
      "ErrMessage": "size of [%s] should be greater than or equal to [%s].",
      "Arglist": "size_value,threshhold"
    },
    {
      "ErrCode": "E68088",
      "ErrMessage": "[%s] open failed.",
      "Arglist": "param_name"
    },
    {
      "ErrCode": "E68089",
      "ErrMessage": "tiling is not found in repository file.",
      "Arglist": ""
    },
    {
      "errClass": "TBE Pass Compilation Tool Errors(Back-End)",
      "errTitle": "Invalid IR",
      "ErrCode": "EB0000",
      "ErrMessage": "Failed to compile the operator. Reason:%s, %s",
      "Arglist": "message,traceback",
      "suggestion": {
        "Possible Cause": "The IR is invalid.",
        "Solution": "Check that the Compute and Schedule APIs are used correctly. For details, see the TBE Custom Operator Developer Guide. If the error persists, contact Huawei technical support."
      }
    },
    {
      "errClass": "TBE Pass Compiler Errors",
      "errTitle": "Primitives Error",
      "ErrCode": "EB1000",
      "ErrMessage": "Primitives check failed. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "1.The Primitives are not properly usedor not aligned. 2. Incorrect parameter types are used. 3. The correct primitive is not punched on the corresponding axis.",
        "Solution": "Check the schedule and compute statements to ensure that the schedule is correct."
      }
    },
    {
      "errClass": "TBE Pass Compiler Errors",
      "errTitle": "Memory Error",
      "ErrCode": "EB3000",
      "ErrMessage": "Memory allocation check failed. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "The allocated memory is out of the allowed range.",
        "Solution": "Check whether the size of the specified memory is incorrectly calculated."
      }
    },
   {
      "errClass": "TBE Pass Compiler Errors",
      "errTitle": "Emit Insn Error",
      "ErrCode": "EB4000",
      "ErrMessage": "Insn check failed. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "The command parameter is incorrect.",
        "Solution": "Check whether the offset address of the instruction map is aligned and whether the correct instruction is selected."
      }
    },
   {
      "errClass": "TBE Pass Compiler Errors",
      "errTitle": "Common Compilation Optimization Error",
      "ErrCode": "EB9000",
      "ErrMessage": "Compiler Error check failed. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "The IR is invalid.",
        "Solution": "N/A"
      }
    },
    {
      "errClass": "TBE Pass Compiler Errors",
      "errTitle": "Common Compilation Python Error",
      "ErrCode": "EB0500",
      "ErrMessage": "Compiler Error check failed. Reason: %s",
      "Arglist": "reason",
      "suggestion": {
        "Possible Cause": "Please analyze reason according to the ErrMessage.",
        "Solution": "Please modify the configuration according to the ErrMessage."
      }
    },
    {
      "errClass": "Vector Errors",
      "errTitle": "Invalid Config Value",
      "ErrCode": "E80001",
      "ErrMessage": "The %s information is missing in the %s configuration file of OPP package",
      "Arglist": "config_name, file_name",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "try to reinstall the OPP package."
      }
    },
    {
      "errClass": "AclNN Errors",
      "errTitle": "AclNN Inner Error",
      "ErrCode": "EZ9999",
      "ErrMessage": "%s",
      "Arglist": "message",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check whether the CANN package is correct.\n2. Check whether the environment variable is correct."
      }
    },
    {
      "errClass": "AclNN Errors",
      "errTitle": "AclNN Parameter Error",
      "ErrCode": "EZ1001",
      "ErrMessage": "%s",
      "Arglist": "message"
    },
    {
      "errClass": "AclNN Errors",
      "errTitle": "AclNN Runtime Error",
      "ErrCode": "EZ9903",
      "ErrMessage": "%s",
      "Arglist": "message",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "In this scenario, collect the plog when the fault occurs and locate the fault based on the plog."
      }
    },
    {
      "errClass": "Operator Errors",
      "errTitle": "Invalid Input Shape",
      "ErrCode": "EZ0001",
      "ErrMessage": "OP[%s] %sth input has incorrect shape[: %s], it should be[: %s].",
      "Arglist": "op_name, index, incorrect_shape, correct_shape",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check whether the input shape is correct.\n2. Dump GE Graph, find error node in graph and check the shape."
      }
    },
    {
      "errClass": "Operator Errors",
      "errTitle": "Invalid Attr",
      "ErrCode": "EZ0002",
      "ErrMessage": "OP[%s] attr[: %s], has incorrect value[: %s], it should be[: %s].",
      "Arglist": "op_name, attr_name, incorrect_val, correct_val",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check the value of the attribute in this api."
      }
    },
    {
      "errClass": "Operator Errors",
      "errTitle": "Invalid Attr Size",
      "ErrCode": "EZ0003",
      "ErrMessage": "OP[%s] attr[: %s], has incorrect size[: %s], it should be[: %s].",
      "Arglist": "op_name, attr_name, incorrect_size, correct_size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check the size of the attribute in this api"
      }
    },
    {
      "errClass": "Operator Errors",
      "errTitle": "Invalid Input",
      "ErrCode": "EZ0004",
      "ErrMessage": "OP[%s] get [%s] failed.",
      "Arglist": "op_name, param_name",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check the input information of the operator.\n2. Dump GE Graph and check the input in graph."
      }
    },
    {
      "errClass": "Operator Errors",
      "errTitle": "Invalid Input ShapeSize",
      "ErrCode": "EZ0005",
      "ErrMessage": "OP[%s] %sth input has incorrect shape size[: %s], it should be[: %s].",
      "Arglist": "op_name, index, incorrect_size, correct_size",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check input dimensions.\n2. Dump GE Graph, find error node in graph and check input dimension."
      }
    },
    {
      "errClass": "Operator Errors",
      "errTitle": "Invalid Input Format",
      "ErrCode": "EZ0006",
      "ErrMessage": "OP[%s] %s has incorrect format[: %s], it should be %s.",
      "Arglist": "op_name, param_name, data_format, expected_format_list",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check input format.\n2. Dump GE Graph, find error node in graph and check input format."
      }
    },
    {
      "errClass": "Operator Errors",
      "errTitle": "Invalid Input Dtype",
      "ErrCode": "EZ0007",
      "ErrMessage": "OP[%s] %s has incorrect dtype[: %s], it should be %s.",
      "Arglist": "op_name, param_name, data_dtype, expected_dtype_list",
      "suggestion": {
        "Possible Cause": "N/A",
        "Solution": "1. Check input dtype.\n2. Dump GE Graph, find error node in graph and check input dtype."
      }
    }
  ]
}
